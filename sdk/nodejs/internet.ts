// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Internet extends pulumi.CustomResource {
    /**
     * Get an existing Internet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InternetState, opts?: pulumi.CustomResourceOptions): Internet {
        return new Internet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sakuracloud:index/internet:Internet';

    /**
     * Returns true if the given object is an instance of Internet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Internet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Internet.__pulumiType;
    }

    /**
     * The bandwidth of the network connected to the Internet in Mbps.
     * `100`/`250`/`500`/`1000`/`1500`/`2000`/`2500`/`3000`/`5000`
     */
    public readonly bandWidth!: pulumi.Output<number | undefined>;
    /**
     * The description of the Switch+Router. The length of this value must be in the range [`1`-`512`]
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The flag to enable IPv6
     */
    public readonly enableIpv6!: pulumi.Output<boolean | undefined>;
    /**
     * The IP address of the gateway used by the Switch+Router
     */
    public /*out*/ readonly gateway!: pulumi.Output<string>;
    /**
     * The icon id to attach to the Switch+Router
     */
    public readonly iconId!: pulumi.Output<string | undefined>;
    /**
     * A list of assigned global address to the Switch+Router
     */
    public /*out*/ readonly ipAddresses!: pulumi.Output<string[]>;
    /**
     * The IPv6 network address assigned to the Switch+Router
     */
    public /*out*/ readonly ipv6NetworkAddress!: pulumi.Output<string>;
    /**
     * The network prefix of assigned IPv6 addresses to the Switch+Router
     */
    public /*out*/ readonly ipv6Prefix!: pulumi.Output<string>;
    /**
     * The bit length of IPv6 network prefix
     */
    public /*out*/ readonly ipv6PrefixLen!: pulumi.Output<number>;
    /**
     * Maximum IP address in assigned global addresses to the Switch+Router
     */
    public /*out*/ readonly maxIpAddress!: pulumi.Output<string>;
    /**
     * Minimum IP address in assigned global addresses to the Switch+Router
     */
    public /*out*/ readonly minIpAddress!: pulumi.Output<string>;
    /**
     * The name of the Switch+Router. The length of this value must be in the range [`1`-`64`]
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The bit length of the subnet assigned to the Switch+Router. `26`/`27`/`28`
     */
    public readonly netmask!: pulumi.Output<number | undefined>;
    /**
     * The IPv4 network address assigned to the Switch+Router
     */
    public /*out*/ readonly networkAddress!: pulumi.Output<string>;
    /**
     * A list of the ID of Servers connected to the Switch+Router
     */
    public /*out*/ readonly serverIds!: pulumi.Output<string[]>;
    /**
     * The id of the switch
     */
    public /*out*/ readonly switchId!: pulumi.Output<string>;
    /**
     * Any tags to assign to the Switch+Router
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The name of zone that the Switch+Router will be created (e.g. `is1a`, `tk1a`)
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a Internet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: InternetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InternetArgs | InternetState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as InternetState | undefined;
            inputs["bandWidth"] = state ? state.bandWidth : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["enableIpv6"] = state ? state.enableIpv6 : undefined;
            inputs["gateway"] = state ? state.gateway : undefined;
            inputs["iconId"] = state ? state.iconId : undefined;
            inputs["ipAddresses"] = state ? state.ipAddresses : undefined;
            inputs["ipv6NetworkAddress"] = state ? state.ipv6NetworkAddress : undefined;
            inputs["ipv6Prefix"] = state ? state.ipv6Prefix : undefined;
            inputs["ipv6PrefixLen"] = state ? state.ipv6PrefixLen : undefined;
            inputs["maxIpAddress"] = state ? state.maxIpAddress : undefined;
            inputs["minIpAddress"] = state ? state.minIpAddress : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["netmask"] = state ? state.netmask : undefined;
            inputs["networkAddress"] = state ? state.networkAddress : undefined;
            inputs["serverIds"] = state ? state.serverIds : undefined;
            inputs["switchId"] = state ? state.switchId : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as InternetArgs | undefined;
            inputs["bandWidth"] = args ? args.bandWidth : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["enableIpv6"] = args ? args.enableIpv6 : undefined;
            inputs["iconId"] = args ? args.iconId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["netmask"] = args ? args.netmask : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["zone"] = args ? args.zone : undefined;
            inputs["gateway"] = undefined /*out*/;
            inputs["ipAddresses"] = undefined /*out*/;
            inputs["ipv6NetworkAddress"] = undefined /*out*/;
            inputs["ipv6Prefix"] = undefined /*out*/;
            inputs["ipv6PrefixLen"] = undefined /*out*/;
            inputs["maxIpAddress"] = undefined /*out*/;
            inputs["minIpAddress"] = undefined /*out*/;
            inputs["networkAddress"] = undefined /*out*/;
            inputs["serverIds"] = undefined /*out*/;
            inputs["switchId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Internet.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Internet resources.
 */
export interface InternetState {
    /**
     * The bandwidth of the network connected to the Internet in Mbps.
     * `100`/`250`/`500`/`1000`/`1500`/`2000`/`2500`/`3000`/`5000`
     */
    readonly bandWidth?: pulumi.Input<number>;
    /**
     * The description of the Switch+Router. The length of this value must be in the range [`1`-`512`]
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The flag to enable IPv6
     */
    readonly enableIpv6?: pulumi.Input<boolean>;
    /**
     * The IP address of the gateway used by the Switch+Router
     */
    readonly gateway?: pulumi.Input<string>;
    /**
     * The icon id to attach to the Switch+Router
     */
    readonly iconId?: pulumi.Input<string>;
    /**
     * A list of assigned global address to the Switch+Router
     */
    readonly ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IPv6 network address assigned to the Switch+Router
     */
    readonly ipv6NetworkAddress?: pulumi.Input<string>;
    /**
     * The network prefix of assigned IPv6 addresses to the Switch+Router
     */
    readonly ipv6Prefix?: pulumi.Input<string>;
    /**
     * The bit length of IPv6 network prefix
     */
    readonly ipv6PrefixLen?: pulumi.Input<number>;
    /**
     * Maximum IP address in assigned global addresses to the Switch+Router
     */
    readonly maxIpAddress?: pulumi.Input<string>;
    /**
     * Minimum IP address in assigned global addresses to the Switch+Router
     */
    readonly minIpAddress?: pulumi.Input<string>;
    /**
     * The name of the Switch+Router. The length of this value must be in the range [`1`-`64`]
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The bit length of the subnet assigned to the Switch+Router. `26`/`27`/`28`
     */
    readonly netmask?: pulumi.Input<number>;
    /**
     * The IPv4 network address assigned to the Switch+Router
     */
    readonly networkAddress?: pulumi.Input<string>;
    /**
     * A list of the ID of Servers connected to the Switch+Router
     */
    readonly serverIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The id of the switch
     */
    readonly switchId?: pulumi.Input<string>;
    /**
     * Any tags to assign to the Switch+Router
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of zone that the Switch+Router will be created (e.g. `is1a`, `tk1a`)
     */
    readonly zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Internet resource.
 */
export interface InternetArgs {
    /**
     * The bandwidth of the network connected to the Internet in Mbps.
     * `100`/`250`/`500`/`1000`/`1500`/`2000`/`2500`/`3000`/`5000`
     */
    readonly bandWidth?: pulumi.Input<number>;
    /**
     * The description of the Switch+Router. The length of this value must be in the range [`1`-`512`]
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The flag to enable IPv6
     */
    readonly enableIpv6?: pulumi.Input<boolean>;
    /**
     * The icon id to attach to the Switch+Router
     */
    readonly iconId?: pulumi.Input<string>;
    /**
     * The name of the Switch+Router. The length of this value must be in the range [`1`-`64`]
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The bit length of the subnet assigned to the Switch+Router. `26`/`27`/`28`
     */
    readonly netmask?: pulumi.Input<number>;
    /**
     * Any tags to assign to the Switch+Router
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of zone that the Switch+Router will be created (e.g. `is1a`, `tk1a`)
     */
    readonly zone?: pulumi.Input<string>;
}
