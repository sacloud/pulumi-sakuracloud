// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Provides a SakuraCloud Auto Backup resource. This can be used to create, update, and delete Auto Backups.
 *
 * > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/auto_backup.html.markdown.
 */
export class AutoBackup extends pulumi.CustomResource {
    /**
     * Get an existing AutoBackup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutoBackupState, opts?: pulumi.CustomResourceOptions): AutoBackup {
        return new AutoBackup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sakuracloud:index/autoBackup:AutoBackup';

    /**
     * Returns true if the given object is an instance of AutoBackup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutoBackup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutoBackup.__pulumiType;
    }

    /**
     * The description of the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the target disk. 
     */
    public readonly diskId!: pulumi.Output<string>;
    /**
     * The ID of the icon.
     */
    public readonly iconId!: pulumi.Output<string | undefined>;
    /**
     * Max number of backups to keep.
     */
    public readonly maxBackupNum!: pulumi.Output<number | undefined>;
    /**
     * The name of the resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The tag list of the resources.
     */
    public readonly tags!: pulumi.Output<string[]>;
    /**
     * Day of the week to get backup.  
     * Valid values are the following: ["mon", "tue", "wed", "thu", "fri", "sat", "sun"]
     */
    public readonly weekdays!: pulumi.Output<string[]>;
    /**
     * The ID of the zone to which the resource belongs.  
     * Valid value is one of the following: ["is1b" / "tk1a" / "is1a"]
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a AutoBackup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutoBackupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutoBackupArgs | AutoBackupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as AutoBackupState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["diskId"] = state ? state.diskId : undefined;
            inputs["iconId"] = state ? state.iconId : undefined;
            inputs["maxBackupNum"] = state ? state.maxBackupNum : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["weekdays"] = state ? state.weekdays : undefined;
            inputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as AutoBackupArgs | undefined;
            if (!args || args.diskId === undefined) {
                throw new Error("Missing required property 'diskId'");
            }
            if (!args || args.weekdays === undefined) {
                throw new Error("Missing required property 'weekdays'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["diskId"] = args ? args.diskId : undefined;
            inputs["iconId"] = args ? args.iconId : undefined;
            inputs["maxBackupNum"] = args ? args.maxBackupNum : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["weekdays"] = args ? args.weekdays : undefined;
            inputs["zone"] = args ? args.zone : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(AutoBackup.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AutoBackup resources.
 */
export interface AutoBackupState {
    /**
     * The description of the resource.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The ID of the target disk. 
     */
    readonly diskId?: pulumi.Input<string>;
    /**
     * The ID of the icon.
     */
    readonly iconId?: pulumi.Input<string>;
    /**
     * Max number of backups to keep.
     */
    readonly maxBackupNum?: pulumi.Input<number>;
    /**
     * The name of the resource.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The tag list of the resources.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Day of the week to get backup.  
     * Valid values are the following: ["mon", "tue", "wed", "thu", "fri", "sat", "sun"]
     */
    readonly weekdays?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the zone to which the resource belongs.  
     * Valid value is one of the following: ["is1b" / "tk1a" / "is1a"]
     */
    readonly zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AutoBackup resource.
 */
export interface AutoBackupArgs {
    /**
     * The description of the resource.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The ID of the target disk. 
     */
    readonly diskId: pulumi.Input<string>;
    /**
     * The ID of the icon.
     */
    readonly iconId?: pulumi.Input<string>;
    /**
     * Max number of backups to keep.
     */
    readonly maxBackupNum?: pulumi.Input<number>;
    /**
     * The name of the resource.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The tag list of the resources.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Day of the week to get backup.  
     * Valid values are the following: ["mon", "tue", "wed", "thu", "fri", "sat", "sun"]
     */
    readonly weekdays: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the zone to which the resource belongs.  
     * Valid value is one of the following: ["is1b" / "tk1a" / "is1a"]
     */
    readonly zone?: pulumi.Input<string>;
}
