// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages a SakuraCloud Auto Backup.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sakuracloud from "@pulumi/sakuracloud";
 *
 * const foobarDisk = new sakuracloud.Disk("foobarDisk", {});
 * const foobarAutoBackup = new sakuracloud.AutoBackup("foobarAutoBackup", {
 *     diskId: foobarDisk.id,
 *     weekdays: [
 *         "mon",
 *         "tue",
 *         "wed",
 *         "thu",
 *         "fri",
 *         "sat",
 *         "sun",
 *     ],
 *     maxBackupNum: 5,
 *     description: "description",
 *     tags: [
 *         "tag1",
 *         "tag2",
 *     ],
 * });
 * ```
 */
export class AutoBackup extends pulumi.CustomResource {
    /**
     * Get an existing AutoBackup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutoBackupState, opts?: pulumi.CustomResourceOptions): AutoBackup {
        return new AutoBackup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sakuracloud:index/autoBackup:AutoBackup';

    /**
     * Returns true if the given object is an instance of AutoBackup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutoBackup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutoBackup.__pulumiType;
    }

    /**
     * The description of the AutoBackup. The length of this value must be in the range [`1`-`512`].
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The disk id to backed up. Changing this forces a new resource to be created.
     */
    public readonly diskId!: pulumi.Output<string>;
    /**
     * The icon id to attach to the AutoBackup.
     */
    public readonly iconId!: pulumi.Output<string | undefined>;
    /**
     * The number backup files to keep. This must be in the range [`1`-`10`]. Default:`1`.
     */
    public readonly maxBackupNum!: pulumi.Output<number | undefined>;
    /**
     * The name of the AutoBackup. The length of this value must be in the range [`1`-`64`].
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Any tags to assign to the AutoBackup.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * A list of weekdays to backed up. The values in the list must be in [`sun`/`mon`/`tue`/`wed`/`thu`/`fri`/`sat`].
     */
    public readonly weekdays!: pulumi.Output<string[]>;
    /**
     * The name of zone that the AutoBackup will be created. (e.g. `is1a`, `tk1a`). Changing this forces a new resource to be created.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a AutoBackup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutoBackupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutoBackupArgs | AutoBackupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutoBackupState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["diskId"] = state ? state.diskId : undefined;
            inputs["iconId"] = state ? state.iconId : undefined;
            inputs["maxBackupNum"] = state ? state.maxBackupNum : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["weekdays"] = state ? state.weekdays : undefined;
            inputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as AutoBackupArgs | undefined;
            if ((!args || args.diskId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'diskId'");
            }
            if ((!args || args.weekdays === undefined) && !opts.urn) {
                throw new Error("Missing required property 'weekdays'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["diskId"] = args ? args.diskId : undefined;
            inputs["iconId"] = args ? args.iconId : undefined;
            inputs["maxBackupNum"] = args ? args.maxBackupNum : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["weekdays"] = args ? args.weekdays : undefined;
            inputs["zone"] = args ? args.zone : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AutoBackup.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AutoBackup resources.
 */
export interface AutoBackupState {
    /**
     * The description of the AutoBackup. The length of this value must be in the range [`1`-`512`].
     */
    description?: pulumi.Input<string>;
    /**
     * The disk id to backed up. Changing this forces a new resource to be created.
     */
    diskId?: pulumi.Input<string>;
    /**
     * The icon id to attach to the AutoBackup.
     */
    iconId?: pulumi.Input<string>;
    /**
     * The number backup files to keep. This must be in the range [`1`-`10`]. Default:`1`.
     */
    maxBackupNum?: pulumi.Input<number>;
    /**
     * The name of the AutoBackup. The length of this value must be in the range [`1`-`64`].
     */
    name?: pulumi.Input<string>;
    /**
     * Any tags to assign to the AutoBackup.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of weekdays to backed up. The values in the list must be in [`sun`/`mon`/`tue`/`wed`/`thu`/`fri`/`sat`].
     */
    weekdays?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of zone that the AutoBackup will be created. (e.g. `is1a`, `tk1a`). Changing this forces a new resource to be created.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AutoBackup resource.
 */
export interface AutoBackupArgs {
    /**
     * The description of the AutoBackup. The length of this value must be in the range [`1`-`512`].
     */
    description?: pulumi.Input<string>;
    /**
     * The disk id to backed up. Changing this forces a new resource to be created.
     */
    diskId: pulumi.Input<string>;
    /**
     * The icon id to attach to the AutoBackup.
     */
    iconId?: pulumi.Input<string>;
    /**
     * The number backup files to keep. This must be in the range [`1`-`10`]. Default:`1`.
     */
    maxBackupNum?: pulumi.Input<number>;
    /**
     * The name of the AutoBackup. The length of this value must be in the range [`1`-`64`].
     */
    name?: pulumi.Input<string>;
    /**
     * Any tags to assign to the AutoBackup.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of weekdays to backed up. The values in the list must be in [`sun`/`mon`/`tue`/`wed`/`thu`/`fri`/`sat`].
     */
    weekdays: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of zone that the AutoBackup will be created. (e.g. `is1a`, `tk1a`). Changing this forces a new resource to be created.
     */
    zone?: pulumi.Input<string>;
}
