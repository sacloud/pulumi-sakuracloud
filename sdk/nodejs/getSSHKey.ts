// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Get information about an existing SSH Key.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sakuracloud from "@pulumi/sakuracloud";
 *
 * const foobar = pulumi.output(sakuracloud.getSSHKey({
 *     filter: {
 *         names: ["foobar"],
 *     },
 * }, { async: true }));
 * ```
 */
export function getSSHKey(args?: GetSSHKeyArgs, opts?: pulumi.InvokeOptions): Promise<GetSSHKeyResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("sakuracloud:index/getSSHKey:getSSHKey", {
        "filter": args.filter,
    }, opts);
}

/**
 * A collection of arguments for invoking getSSHKey.
 */
export interface GetSSHKeyArgs {
    /**
     * One or more values used for filtering, as defined below.
     */
    readonly filter?: inputs.GetSSHKeyFilter;
}

/**
 * A collection of values returned by getSSHKey.
 */
export interface GetSSHKeyResult {
    /**
     * The description of the SSHKey.
     */
    readonly description: string;
    readonly filter?: outputs.GetSSHKeyFilter;
    /**
     * The fingerprint of public key.
     */
    readonly fingerprint: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the SSHKey.
     */
    readonly name: string;
    /**
     * The value of public key.
     */
    readonly publicKey: string;
}
