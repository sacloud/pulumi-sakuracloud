// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a SakuraCloud DNS Record resource. This can be used to create and delete DNS Records.
 * 
 * ## Import (not supported)
 * 
 * Import of DNS Record is not supported.
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-sakuracloud/blob/master/website/docs/r/dns_record.html.markdown.
 */
export class DNSRecord extends pulumi.CustomResource {
    /**
     * Get an existing DNSRecord resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DNSRecordState, opts?: pulumi.CustomResourceOptions): DNSRecord {
        return new DNSRecord(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sakuracloud:index/dNSRecord:DNSRecord';

    /**
     * Returns true if the given object is an instance of DNSRecord.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DNSRecord {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DNSRecord.__pulumiType;
    }

    /**
     * The ID of DNS zones to which the Record belongs.
     */
    public readonly dnsId!: pulumi.Output<string>;
    /**
     * The hostname of target Record. If "@" is specified, it indicates own zone.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The port number used when `type` is `SRV`. 
     */
    public readonly port!: pulumi.Output<number | undefined>;
    /**
     * The priority used when `type` is `MX` or `SRV`.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * The ttl value of the Record (unit:`second`). 
     */
    public readonly ttl!: pulumi.Output<number | undefined>;
    /**
     * The Record type.  
     * Valid value is one of the following: [ "A" / "AAAA" / "CNAME" / "NS" / "MX" / "TXT" / "SRV" / "CAA"]
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The value of the Record. 
     */
    public readonly value!: pulumi.Output<string>;
    /**
     * The weight used when `type` is `SRV`.
     */
    public readonly weight!: pulumi.Output<number | undefined>;

    /**
     * Create a DNSRecord resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DNSRecordArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DNSRecordArgs | DNSRecordState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as DNSRecordState | undefined;
            inputs["dnsId"] = state ? state.dnsId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["port"] = state ? state.port : undefined;
            inputs["priority"] = state ? state.priority : undefined;
            inputs["ttl"] = state ? state.ttl : undefined;
            inputs["type"] = state ? state.type : undefined;
            inputs["value"] = state ? state.value : undefined;
            inputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as DNSRecordArgs | undefined;
            if (!args || args.dnsId === undefined) {
                throw new Error("Missing required property 'dnsId'");
            }
            if (!args || args.type === undefined) {
                throw new Error("Missing required property 'type'");
            }
            if (!args || args.value === undefined) {
                throw new Error("Missing required property 'value'");
            }
            inputs["dnsId"] = args ? args.dnsId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["port"] = args ? args.port : undefined;
            inputs["priority"] = args ? args.priority : undefined;
            inputs["ttl"] = args ? args.ttl : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["value"] = args ? args.value : undefined;
            inputs["weight"] = args ? args.weight : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(DNSRecord.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DNSRecord resources.
 */
export interface DNSRecordState {
    /**
     * The ID of DNS zones to which the Record belongs.
     */
    readonly dnsId?: pulumi.Input<string>;
    /**
     * The hostname of target Record. If "@" is specified, it indicates own zone.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The port number used when `type` is `SRV`. 
     */
    readonly port?: pulumi.Input<number>;
    /**
     * The priority used when `type` is `MX` or `SRV`.
     */
    readonly priority?: pulumi.Input<number>;
    /**
     * The ttl value of the Record (unit:`second`). 
     */
    readonly ttl?: pulumi.Input<number>;
    /**
     * The Record type.  
     * Valid value is one of the following: [ "A" / "AAAA" / "CNAME" / "NS" / "MX" / "TXT" / "SRV" / "CAA"]
     */
    readonly type?: pulumi.Input<string>;
    /**
     * The value of the Record. 
     */
    readonly value?: pulumi.Input<string>;
    /**
     * The weight used when `type` is `SRV`.
     */
    readonly weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DNSRecord resource.
 */
export interface DNSRecordArgs {
    /**
     * The ID of DNS zones to which the Record belongs.
     */
    readonly dnsId: pulumi.Input<string>;
    /**
     * The hostname of target Record. If "@" is specified, it indicates own zone.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The port number used when `type` is `SRV`. 
     */
    readonly port?: pulumi.Input<number>;
    /**
     * The priority used when `type` is `MX` or `SRV`.
     */
    readonly priority?: pulumi.Input<number>;
    /**
     * The ttl value of the Record (unit:`second`). 
     */
    readonly ttl?: pulumi.Input<number>;
    /**
     * The Record type.  
     * Valid value is one of the following: [ "A" / "AAAA" / "CNAME" / "NS" / "MX" / "TXT" / "SRV" / "CAA"]
     */
    readonly type: pulumi.Input<string>;
    /**
     * The value of the Record. 
     */
    readonly value: pulumi.Input<string>;
    /**
     * The weight used when `type` is `SRV`.
     */
    readonly weight?: pulumi.Input<number>;
}
