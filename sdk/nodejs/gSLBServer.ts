// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a SakuraCloud GSLB Server resource. This can be used to create and delete GSLB Servers.
 * 
 * ## Import (not supported)
 * 
 * Import of GSLB Server is not supported.
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-sakuracloud/blob/master/website/docs/r/gslb_server.html.markdown.
 */
export class GSLBServer extends pulumi.CustomResource {
    /**
     * Get an existing GSLBServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GSLBServerState, opts?: pulumi.CustomResourceOptions): GSLBServer {
        return new GSLBServer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sakuracloud:index/gSLBServer:GSLBServer';

    /**
     * Returns true if the given object is an instance of GSLBServer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GSLBServer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GSLBServer.__pulumiType;
    }

    /**
     * The flag for enable/disable the GSLB Server (default:`true`).
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the GSLB to which the GSLB Server belongs.
     */
    public readonly gslbId!: pulumi.Output<string>;
    /**
     * The IP address of the GSLB Server.
     */
    public readonly ipaddress!: pulumi.Output<string>;
    /**
     * The weight of GSLB server used when weighting is enabled in the GSLB.
     */
    public readonly weight!: pulumi.Output<number | undefined>;

    /**
     * Create a GSLBServer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GSLBServerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GSLBServerArgs | GSLBServerState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as GSLBServerState | undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["gslbId"] = state ? state.gslbId : undefined;
            inputs["ipaddress"] = state ? state.ipaddress : undefined;
            inputs["weight"] = state ? state.weight : undefined;
        } else {
            const args = argsOrState as GSLBServerArgs | undefined;
            if (!args || args.gslbId === undefined) {
                throw new Error("Missing required property 'gslbId'");
            }
            if (!args || args.ipaddress === undefined) {
                throw new Error("Missing required property 'ipaddress'");
            }
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["gslbId"] = args ? args.gslbId : undefined;
            inputs["ipaddress"] = args ? args.ipaddress : undefined;
            inputs["weight"] = args ? args.weight : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(GSLBServer.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GSLBServer resources.
 */
export interface GSLBServerState {
    /**
     * The flag for enable/disable the GSLB Server (default:`true`).
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the GSLB to which the GSLB Server belongs.
     */
    readonly gslbId?: pulumi.Input<string>;
    /**
     * The IP address of the GSLB Server.
     */
    readonly ipaddress?: pulumi.Input<string>;
    /**
     * The weight of GSLB server used when weighting is enabled in the GSLB.
     */
    readonly weight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a GSLBServer resource.
 */
export interface GSLBServerArgs {
    /**
     * The flag for enable/disable the GSLB Server (default:`true`).
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the GSLB to which the GSLB Server belongs.
     */
    readonly gslbId: pulumi.Input<string>;
    /**
     * The IP address of the GSLB Server.
     */
    readonly ipaddress: pulumi.Input<string>;
    /**
     * The weight of GSLB server used when weighting is enabled in the GSLB.
     */
    readonly weight?: pulumi.Input<number>;
}
