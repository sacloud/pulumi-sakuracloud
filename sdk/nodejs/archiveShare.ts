// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages a SakuraCloud Archive Sharing.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sakuracloud from "@pulumi/sakuracloud";
 *
 * const source = new sakuracloud.Archive("source", {
 *     size: 20,
 *     archiveFile: "test/dummy.raw",
 * });
 * const shareInfo = new sakuracloud.ArchiveShare("shareInfo", {archiveId: source.id});
 * ```
 */
export class ArchiveShare extends pulumi.CustomResource {
    /**
     * Get an existing ArchiveShare resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ArchiveShareState, opts?: pulumi.CustomResourceOptions): ArchiveShare {
        return new ArchiveShare(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sakuracloud:index/archiveShare:ArchiveShare';

    /**
     * Returns true if the given object is an instance of ArchiveShare.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ArchiveShare {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ArchiveShare.__pulumiType;
    }

    /**
     * The id of the archive. Changing this forces a new resource to be created.
     */
    public readonly archiveId!: pulumi.Output<string>;
    /**
     * The key to use sharing the Archive.
     */
    public /*out*/ readonly shareKey!: pulumi.Output<string>;
    /**
     * The name of zone that the ArchiveShare will be created (e.g. `is1a`, `tk1a`). Changing this forces a new resource to be created.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a ArchiveShare resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ArchiveShareArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ArchiveShareArgs | ArchiveShareState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ArchiveShareState | undefined;
            inputs["archiveId"] = state ? state.archiveId : undefined;
            inputs["shareKey"] = state ? state.shareKey : undefined;
            inputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as ArchiveShareArgs | undefined;
            if ((!args || args.archiveId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'archiveId'");
            }
            inputs["archiveId"] = args ? args.archiveId : undefined;
            inputs["zone"] = args ? args.zone : undefined;
            inputs["shareKey"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ArchiveShare.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ArchiveShare resources.
 */
export interface ArchiveShareState {
    /**
     * The id of the archive. Changing this forces a new resource to be created.
     */
    archiveId?: pulumi.Input<string>;
    /**
     * The key to use sharing the Archive.
     */
    shareKey?: pulumi.Input<string>;
    /**
     * The name of zone that the ArchiveShare will be created (e.g. `is1a`, `tk1a`). Changing this forces a new resource to be created.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ArchiveShare resource.
 */
export interface ArchiveShareArgs {
    /**
     * The id of the archive. Changing this forces a new resource to be created.
     */
    archiveId: pulumi.Input<string>;
    /**
     * The name of zone that the ArchiveShare will be created (e.g. `is1a`, `tk1a`). Changing this forces a new resource to be created.
     */
    zone?: pulumi.Input<string>;
}
