// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getProxyLB(args?: GetProxyLBArgs, opts?: pulumi.InvokeOptions): Promise<GetProxyLBResult> & GetProxyLBResult {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetProxyLBResult> = pulumi.runtime.invoke("sakuracloud:index/getProxyLB:getProxyLB", {
        "filter": args.filter,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getProxyLB.
 */
export interface GetProxyLBArgs {
    readonly filter?: inputs.GetProxyLBFilter;
}

/**
 * A collection of values returned by getProxyLB.
 */
export interface GetProxyLBResult {
    readonly bindPorts: outputs.GetProxyLBBindPort[];
    readonly certificates: outputs.GetProxyLBCertificate[];
    readonly description: string;
    readonly filter?: outputs.GetProxyLBFilter;
    readonly fqdn: string;
    readonly healthChecks: outputs.GetProxyLBHealthCheck[];
    readonly iconId: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly plan: number;
    readonly proxyNetworks: string[];
    readonly region: string;
    readonly rules: outputs.GetProxyLBRule[];
    readonly servers: outputs.GetProxyLBServer[];
    readonly sorryServers: outputs.GetProxyLBSorryServer[];
    readonly stickySession: boolean;
    readonly tags: string[];
    readonly timeout: number;
    readonly vip: string;
    readonly vipFailover: boolean;
}
