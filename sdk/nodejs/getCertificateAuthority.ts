// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Get information about an existing sakuracloud_certificate_authority.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sakuracloud from "@pulumi/sakuracloud";
 *
 * const foobar = pulumi.output(sakuracloud.getCertificateAuthority({
 *     filter: {
 *         names: ["foobar"],
 *     },
 * }, { async: true }));
 * ```
 */
export function getCertificateAuthority(args?: GetCertificateAuthorityArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateAuthorityResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("sakuracloud:index/getCertificateAuthority:getCertificateAuthority", {
        "filter": args.filter,
    }, opts);
}

/**
 * A collection of arguments for invoking getCertificateAuthority.
 */
export interface GetCertificateAuthorityArgs {
    /**
     * One or more values used for filtering, as defined below.
     */
    readonly filter?: inputs.GetCertificateAuthorityFilter;
}

/**
 * A collection of values returned by getCertificateAuthority.
 */
export interface GetCertificateAuthorityResult {
    /**
     * The body of the CA's certificate in PEM format.
     */
    readonly certificate: string;
    /**
     * A list of `client` blocks as defined below.
     */
    readonly clients: outputs.GetCertificateAuthorityClient[];
    /**
     * The URL of the CRL.
     */
    readonly crlUrl: string;
    /**
     * The description of the CertificateAuthority.
     */
    readonly description: string;
    readonly filter?: outputs.GetCertificateAuthorityFilter;
    /**
     * The icon id attached to the CertificateAuthority.
     */
    readonly iconId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the CertificateAuthority.
     */
    readonly name: string;
    /**
     * The date on which the certificate validity period ends, in RFC3339 format.
     */
    readonly notAfter: string;
    /**
     * The date on which the certificate validity period begins, in RFC3339 format.
     */
    readonly notBefore: string;
    /**
     * The body of the CA's certificate in PEM format.
     */
    readonly serialNumber: string;
    /**
     * A list of `server` blocks as defined below.
     */
    readonly servers: outputs.GetCertificateAuthorityServer[];
    /**
     * .
     */
    readonly subjectString: string;
    /**
     * Any tags assigned to the CertificateAuthority.
     */
    readonly tags: string[];
}
