// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a SakuraCloud VPC Router resource. This can be used to create, update, and delete VPC Routers.
 *
 * > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/vpc_router.html.markdown.
 */
export class VPCRouter extends pulumi.CustomResource {
    /**
     * Get an existing VPCRouter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VPCRouterState, opts?: pulumi.CustomResourceOptions): VPCRouter {
        return new VPCRouter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sakuracloud:index/vPCRouter:VPCRouter';

    /**
     * Returns true if the given object is an instance of VPCRouter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VPCRouter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VPCRouter.__pulumiType;
    }

    /**
     * The IP address aliase list. Used when plan is `premium` or `highspec`.
     */
    public readonly aliases!: pulumi.Output<string[] | undefined>;
    /**
     * The description of the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The DHCP server settings. It contains some attributes to dhcp_server.   
     */
    public readonly dhcpServers!: pulumi.Output<outputs.VPCRouterDhcpServer[]>;
    /**
     * The DHCP static mapping settings. It contains some attributes to dhcp_static_mapping.  
     */
    public readonly dhcpStaticMappings!: pulumi.Output<outputs.VPCRouterDhcpStaticMapping[]>;
    /**
     * The firewall settings. It contains some attributes to firewall.  
     */
    public readonly firewalls!: pulumi.Output<outputs.VPCRouterFirewall[]>;
    /**
     * (Required) The global IP address of the Static NAT.
     */
    public /*out*/ readonly globalAddress!: pulumi.Output<string>;
    /**
     * The wait time (seconds) to do graceful shutdown the VPC Router.
     */
    public readonly gracefulShutdownTimeout!: pulumi.Output<number | undefined>;
    /**
     * The ID of the icon.
     */
    public readonly iconId!: pulumi.Output<string | undefined>;
    /**
     * The private NICs. It contains some attributes to interface. 
     */
    public readonly interfaces!: pulumi.Output<outputs.VPCRouterInterface[]>;
    /**
     * The flag of enable/disable connection from the VPC Router to the Internet.
     */
    public readonly internetConnection!: pulumi.Output<boolean | undefined>;
    /**
     * The primary IP address of the VPC Router.
     */
    public readonly ipaddress1!: pulumi.Output<string | undefined>;
    /**
     * The secondly IP address of the VPC Router. Used when plan is `premium` or `highspec`.
     */
    public readonly ipaddress2!: pulumi.Output<string | undefined>;
    public readonly l2tp!: pulumi.Output<outputs.VPCRouterL2tp>;
    /**
     * The name of the resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The plan of the VPC Router.   
     * Valid value is one of the following: [ "standard" (default) / "premium" / "highspec" ]
     */
    public readonly plan!: pulumi.Output<string | undefined>;
    /**
     * The port forwarding settings. It contains some attributes to port_forwarding. 
     */
    public readonly portForwardings!: pulumi.Output<outputs.VPCRouterPortForwarding[]>;
    /**
     * The PPTP settings. It contains some attributes to pptp.  
     */
    public readonly pptp!: pulumi.Output<outputs.VPCRouterPptp>;
    /**
     * The Site-to-Site VPN settings. It contains some attributes to site_to_site_vpn.  
     */
    public readonly siteToSiteVpns!: pulumi.Output<outputs.VPCRouterSiteToSiteVpn[]>;
    /**
     * The static NAT settings. It contains some attributes to static_nat.  
     */
    public readonly staticNats!: pulumi.Output<outputs.VPCRouterStaticNat[]>;
    /**
     * The static route settings. It contains some attributes to static_route.  
     */
    public readonly staticRoutes!: pulumi.Output<outputs.VPCRouterStaticRoute[]>;
    /**
     * The ID of the switch connected to the VPC Router. Used when plan is `premium` or `highspec`.
     */
    public readonly switchId!: pulumi.Output<string | undefined>;
    /**
     * The destination HostName/IP address to send log.	
     */
    public readonly syslogHost!: pulumi.Output<string | undefined>;
    /**
     * The tag list of the resources.
     */
    public readonly tags!: pulumi.Output<string[]>;
    /**
     * The remote access user settings. It contains some attributes to user.  
     */
    public readonly users!: pulumi.Output<outputs.VPCRouterUser[]>;
    /**
     * The Virtual IP address of the VPC Router. Used when plan is `premium` or `highspec`.
     */
    public readonly vip!: pulumi.Output<string | undefined>;
    /**
     * VRID used when plan is `premium` or `highspec`.
     */
    public readonly vrid!: pulumi.Output<number | undefined>;
    /**
     * The ID of the zone to which the resource belongs.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a VPCRouter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VPCRouterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VPCRouterArgs | VPCRouterState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as VPCRouterState | undefined;
            inputs["aliases"] = state ? state.aliases : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["dhcpServers"] = state ? state.dhcpServers : undefined;
            inputs["dhcpStaticMappings"] = state ? state.dhcpStaticMappings : undefined;
            inputs["firewalls"] = state ? state.firewalls : undefined;
            inputs["globalAddress"] = state ? state.globalAddress : undefined;
            inputs["gracefulShutdownTimeout"] = state ? state.gracefulShutdownTimeout : undefined;
            inputs["iconId"] = state ? state.iconId : undefined;
            inputs["interfaces"] = state ? state.interfaces : undefined;
            inputs["internetConnection"] = state ? state.internetConnection : undefined;
            inputs["ipaddress1"] = state ? state.ipaddress1 : undefined;
            inputs["ipaddress2"] = state ? state.ipaddress2 : undefined;
            inputs["l2tp"] = state ? state.l2tp : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["plan"] = state ? state.plan : undefined;
            inputs["portForwardings"] = state ? state.portForwardings : undefined;
            inputs["pptp"] = state ? state.pptp : undefined;
            inputs["siteToSiteVpns"] = state ? state.siteToSiteVpns : undefined;
            inputs["staticNats"] = state ? state.staticNats : undefined;
            inputs["staticRoutes"] = state ? state.staticRoutes : undefined;
            inputs["switchId"] = state ? state.switchId : undefined;
            inputs["syslogHost"] = state ? state.syslogHost : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["users"] = state ? state.users : undefined;
            inputs["vip"] = state ? state.vip : undefined;
            inputs["vrid"] = state ? state.vrid : undefined;
            inputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as VPCRouterArgs | undefined;
            inputs["aliases"] = args ? args.aliases : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["dhcpServers"] = args ? args.dhcpServers : undefined;
            inputs["dhcpStaticMappings"] = args ? args.dhcpStaticMappings : undefined;
            inputs["firewalls"] = args ? args.firewalls : undefined;
            inputs["gracefulShutdownTimeout"] = args ? args.gracefulShutdownTimeout : undefined;
            inputs["iconId"] = args ? args.iconId : undefined;
            inputs["interfaces"] = args ? args.interfaces : undefined;
            inputs["internetConnection"] = args ? args.internetConnection : undefined;
            inputs["ipaddress1"] = args ? args.ipaddress1 : undefined;
            inputs["ipaddress2"] = args ? args.ipaddress2 : undefined;
            inputs["l2tp"] = args ? args.l2tp : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["plan"] = args ? args.plan : undefined;
            inputs["portForwardings"] = args ? args.portForwardings : undefined;
            inputs["pptp"] = args ? args.pptp : undefined;
            inputs["siteToSiteVpns"] = args ? args.siteToSiteVpns : undefined;
            inputs["staticNats"] = args ? args.staticNats : undefined;
            inputs["staticRoutes"] = args ? args.staticRoutes : undefined;
            inputs["switchId"] = args ? args.switchId : undefined;
            inputs["syslogHost"] = args ? args.syslogHost : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["users"] = args ? args.users : undefined;
            inputs["vip"] = args ? args.vip : undefined;
            inputs["vrid"] = args ? args.vrid : undefined;
            inputs["zone"] = args ? args.zone : undefined;
            inputs["globalAddress"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(VPCRouter.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VPCRouter resources.
 */
export interface VPCRouterState {
    /**
     * The IP address aliase list. Used when plan is `premium` or `highspec`.
     */
    readonly aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The description of the resource.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The DHCP server settings. It contains some attributes to dhcp_server.   
     */
    readonly dhcpServers?: pulumi.Input<pulumi.Input<inputs.VPCRouterDhcpServer>[]>;
    /**
     * The DHCP static mapping settings. It contains some attributes to dhcp_static_mapping.  
     */
    readonly dhcpStaticMappings?: pulumi.Input<pulumi.Input<inputs.VPCRouterDhcpStaticMapping>[]>;
    /**
     * The firewall settings. It contains some attributes to firewall.  
     */
    readonly firewalls?: pulumi.Input<pulumi.Input<inputs.VPCRouterFirewall>[]>;
    /**
     * (Required) The global IP address of the Static NAT.
     */
    readonly globalAddress?: pulumi.Input<string>;
    /**
     * The wait time (seconds) to do graceful shutdown the VPC Router.
     */
    readonly gracefulShutdownTimeout?: pulumi.Input<number>;
    /**
     * The ID of the icon.
     */
    readonly iconId?: pulumi.Input<string>;
    /**
     * The private NICs. It contains some attributes to interface. 
     */
    readonly interfaces?: pulumi.Input<pulumi.Input<inputs.VPCRouterInterface>[]>;
    /**
     * The flag of enable/disable connection from the VPC Router to the Internet.
     */
    readonly internetConnection?: pulumi.Input<boolean>;
    /**
     * The primary IP address of the VPC Router.
     */
    readonly ipaddress1?: pulumi.Input<string>;
    /**
     * The secondly IP address of the VPC Router. Used when plan is `premium` or `highspec`.
     */
    readonly ipaddress2?: pulumi.Input<string>;
    readonly l2tp?: pulumi.Input<inputs.VPCRouterL2tp>;
    /**
     * The name of the resource.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The plan of the VPC Router.   
     * Valid value is one of the following: [ "standard" (default) / "premium" / "highspec" ]
     */
    readonly plan?: pulumi.Input<string>;
    /**
     * The port forwarding settings. It contains some attributes to port_forwarding. 
     */
    readonly portForwardings?: pulumi.Input<pulumi.Input<inputs.VPCRouterPortForwarding>[]>;
    /**
     * The PPTP settings. It contains some attributes to pptp.  
     */
    readonly pptp?: pulumi.Input<inputs.VPCRouterPptp>;
    /**
     * The Site-to-Site VPN settings. It contains some attributes to site_to_site_vpn.  
     */
    readonly siteToSiteVpns?: pulumi.Input<pulumi.Input<inputs.VPCRouterSiteToSiteVpn>[]>;
    /**
     * The static NAT settings. It contains some attributes to static_nat.  
     */
    readonly staticNats?: pulumi.Input<pulumi.Input<inputs.VPCRouterStaticNat>[]>;
    /**
     * The static route settings. It contains some attributes to static_route.  
     */
    readonly staticRoutes?: pulumi.Input<pulumi.Input<inputs.VPCRouterStaticRoute>[]>;
    /**
     * The ID of the switch connected to the VPC Router. Used when plan is `premium` or `highspec`.
     */
    readonly switchId?: pulumi.Input<string>;
    /**
     * The destination HostName/IP address to send log.	
     */
    readonly syslogHost?: pulumi.Input<string>;
    /**
     * The tag list of the resources.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The remote access user settings. It contains some attributes to user.  
     */
    readonly users?: pulumi.Input<pulumi.Input<inputs.VPCRouterUser>[]>;
    /**
     * The Virtual IP address of the VPC Router. Used when plan is `premium` or `highspec`.
     */
    readonly vip?: pulumi.Input<string>;
    /**
     * VRID used when plan is `premium` or `highspec`.
     */
    readonly vrid?: pulumi.Input<number>;
    /**
     * The ID of the zone to which the resource belongs.
     */
    readonly zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VPCRouter resource.
 */
export interface VPCRouterArgs {
    /**
     * The IP address aliase list. Used when plan is `premium` or `highspec`.
     */
    readonly aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The description of the resource.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The DHCP server settings. It contains some attributes to dhcp_server.   
     */
    readonly dhcpServers?: pulumi.Input<pulumi.Input<inputs.VPCRouterDhcpServer>[]>;
    /**
     * The DHCP static mapping settings. It contains some attributes to dhcp_static_mapping.  
     */
    readonly dhcpStaticMappings?: pulumi.Input<pulumi.Input<inputs.VPCRouterDhcpStaticMapping>[]>;
    /**
     * The firewall settings. It contains some attributes to firewall.  
     */
    readonly firewalls?: pulumi.Input<pulumi.Input<inputs.VPCRouterFirewall>[]>;
    /**
     * The wait time (seconds) to do graceful shutdown the VPC Router.
     */
    readonly gracefulShutdownTimeout?: pulumi.Input<number>;
    /**
     * The ID of the icon.
     */
    readonly iconId?: pulumi.Input<string>;
    /**
     * The private NICs. It contains some attributes to interface. 
     */
    readonly interfaces?: pulumi.Input<pulumi.Input<inputs.VPCRouterInterface>[]>;
    /**
     * The flag of enable/disable connection from the VPC Router to the Internet.
     */
    readonly internetConnection?: pulumi.Input<boolean>;
    /**
     * The primary IP address of the VPC Router.
     */
    readonly ipaddress1?: pulumi.Input<string>;
    /**
     * The secondly IP address of the VPC Router. Used when plan is `premium` or `highspec`.
     */
    readonly ipaddress2?: pulumi.Input<string>;
    readonly l2tp?: pulumi.Input<inputs.VPCRouterL2tp>;
    /**
     * The name of the resource.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The plan of the VPC Router.   
     * Valid value is one of the following: [ "standard" (default) / "premium" / "highspec" ]
     */
    readonly plan?: pulumi.Input<string>;
    /**
     * The port forwarding settings. It contains some attributes to port_forwarding. 
     */
    readonly portForwardings?: pulumi.Input<pulumi.Input<inputs.VPCRouterPortForwarding>[]>;
    /**
     * The PPTP settings. It contains some attributes to pptp.  
     */
    readonly pptp?: pulumi.Input<inputs.VPCRouterPptp>;
    /**
     * The Site-to-Site VPN settings. It contains some attributes to site_to_site_vpn.  
     */
    readonly siteToSiteVpns?: pulumi.Input<pulumi.Input<inputs.VPCRouterSiteToSiteVpn>[]>;
    /**
     * The static NAT settings. It contains some attributes to static_nat.  
     */
    readonly staticNats?: pulumi.Input<pulumi.Input<inputs.VPCRouterStaticNat>[]>;
    /**
     * The static route settings. It contains some attributes to static_route.  
     */
    readonly staticRoutes?: pulumi.Input<pulumi.Input<inputs.VPCRouterStaticRoute>[]>;
    /**
     * The ID of the switch connected to the VPC Router. Used when plan is `premium` or `highspec`.
     */
    readonly switchId?: pulumi.Input<string>;
    /**
     * The destination HostName/IP address to send log.	
     */
    readonly syslogHost?: pulumi.Input<string>;
    /**
     * The tag list of the resources.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The remote access user settings. It contains some attributes to user.  
     */
    readonly users?: pulumi.Input<pulumi.Input<inputs.VPCRouterUser>[]>;
    /**
     * The Virtual IP address of the VPC Router. Used when plan is `premium` or `highspec`.
     */
    readonly vip?: pulumi.Input<string>;
    /**
     * VRID used when plan is `premium` or `highspec`.
     */
    readonly vrid?: pulumi.Input<number>;
    /**
     * The ID of the zone to which the resource belongs.
     */
    readonly zone?: pulumi.Input<string>;
}
