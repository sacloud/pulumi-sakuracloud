// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages a SakuraCloud ESME resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sakuracloud from "@pulumi/sakuracloud";
 *
 * const foobar = new sakuracloud.ESME("foobar", {
 *     description: "description",
 *     tags: [
 *         "tag1",
 *         "tag2",
 *     ],
 * });
 * ```
 */
export class ESME extends pulumi.CustomResource {
    /**
     * Get an existing ESME resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ESMEState, opts?: pulumi.CustomResourceOptions): ESME {
        return new ESME(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sakuracloud:index/eSME:ESME';

    /**
     * Returns true if the given object is an instance of ESME.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ESME {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ESME.__pulumiType;
    }

    /**
     * The description of the ESME. The length of this value must be in the range [`1`-`512`].
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The icon id to attach to the ESME.
     */
    public readonly iconId!: pulumi.Output<string | undefined>;
    /**
     * The name of the ESME. The length of this value must be in the range [`1`-`64`].
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The API URL for send SMS with generated OTP.
     */
    public /*out*/ readonly sendMessageWithGeneratedOtpApiUrl!: pulumi.Output<string>;
    /**
     * The API URL for send SMS with inputted OTP.
     */
    public /*out*/ readonly sendMessageWithInputtedOtpApiUrl!: pulumi.Output<string>;
    /**
     * Any tags to assign to the ESME.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;

    /**
     * Create a ESME resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ESMEArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ESMEArgs | ESMEState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ESMEState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["iconId"] = state ? state.iconId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["sendMessageWithGeneratedOtpApiUrl"] = state ? state.sendMessageWithGeneratedOtpApiUrl : undefined;
            inputs["sendMessageWithInputtedOtpApiUrl"] = state ? state.sendMessageWithInputtedOtpApiUrl : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ESMEArgs | undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["iconId"] = args ? args.iconId : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["sendMessageWithGeneratedOtpApiUrl"] = undefined /*out*/;
            inputs["sendMessageWithInputtedOtpApiUrl"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ESME.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ESME resources.
 */
export interface ESMEState {
    /**
     * The description of the ESME. The length of this value must be in the range [`1`-`512`].
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The icon id to attach to the ESME.
     */
    readonly iconId?: pulumi.Input<string>;
    /**
     * The name of the ESME. The length of this value must be in the range [`1`-`64`].
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The API URL for send SMS with generated OTP.
     */
    readonly sendMessageWithGeneratedOtpApiUrl?: pulumi.Input<string>;
    /**
     * The API URL for send SMS with inputted OTP.
     */
    readonly sendMessageWithInputtedOtpApiUrl?: pulumi.Input<string>;
    /**
     * Any tags to assign to the ESME.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ESME resource.
 */
export interface ESMEArgs {
    /**
     * The description of the ESME. The length of this value must be in the range [`1`-`512`].
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The icon id to attach to the ESME.
     */
    readonly iconId?: pulumi.Input<string>;
    /**
     * The name of the ESME. The length of this value must be in the range [`1`-`64`].
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Any tags to assign to the ESME.
     */
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
}
