// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Get information about an existing Enhanced Database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as sakuracloud from "@pulumi/sakuracloud";
 *
 * const foobar = pulumi.output(sakuracloud.getEnhancedDB({
 *     filter: {
 *         names: ["foobar"],
 *     },
 * }, { async: true }));
 * ```
 */
export function getEnhancedDB(args?: GetEnhancedDBArgs, opts?: pulumi.InvokeOptions): Promise<GetEnhancedDBResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("sakuracloud:index/getEnhancedDB:getEnhancedDB", {
        "filter": args.filter,
    }, opts);
}

/**
 * A collection of arguments for invoking getEnhancedDB.
 */
export interface GetEnhancedDBArgs {
    /**
     * One or more values used for filtering, as defined below.
     */
    readonly filter?: inputs.GetEnhancedDBFilter;
}

/**
 * A collection of values returned by getEnhancedDB.
 */
export interface GetEnhancedDBResult {
    /**
     * The name of database.
     */
    readonly databaseName: string;
    /**
     * The type of database.
     */
    readonly databaseType: string;
    /**
     * The description of the EnhancedDB.
     */
    readonly description: string;
    readonly filter?: outputs.GetEnhancedDBFilter;
    /**
     * The name of database host. This will be built from `databaseName` + `tidb-is1.db.sakurausercontent.com`.
     */
    readonly hostname: string;
    /**
     * The icon id attached to the EnhancedDB.
     */
    readonly iconId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The value of max connections setting.
     */
    readonly maxConnections: number;
    /**
     * The name of the EnhancedDB.
     */
    readonly name: string;
    /**
     * The region name.
     */
    readonly region: string;
    /**
     * Any tags assigned to the EnhancedDB.
     */
    readonly tags: string[];
}
