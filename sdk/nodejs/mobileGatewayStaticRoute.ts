// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Provides a SakuraCloud Mobile Gateway Static Route resource. This can be used to create, update, and delete Mobile Gateway Static Routes.
 * 
 * ## Import (not supported)
 * 
 * Import of Mobile Gateway Static Route is not supported.
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-sakuracloud/blob/master/website/docs/r/mobile_gateway_static_route.html.markdown.
 */
export class MobileGatewayStaticRoute extends pulumi.CustomResource {
    /**
     * Get an existing MobileGatewayStaticRoute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MobileGatewayStaticRouteState, opts?: pulumi.CustomResourceOptions): MobileGatewayStaticRoute {
        return new MobileGatewayStaticRoute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sakuracloud:index/mobileGatewayStaticRoute:MobileGatewayStaticRoute';

    /**
     * Returns true if the given object is an instance of MobileGatewayStaticRoute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MobileGatewayStaticRoute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MobileGatewayStaticRoute.__pulumiType;
    }

    /**
     * The ID of the Mobile Gateway to set Static Route.
     */
    public readonly mobileGatewayId!: pulumi.Output<string>;
    /**
     * The IP address of the next hop.
     */
    public readonly nextHop!: pulumi.Output<string>;
    /**
     * The routing prefix (format:`CIDR`).
     */
    public readonly prefix!: pulumi.Output<string>;
    /**
     * The ID of the zone to which the resource belongs.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a MobileGatewayStaticRoute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MobileGatewayStaticRouteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MobileGatewayStaticRouteArgs | MobileGatewayStaticRouteState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as MobileGatewayStaticRouteState | undefined;
            inputs["mobileGatewayId"] = state ? state.mobileGatewayId : undefined;
            inputs["nextHop"] = state ? state.nextHop : undefined;
            inputs["prefix"] = state ? state.prefix : undefined;
            inputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as MobileGatewayStaticRouteArgs | undefined;
            if (!args || args.mobileGatewayId === undefined) {
                throw new Error("Missing required property 'mobileGatewayId'");
            }
            if (!args || args.nextHop === undefined) {
                throw new Error("Missing required property 'nextHop'");
            }
            if (!args || args.prefix === undefined) {
                throw new Error("Missing required property 'prefix'");
            }
            inputs["mobileGatewayId"] = args ? args.mobileGatewayId : undefined;
            inputs["nextHop"] = args ? args.nextHop : undefined;
            inputs["prefix"] = args ? args.prefix : undefined;
            inputs["zone"] = args ? args.zone : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(MobileGatewayStaticRoute.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MobileGatewayStaticRoute resources.
 */
export interface MobileGatewayStaticRouteState {
    /**
     * The ID of the Mobile Gateway to set Static Route.
     */
    readonly mobileGatewayId?: pulumi.Input<string>;
    /**
     * The IP address of the next hop.
     */
    readonly nextHop?: pulumi.Input<string>;
    /**
     * The routing prefix (format:`CIDR`).
     */
    readonly prefix?: pulumi.Input<string>;
    /**
     * The ID of the zone to which the resource belongs.
     */
    readonly zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MobileGatewayStaticRoute resource.
 */
export interface MobileGatewayStaticRouteArgs {
    /**
     * The ID of the Mobile Gateway to set Static Route.
     */
    readonly mobileGatewayId: pulumi.Input<string>;
    /**
     * The IP address of the next hop.
     */
    readonly nextHop: pulumi.Input<string>;
    /**
     * The routing prefix (format:`CIDR`).
     */
    readonly prefix: pulumi.Input<string>;
    /**
     * The ID of the zone to which the resource belongs.
     */
    readonly zone?: pulumi.Input<string>;
}
