# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class Subnet(pulumi.CustomResource):
    internet_id: pulumi.Output[str]
    """
    The ID of the Internet resource.
    """
    ipaddresses: pulumi.Output[list]
    """
    Global IP address list.
    """
    max_ipaddress: pulumi.Output[str]
    """
    Max global IP address.
    """
    min_ipaddress: pulumi.Output[str]
    """
    Min global IP address.
    """
    next_hop: pulumi.Output[str]
    """
    The next hop IP address.
    """
    nw_address: pulumi.Output[str]
    """
    The network address.
    """
    nw_mask_len: pulumi.Output[float]
    """
    Network mask length.  
    Valid value is one of the following: [ 28 (default) / 27 / 26 ]
    """
    switch_id: pulumi.Output[str]
    zone: pulumi.Output[str]
    """
    The ID of the zone to which the resource belongs.
    """
    def __init__(__self__, resource_name, opts=None, internet_id=None, next_hop=None, nw_mask_len=None, zone=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a SakuraCloud Subnet resource. This can be used to create, update, and delete Subnets.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] internet_id: The ID of the Internet resource.
        :param pulumi.Input[str] next_hop: The next hop IP address.
        :param pulumi.Input[float] nw_mask_len: Network mask length.  
               Valid value is one of the following: [ 28 (default) / 27 / 26 ]
        :param pulumi.Input[str] zone: The ID of the zone to which the resource belongs.

        > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/subnet.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if internet_id is None:
                raise TypeError("Missing required property 'internet_id'")
            __props__['internet_id'] = internet_id
            if next_hop is None:
                raise TypeError("Missing required property 'next_hop'")
            __props__['next_hop'] = next_hop
            __props__['nw_mask_len'] = nw_mask_len
            __props__['zone'] = zone
            __props__['ipaddresses'] = None
            __props__['max_ipaddress'] = None
            __props__['min_ipaddress'] = None
            __props__['nw_address'] = None
            __props__['switch_id'] = None
        super(Subnet, __self__).__init__(
            'sakuracloud:index/subnet:Subnet',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, internet_id=None, ipaddresses=None, max_ipaddress=None, min_ipaddress=None, next_hop=None, nw_address=None, nw_mask_len=None, switch_id=None, zone=None):
        """
        Get an existing Subnet resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] internet_id: The ID of the Internet resource.
        :param pulumi.Input[list] ipaddresses: Global IP address list.
        :param pulumi.Input[str] max_ipaddress: Max global IP address.
        :param pulumi.Input[str] min_ipaddress: Min global IP address.
        :param pulumi.Input[str] next_hop: The next hop IP address.
        :param pulumi.Input[str] nw_address: The network address.
        :param pulumi.Input[float] nw_mask_len: Network mask length.  
               Valid value is one of the following: [ 28 (default) / 27 / 26 ]
        :param pulumi.Input[str] zone: The ID of the zone to which the resource belongs.

        > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/subnet.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["internet_id"] = internet_id
        __props__["ipaddresses"] = ipaddresses
        __props__["max_ipaddress"] = max_ipaddress
        __props__["min_ipaddress"] = min_ipaddress
        __props__["next_hop"] = next_hop
        __props__["nw_address"] = nw_address
        __props__["nw_mask_len"] = nw_mask_len
        __props__["switch_id"] = switch_id
        __props__["zone"] = zone
        return Subnet(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

