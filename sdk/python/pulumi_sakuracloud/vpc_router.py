# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class VPCRouter(pulumi.CustomResource):
    aliases: pulumi.Output[list]
    """
    The IP address aliase list. Used when plan is `premium` or `highspec`.
    """
    description: pulumi.Output[str]
    """
    The description of the resource.
    """
    dhcp_servers: pulumi.Output[list]
    """
    The DHCP server settings. It contains some attributes to dhcp_server.   
    
      * `dns_servers` (`list`) - (Required) DNS server list to be assigned by DHCP.  
      * `rangeStart` (`str`) - (Required) Start IP address of address range to be assigned by PPTP.
      * `rangeStop` (`str`) - (Required) End IP address of address range to be assigned by PPTP.
      * `vpcRouterInterfaceIndex` (`float`) - (Required) The NIC index of VPC Router running DHCP Server.
    """
    dhcp_static_mappings: pulumi.Output[list]
    """
    The DHCP static mapping settings. It contains some attributes to dhcp_static_mapping.  
    
      * `ipaddress` (`str`) - (Required) The MAC address to be the key of the mapping. 
      * `macaddress` (`str`) - (Required) The IP address mapped by MAC address.
    """
    firewalls: pulumi.Output[list]
    """
    The firewall settings. It contains some attributes to firewall.  
    
      * `direction` (`str`) - (Required) Direction of filtering packets.  
        Valid value is one of the following: [ "send" / "receive" ]
      * `expressions` (`list`) - (Required) Filtering rules. It contains some attributes to Expressions.
    
        * `allow` (`bool`) - (Required) The flag for allow/deny packets.
        * `description` (`str`) - The description of the resource.
        * `destNw` (`str`) - (Required) Target destination network IP address or CIDR or range.  
          Valid format is one of the following:
          * IP address: `"xxx.xxx.xxx.xxx"`
          * CIDR: `"xxx.xxx.xxx.xxx/nn"`
          * Range: `"xxx.xxx.xxx.xxx/yyy.yyy.yyy.yyy"`
        * `dest_port` (`str`) - (Required) Target destination port.
          Valid format is one of the following:
          * Number: `"0"` - `"65535"`
          * Range: `"xx-yy"`
          * Range (hex): `"0xPPPP/0xMMMM"`
        * `logging` (`bool`) - (Required) The flag for enable/disable logging.
        * `protocol` (`str`) - (Required) Protocol used in health check.  
          Valid value is one of the following: [ "tcp" / "udp" / "icmp" / "ip" ]
        * `source_nw` (`str`) - (Required) Target source network IP address or CIDR or range.  
          Valid format is one of the following:
          * IP address: `"xxx.xxx.xxx.xxx"`
          * CIDR: `"xxx.xxx.xxx.xxx/nn"`
          * Range: `"xxx.xxx.xxx.xxx/yyy.yyy.yyy.yyy"`
        * `source_port` (`str`) - (Required) Target source port.
          Valid format is one of the following:
          * Number: `"0"` - `"65535"`
          * Range: `"xx-yy"`
          * Range (hex): `"0xPPPP/0xMMMM"`
    
      * `vpcRouterInterfaceIndex` (`float`) - (Required) The NIC index of VPC Router running DHCP Server.
    """
    global_address: pulumi.Output[str]
    """
    (Required) The global IP address of the Static NAT.
    """
    graceful_shutdown_timeout: pulumi.Output[float]
    """
    The wait time (seconds) to do graceful shutdown the VPC Router.
    """
    icon_id: pulumi.Output[str]
    """
    The ID of the icon.
    """
    interfaces: pulumi.Output[list]
    """
    The private NICs. It contains some attributes to interface. 
    
      * `ipaddresses` (`list`) - (Required) The MAC address to be the key of the mapping. 
      * `nw_mask_len` (`float`) - (Optional) Network mask length of the VPC Router Interface.
      * `switch_id` (`str`) - The ID of the switch connected to the VPC Router. Used when plan is `premium` or `highspec`.
      * `vip` (`str`) - The Virtual IP address of the VPC Router. Used when plan is `premium` or `highspec`.
    """
    internet_connection: pulumi.Output[bool]
    """
    The flag of enable/disable connection from the VPC Router to the Internet.
    """
    ipaddress1: pulumi.Output[str]
    """
    The primary IP address of the VPC Router.
    """
    ipaddress2: pulumi.Output[str]
    """
    The secondly IP address of the VPC Router. Used when plan is `premium` or `highspec`.
    """
    l2tp: pulumi.Output[dict]
    name: pulumi.Output[str]
    """
    The name of the resource.
    """
    plan: pulumi.Output[str]
    """
    The plan of the VPC Router.   
    Valid value is one of the following: [ "standard" (default) / "premium" / "highspec" ]
    """
    port_forwardings: pulumi.Output[list]
    """
    The port forwarding settings. It contains some attributes to port_forwarding. 
    
      * `description` (`str`) - The description of the resource.
      * `globalPort` (`float`) - (Required) The global port of the Port Forwarding.
      * `privateAddress` (`str`) - (Required) The private IP address of the Static NAT.
      * `privatePort` (`float`) - (Required) The destination port number of the Port Forwarding.
      * `protocol` (`str`) - (Required) Protocol used in health check.  
        Valid value is one of the following: [ "tcp" / "udp" / "icmp" / "ip" ]
    """
    pptp: pulumi.Output[dict]
    """
    The PPTP settings. It contains some attributes to pptp.  
    
      * `rangeStart` (`str`) - (Required) Start IP address of address range to be assigned by PPTP.
      * `rangeStop` (`str`) - (Required) End IP address of address range to be assigned by PPTP.
    """
    site_to_site_vpns: pulumi.Output[list]
    """
    The Site-to-Site VPN settings. It contains some attributes to site_to_site_vpn.  
    
      * `espAuthenticationProtocol` (`str`) - ESP authentication protocol.
      * `espDhGroup` (`str`) - ESP DH group.
      * `espEncryptionProtocol` (`str`) - ESP encryption protocol.
      * `espLifetime` (`str`) - ESP lifetime.
      * `espMode` (`str`) - ESP mode.
      * `espPerfectForwardSecrecy` (`str`) - ESP perfect forward secrecy.
      * `ikeAuthenticationProtocol` (`str`) - IKE authentication protocol.
      * `ikeEncryptionProtocol` (`str`) - IKE encryption protocol.
      * `ikeLifetime` (`str`) - IKE lifetime.
      * `ikeMode` (`str`) - IKE mode.
      * `ikePerfectForwardSecrecy` (`str`) - IKE perfect forward secrecy.
      * `ikePreSharedSecret` (`str`) - IKE pre shared secret.
      * `localPrefixes` (`list`) - The local prefix.
      * `peer` (`str`) - The peer IP address.
      * `peerId` (`str`) - Peer ID.
      * `peerInsideNetworks` (`list`) - Peer inside networks.
      * `peerOutsideIpaddress` (`str`) - Peer outsite ipaddress.
      * `preSharedSecret` (`str`) - The pre shared secret for IPSec.
      * `remoteId` (`str`) - The IPSec ID of target.
      * `routes` (`list`) - The routing prefix.
      * `vpcRouterInsideNetworks` (`list`) - VPC Router inside networks.
      * `vpcRouterOutsideIpaddress` (`str`) - VPC Router outside IP address.
    """
    static_nats: pulumi.Output[list]
    """
    The static NAT settings. It contains some attributes to static_nat.  
    
      * `description` (`str`) - The description of the resource.
      * `global_address` (`str`) - (Required) The global IP address of the Static NAT.
      * `privateAddress` (`str`) - (Required) The private IP address of the Static NAT.
    """
    static_routes: pulumi.Output[list]
    """
    The static route settings. It contains some attributes to static_route.  
    
      * `next_hop` (`str`) - (Required) The next hop IP address of the Static Route.
      * `prefix` (`str`) - (Required) The prefix of the Static Route.
    """
    switch_id: pulumi.Output[str]
    """
    The ID of the switch connected to the VPC Router. Used when plan is `premium` or `highspec`.
    """
    syslog_host: pulumi.Output[str]
    """
    The destination HostName/IP address to send log.	
    """
    tags: pulumi.Output[list]
    """
    The tag list of the resources.
    """
    users: pulumi.Output[list]
    """
    The remote access user settings. It contains some attributes to user.  
    
      * `name` (`str`) - The name of the resource.
      * `password` (`str`) - (Required) The password.
    """
    vip: pulumi.Output[str]
    """
    The Virtual IP address of the VPC Router. Used when plan is `premium` or `highspec`.
    """
    vrid: pulumi.Output[float]
    """
    VRID used when plan is `premium` or `highspec`.
    """
    zone: pulumi.Output[str]
    """
    The ID of the zone to which the resource belongs.
    """
    def __init__(__self__, resource_name, opts=None, aliases=None, description=None, dhcp_servers=None, dhcp_static_mappings=None, firewalls=None, graceful_shutdown_timeout=None, icon_id=None, interfaces=None, internet_connection=None, ipaddress1=None, ipaddress2=None, l2tp=None, name=None, plan=None, port_forwardings=None, pptp=None, site_to_site_vpns=None, static_nats=None, static_routes=None, switch_id=None, syslog_host=None, tags=None, users=None, vip=None, vrid=None, zone=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a SakuraCloud VPC Router resource. This can be used to create, update, and delete VPC Routers.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[list] aliases: The IP address aliase list. Used when plan is `premium` or `highspec`.
        :param pulumi.Input[str] description: The description of the resource.
        :param pulumi.Input[list] dhcp_servers: The DHCP server settings. It contains some attributes to dhcp_server.   
        :param pulumi.Input[list] dhcp_static_mappings: The DHCP static mapping settings. It contains some attributes to dhcp_static_mapping.  
        :param pulumi.Input[list] firewalls: The firewall settings. It contains some attributes to firewall.  
        :param pulumi.Input[float] graceful_shutdown_timeout: The wait time (seconds) to do graceful shutdown the VPC Router.
        :param pulumi.Input[str] icon_id: The ID of the icon.
        :param pulumi.Input[list] interfaces: The private NICs. It contains some attributes to interface. 
        :param pulumi.Input[bool] internet_connection: The flag of enable/disable connection from the VPC Router to the Internet.
        :param pulumi.Input[str] ipaddress1: The primary IP address of the VPC Router.
        :param pulumi.Input[str] ipaddress2: The secondly IP address of the VPC Router. Used when plan is `premium` or `highspec`.
        :param pulumi.Input[str] name: The name of the resource.
        :param pulumi.Input[str] plan: The plan of the VPC Router.   
               Valid value is one of the following: [ "standard" (default) / "premium" / "highspec" ]
        :param pulumi.Input[list] port_forwardings: The port forwarding settings. It contains some attributes to port_forwarding. 
        :param pulumi.Input[dict] pptp: The PPTP settings. It contains some attributes to pptp.  
        :param pulumi.Input[list] site_to_site_vpns: The Site-to-Site VPN settings. It contains some attributes to site_to_site_vpn.  
        :param pulumi.Input[list] static_nats: The static NAT settings. It contains some attributes to static_nat.  
        :param pulumi.Input[list] static_routes: The static route settings. It contains some attributes to static_route.  
        :param pulumi.Input[str] switch_id: The ID of the switch connected to the VPC Router. Used when plan is `premium` or `highspec`.
        :param pulumi.Input[str] syslog_host: The destination HostName/IP address to send log.	
        :param pulumi.Input[list] tags: The tag list of the resources.
        :param pulumi.Input[list] users: The remote access user settings. It contains some attributes to user.  
        :param pulumi.Input[str] vip: The Virtual IP address of the VPC Router. Used when plan is `premium` or `highspec`.
        :param pulumi.Input[float] vrid: VRID used when plan is `premium` or `highspec`.
        :param pulumi.Input[str] zone: The ID of the zone to which the resource belongs.
        
        The **dhcp_servers** object supports the following:
        
          * `dns_servers` (`pulumi.Input[list]`) - (Required) DNS server list to be assigned by DHCP.  
          * `rangeStart` (`pulumi.Input[str]`) - (Required) Start IP address of address range to be assigned by PPTP.
          * `rangeStop` (`pulumi.Input[str]`) - (Required) End IP address of address range to be assigned by PPTP.
          * `vpcRouterInterfaceIndex` (`pulumi.Input[float]`) - (Required) The NIC index of VPC Router running DHCP Server.
        
        The **dhcp_static_mappings** object supports the following:
        
          * `ipaddress` (`pulumi.Input[str]`) - (Required) The MAC address to be the key of the mapping. 
          * `macaddress` (`pulumi.Input[str]`) - (Required) The IP address mapped by MAC address.
        
        The **firewalls** object supports the following:
        
          * `direction` (`pulumi.Input[str]`) - (Required) Direction of filtering packets.  
            Valid value is one of the following: [ "send" / "receive" ]
          * `expressions` (`pulumi.Input[list]`) - (Required) Filtering rules. It contains some attributes to Expressions.
        
            * `allow` (`pulumi.Input[bool]`) - (Required) The flag for allow/deny packets.
            * `description` (`pulumi.Input[str]`) - The description of the resource.
            * `destNw` (`pulumi.Input[str]`) - (Required) Target destination network IP address or CIDR or range.  
              Valid format is one of the following:
              * IP address: `"xxx.xxx.xxx.xxx"`
              * CIDR: `"xxx.xxx.xxx.xxx/nn"`
              * Range: `"xxx.xxx.xxx.xxx/yyy.yyy.yyy.yyy"`
            * `dest_port` (`pulumi.Input[str]`) - (Required) Target destination port.
              Valid format is one of the following:
              * Number: `"0"` - `"65535"`
              * Range: `"xx-yy"`
              * Range (hex): `"0xPPPP/0xMMMM"`
            * `logging` (`pulumi.Input[bool]`) - (Required) The flag for enable/disable logging.
            * `protocol` (`pulumi.Input[str]`) - (Required) Protocol used in health check.  
              Valid value is one of the following: [ "tcp" / "udp" / "icmp" / "ip" ]
            * `source_nw` (`pulumi.Input[str]`) - (Required) Target source network IP address or CIDR or range.  
              Valid format is one of the following:
              * IP address: `"xxx.xxx.xxx.xxx"`
              * CIDR: `"xxx.xxx.xxx.xxx/nn"`
              * Range: `"xxx.xxx.xxx.xxx/yyy.yyy.yyy.yyy"`
            * `source_port` (`pulumi.Input[str]`) - (Required) Target source port.
              Valid format is one of the following:
              * Number: `"0"` - `"65535"`
              * Range: `"xx-yy"`
              * Range (hex): `"0xPPPP/0xMMMM"`
        
          * `vpcRouterInterfaceIndex` (`pulumi.Input[float]`) - (Required) The NIC index of VPC Router running DHCP Server.
        
        The **interfaces** object supports the following:
        
          * `ipaddresses` (`pulumi.Input[list]`) - (Required) The MAC address to be the key of the mapping. 
          * `nw_mask_len` (`pulumi.Input[float]`) - (Optional) Network mask length of the VPC Router Interface.
          * `switch_id` (`pulumi.Input[str]`) - The ID of the switch connected to the VPC Router. Used when plan is `premium` or `highspec`.
          * `vip` (`pulumi.Input[str]`) - The Virtual IP address of the VPC Router. Used when plan is `premium` or `highspec`.
        
        The **l2tp** object supports the following:
        
          * `preSharedSecret` (`pulumi.Input[str]`) - The pre shared secret for IPSec.
          * `rangeStart` (`pulumi.Input[str]`) - (Required) Start IP address of address range to be assigned by PPTP.
          * `rangeStop` (`pulumi.Input[str]`) - (Required) End IP address of address range to be assigned by PPTP.
        
        The **port_forwardings** object supports the following:
        
          * `description` (`pulumi.Input[str]`) - The description of the resource.
          * `globalPort` (`pulumi.Input[float]`) - (Required) The global port of the Port Forwarding.
          * `privateAddress` (`pulumi.Input[str]`) - (Required) The private IP address of the Static NAT.
          * `privatePort` (`pulumi.Input[float]`) - (Required) The destination port number of the Port Forwarding.
          * `protocol` (`pulumi.Input[str]`) - (Required) Protocol used in health check.  
            Valid value is one of the following: [ "tcp" / "udp" / "icmp" / "ip" ]
        
        The **pptp** object supports the following:
        
          * `rangeStart` (`pulumi.Input[str]`) - (Required) Start IP address of address range to be assigned by PPTP.
          * `rangeStop` (`pulumi.Input[str]`) - (Required) End IP address of address range to be assigned by PPTP.
        
        The **site_to_site_vpns** object supports the following:
        
          * `espAuthenticationProtocol` (`pulumi.Input[str]`) - ESP authentication protocol.
          * `espDhGroup` (`pulumi.Input[str]`) - ESP DH group.
          * `espEncryptionProtocol` (`pulumi.Input[str]`) - ESP encryption protocol.
          * `espLifetime` (`pulumi.Input[str]`) - ESP lifetime.
          * `espMode` (`pulumi.Input[str]`) - ESP mode.
          * `espPerfectForwardSecrecy` (`pulumi.Input[str]`) - ESP perfect forward secrecy.
          * `ikeAuthenticationProtocol` (`pulumi.Input[str]`) - IKE authentication protocol.
          * `ikeEncryptionProtocol` (`pulumi.Input[str]`) - IKE encryption protocol.
          * `ikeLifetime` (`pulumi.Input[str]`) - IKE lifetime.
          * `ikeMode` (`pulumi.Input[str]`) - IKE mode.
          * `ikePerfectForwardSecrecy` (`pulumi.Input[str]`) - IKE perfect forward secrecy.
          * `ikePreSharedSecret` (`pulumi.Input[str]`) - IKE pre shared secret.
          * `localPrefixes` (`pulumi.Input[list]`) - The local prefix.
          * `peer` (`pulumi.Input[str]`) - The peer IP address.
          * `peerId` (`pulumi.Input[str]`) - Peer ID.
          * `peerInsideNetworks` (`pulumi.Input[list]`) - Peer inside networks.
          * `peerOutsideIpaddress` (`pulumi.Input[str]`) - Peer outsite ipaddress.
          * `preSharedSecret` (`pulumi.Input[str]`) - The pre shared secret for IPSec.
          * `remoteId` (`pulumi.Input[str]`) - The IPSec ID of target.
          * `routes` (`pulumi.Input[list]`) - The routing prefix.
          * `vpcRouterInsideNetworks` (`pulumi.Input[list]`) - VPC Router inside networks.
          * `vpcRouterOutsideIpaddress` (`pulumi.Input[str]`) - VPC Router outside IP address.
        
        The **static_nats** object supports the following:
        
          * `description` (`pulumi.Input[str]`) - The description of the resource.
          * `global_address` (`pulumi.Input[str]`) - (Required) The global IP address of the Static NAT.
          * `privateAddress` (`pulumi.Input[str]`) - (Required) The private IP address of the Static NAT.
        
        The **static_routes** object supports the following:
        
          * `next_hop` (`pulumi.Input[str]`) - (Required) The next hop IP address of the Static Route.
          * `prefix` (`pulumi.Input[str]`) - (Required) The prefix of the Static Route.
        
        The **users** object supports the following:
        
          * `name` (`pulumi.Input[str]`) - The name of the resource.
          * `password` (`pulumi.Input[str]`) - (Required) The password.

        > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/vpc_router.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['aliases'] = aliases
            __props__['description'] = description
            __props__['dhcp_servers'] = dhcp_servers
            __props__['dhcp_static_mappings'] = dhcp_static_mappings
            __props__['firewalls'] = firewalls
            __props__['graceful_shutdown_timeout'] = graceful_shutdown_timeout
            __props__['icon_id'] = icon_id
            __props__['interfaces'] = interfaces
            __props__['internet_connection'] = internet_connection
            __props__['ipaddress1'] = ipaddress1
            __props__['ipaddress2'] = ipaddress2
            __props__['l2tp'] = l2tp
            __props__['name'] = name
            __props__['plan'] = plan
            __props__['port_forwardings'] = port_forwardings
            __props__['pptp'] = pptp
            __props__['site_to_site_vpns'] = site_to_site_vpns
            __props__['static_nats'] = static_nats
            __props__['static_routes'] = static_routes
            __props__['switch_id'] = switch_id
            __props__['syslog_host'] = syslog_host
            __props__['tags'] = tags
            __props__['users'] = users
            __props__['vip'] = vip
            __props__['vrid'] = vrid
            __props__['zone'] = zone
            __props__['global_address'] = None
        super(VPCRouter, __self__).__init__(
            'sakuracloud:index/vPCRouter:VPCRouter',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, aliases=None, description=None, dhcp_servers=None, dhcp_static_mappings=None, firewalls=None, global_address=None, graceful_shutdown_timeout=None, icon_id=None, interfaces=None, internet_connection=None, ipaddress1=None, ipaddress2=None, l2tp=None, name=None, plan=None, port_forwardings=None, pptp=None, site_to_site_vpns=None, static_nats=None, static_routes=None, switch_id=None, syslog_host=None, tags=None, users=None, vip=None, vrid=None, zone=None):
        """
        Get an existing VPCRouter resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[list] aliases: The IP address aliase list. Used when plan is `premium` or `highspec`.
        :param pulumi.Input[str] description: The description of the resource.
        :param pulumi.Input[list] dhcp_servers: The DHCP server settings. It contains some attributes to dhcp_server.   
        :param pulumi.Input[list] dhcp_static_mappings: The DHCP static mapping settings. It contains some attributes to dhcp_static_mapping.  
        :param pulumi.Input[list] firewalls: The firewall settings. It contains some attributes to firewall.  
        :param pulumi.Input[str] global_address: (Required) The global IP address of the Static NAT.
        :param pulumi.Input[float] graceful_shutdown_timeout: The wait time (seconds) to do graceful shutdown the VPC Router.
        :param pulumi.Input[str] icon_id: The ID of the icon.
        :param pulumi.Input[list] interfaces: The private NICs. It contains some attributes to interface. 
        :param pulumi.Input[bool] internet_connection: The flag of enable/disable connection from the VPC Router to the Internet.
        :param pulumi.Input[str] ipaddress1: The primary IP address of the VPC Router.
        :param pulumi.Input[str] ipaddress2: The secondly IP address of the VPC Router. Used when plan is `premium` or `highspec`.
        :param pulumi.Input[str] name: The name of the resource.
        :param pulumi.Input[str] plan: The plan of the VPC Router.   
               Valid value is one of the following: [ "standard" (default) / "premium" / "highspec" ]
        :param pulumi.Input[list] port_forwardings: The port forwarding settings. It contains some attributes to port_forwarding. 
        :param pulumi.Input[dict] pptp: The PPTP settings. It contains some attributes to pptp.  
        :param pulumi.Input[list] site_to_site_vpns: The Site-to-Site VPN settings. It contains some attributes to site_to_site_vpn.  
        :param pulumi.Input[list] static_nats: The static NAT settings. It contains some attributes to static_nat.  
        :param pulumi.Input[list] static_routes: The static route settings. It contains some attributes to static_route.  
        :param pulumi.Input[str] switch_id: The ID of the switch connected to the VPC Router. Used when plan is `premium` or `highspec`.
        :param pulumi.Input[str] syslog_host: The destination HostName/IP address to send log.	
        :param pulumi.Input[list] tags: The tag list of the resources.
        :param pulumi.Input[list] users: The remote access user settings. It contains some attributes to user.  
        :param pulumi.Input[str] vip: The Virtual IP address of the VPC Router. Used when plan is `premium` or `highspec`.
        :param pulumi.Input[float] vrid: VRID used when plan is `premium` or `highspec`.
        :param pulumi.Input[str] zone: The ID of the zone to which the resource belongs.
        
        The **dhcp_servers** object supports the following:
        
          * `dns_servers` (`pulumi.Input[list]`) - (Required) DNS server list to be assigned by DHCP.  
          * `rangeStart` (`pulumi.Input[str]`) - (Required) Start IP address of address range to be assigned by PPTP.
          * `rangeStop` (`pulumi.Input[str]`) - (Required) End IP address of address range to be assigned by PPTP.
          * `vpcRouterInterfaceIndex` (`pulumi.Input[float]`) - (Required) The NIC index of VPC Router running DHCP Server.
        
        The **dhcp_static_mappings** object supports the following:
        
          * `ipaddress` (`pulumi.Input[str]`) - (Required) The MAC address to be the key of the mapping. 
          * `macaddress` (`pulumi.Input[str]`) - (Required) The IP address mapped by MAC address.
        
        The **firewalls** object supports the following:
        
          * `direction` (`pulumi.Input[str]`) - (Required) Direction of filtering packets.  
            Valid value is one of the following: [ "send" / "receive" ]
          * `expressions` (`pulumi.Input[list]`) - (Required) Filtering rules. It contains some attributes to Expressions.
        
            * `allow` (`pulumi.Input[bool]`) - (Required) The flag for allow/deny packets.
            * `description` (`pulumi.Input[str]`) - The description of the resource.
            * `destNw` (`pulumi.Input[str]`) - (Required) Target destination network IP address or CIDR or range.  
              Valid format is one of the following:
              * IP address: `"xxx.xxx.xxx.xxx"`
              * CIDR: `"xxx.xxx.xxx.xxx/nn"`
              * Range: `"xxx.xxx.xxx.xxx/yyy.yyy.yyy.yyy"`
            * `dest_port` (`pulumi.Input[str]`) - (Required) Target destination port.
              Valid format is one of the following:
              * Number: `"0"` - `"65535"`
              * Range: `"xx-yy"`
              * Range (hex): `"0xPPPP/0xMMMM"`
            * `logging` (`pulumi.Input[bool]`) - (Required) The flag for enable/disable logging.
            * `protocol` (`pulumi.Input[str]`) - (Required) Protocol used in health check.  
              Valid value is one of the following: [ "tcp" / "udp" / "icmp" / "ip" ]
            * `source_nw` (`pulumi.Input[str]`) - (Required) Target source network IP address or CIDR or range.  
              Valid format is one of the following:
              * IP address: `"xxx.xxx.xxx.xxx"`
              * CIDR: `"xxx.xxx.xxx.xxx/nn"`
              * Range: `"xxx.xxx.xxx.xxx/yyy.yyy.yyy.yyy"`
            * `source_port` (`pulumi.Input[str]`) - (Required) Target source port.
              Valid format is one of the following:
              * Number: `"0"` - `"65535"`
              * Range: `"xx-yy"`
              * Range (hex): `"0xPPPP/0xMMMM"`
        
          * `vpcRouterInterfaceIndex` (`pulumi.Input[float]`) - (Required) The NIC index of VPC Router running DHCP Server.
        
        The **interfaces** object supports the following:
        
          * `ipaddresses` (`pulumi.Input[list]`) - (Required) The MAC address to be the key of the mapping. 
          * `nw_mask_len` (`pulumi.Input[float]`) - (Optional) Network mask length of the VPC Router Interface.
          * `switch_id` (`pulumi.Input[str]`) - The ID of the switch connected to the VPC Router. Used when plan is `premium` or `highspec`.
          * `vip` (`pulumi.Input[str]`) - The Virtual IP address of the VPC Router. Used when plan is `premium` or `highspec`.
        
        The **l2tp** object supports the following:
        
          * `preSharedSecret` (`pulumi.Input[str]`) - The pre shared secret for IPSec.
          * `rangeStart` (`pulumi.Input[str]`) - (Required) Start IP address of address range to be assigned by PPTP.
          * `rangeStop` (`pulumi.Input[str]`) - (Required) End IP address of address range to be assigned by PPTP.
        
        The **port_forwardings** object supports the following:
        
          * `description` (`pulumi.Input[str]`) - The description of the resource.
          * `globalPort` (`pulumi.Input[float]`) - (Required) The global port of the Port Forwarding.
          * `privateAddress` (`pulumi.Input[str]`) - (Required) The private IP address of the Static NAT.
          * `privatePort` (`pulumi.Input[float]`) - (Required) The destination port number of the Port Forwarding.
          * `protocol` (`pulumi.Input[str]`) - (Required) Protocol used in health check.  
            Valid value is one of the following: [ "tcp" / "udp" / "icmp" / "ip" ]
        
        The **pptp** object supports the following:
        
          * `rangeStart` (`pulumi.Input[str]`) - (Required) Start IP address of address range to be assigned by PPTP.
          * `rangeStop` (`pulumi.Input[str]`) - (Required) End IP address of address range to be assigned by PPTP.
        
        The **site_to_site_vpns** object supports the following:
        
          * `espAuthenticationProtocol` (`pulumi.Input[str]`) - ESP authentication protocol.
          * `espDhGroup` (`pulumi.Input[str]`) - ESP DH group.
          * `espEncryptionProtocol` (`pulumi.Input[str]`) - ESP encryption protocol.
          * `espLifetime` (`pulumi.Input[str]`) - ESP lifetime.
          * `espMode` (`pulumi.Input[str]`) - ESP mode.
          * `espPerfectForwardSecrecy` (`pulumi.Input[str]`) - ESP perfect forward secrecy.
          * `ikeAuthenticationProtocol` (`pulumi.Input[str]`) - IKE authentication protocol.
          * `ikeEncryptionProtocol` (`pulumi.Input[str]`) - IKE encryption protocol.
          * `ikeLifetime` (`pulumi.Input[str]`) - IKE lifetime.
          * `ikeMode` (`pulumi.Input[str]`) - IKE mode.
          * `ikePerfectForwardSecrecy` (`pulumi.Input[str]`) - IKE perfect forward secrecy.
          * `ikePreSharedSecret` (`pulumi.Input[str]`) - IKE pre shared secret.
          * `localPrefixes` (`pulumi.Input[list]`) - The local prefix.
          * `peer` (`pulumi.Input[str]`) - The peer IP address.
          * `peerId` (`pulumi.Input[str]`) - Peer ID.
          * `peerInsideNetworks` (`pulumi.Input[list]`) - Peer inside networks.
          * `peerOutsideIpaddress` (`pulumi.Input[str]`) - Peer outsite ipaddress.
          * `preSharedSecret` (`pulumi.Input[str]`) - The pre shared secret for IPSec.
          * `remoteId` (`pulumi.Input[str]`) - The IPSec ID of target.
          * `routes` (`pulumi.Input[list]`) - The routing prefix.
          * `vpcRouterInsideNetworks` (`pulumi.Input[list]`) - VPC Router inside networks.
          * `vpcRouterOutsideIpaddress` (`pulumi.Input[str]`) - VPC Router outside IP address.
        
        The **static_nats** object supports the following:
        
          * `description` (`pulumi.Input[str]`) - The description of the resource.
          * `global_address` (`pulumi.Input[str]`) - (Required) The global IP address of the Static NAT.
          * `privateAddress` (`pulumi.Input[str]`) - (Required) The private IP address of the Static NAT.
        
        The **static_routes** object supports the following:
        
          * `next_hop` (`pulumi.Input[str]`) - (Required) The next hop IP address of the Static Route.
          * `prefix` (`pulumi.Input[str]`) - (Required) The prefix of the Static Route.
        
        The **users** object supports the following:
        
          * `name` (`pulumi.Input[str]`) - The name of the resource.
          * `password` (`pulumi.Input[str]`) - (Required) The password.

        > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/vpc_router.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["aliases"] = aliases
        __props__["description"] = description
        __props__["dhcp_servers"] = dhcp_servers
        __props__["dhcp_static_mappings"] = dhcp_static_mappings
        __props__["firewalls"] = firewalls
        __props__["global_address"] = global_address
        __props__["graceful_shutdown_timeout"] = graceful_shutdown_timeout
        __props__["icon_id"] = icon_id
        __props__["interfaces"] = interfaces
        __props__["internet_connection"] = internet_connection
        __props__["ipaddress1"] = ipaddress1
        __props__["ipaddress2"] = ipaddress2
        __props__["l2tp"] = l2tp
        __props__["name"] = name
        __props__["plan"] = plan
        __props__["port_forwardings"] = port_forwardings
        __props__["pptp"] = pptp
        __props__["site_to_site_vpns"] = site_to_site_vpns
        __props__["static_nats"] = static_nats
        __props__["static_routes"] = static_routes
        __props__["switch_id"] = switch_id
        __props__["syslog_host"] = syslog_host
        __props__["tags"] = tags
        __props__["users"] = users
        __props__["vip"] = vip
        __props__["vrid"] = vrid
        __props__["zone"] = zone
        return VPCRouter(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

