# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class ProxyLBACME(pulumi.CustomResource):
    accept_tos: pulumi.Output[bool]
    """
    The flag for accept Let's Encrypt's [Terms of Service](https://letsencrypt.org/repository/).  
    """
    certificates: pulumi.Output[list]
    """
    Certificate used to terminate SSL/TSL. It contains some attributes to Certificate.
    
      * `additionalCertificates` (`list`) - Additional certificates.
    
        * `intermediateCert` (`str`) - The intermediate certificate.
        * `private_key` (`str`) - The private key.
        * `serverCert` (`str`) - The server certificate.
    
      * `intermediateCert` (`str`) - The intermediate certificate.
      * `private_key` (`str`) - The private key.
      * `serverCert` (`str`) - The server certificate.
    """
    common_name: pulumi.Output[str]
    """
    The FQDN of target domain.  
    """
    proxylb_id: pulumi.Output[str]
    """
    The ID of target ProxyLB resource.  
    """
    update_delay_sec: pulumi.Output[float]
    """
    The wait time for update settings.
    """
    def __init__(__self__, resource_name, opts=None, accept_tos=None, common_name=None, proxylb_id=None, update_delay_sec=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a SakuraCloud ProxyLB(Enhanced-LoadBalancer) resource. This can be used to create, update, and delete ProxyLBs.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] accept_tos: The flag for accept Let's Encrypt's [Terms of Service](https://letsencrypt.org/repository/).  
        :param pulumi.Input[str] common_name: The FQDN of target domain.  
        :param pulumi.Input[str] proxylb_id: The ID of target ProxyLB resource.  
        :param pulumi.Input[float] update_delay_sec: The wait time for update settings.

        > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/proxylb_acme.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if accept_tos is None:
                raise TypeError("Missing required property 'accept_tos'")
            __props__['accept_tos'] = accept_tos
            if common_name is None:
                raise TypeError("Missing required property 'common_name'")
            __props__['common_name'] = common_name
            if proxylb_id is None:
                raise TypeError("Missing required property 'proxylb_id'")
            __props__['proxylb_id'] = proxylb_id
            __props__['update_delay_sec'] = update_delay_sec
            __props__['certificates'] = None
        super(ProxyLBACME, __self__).__init__(
            'sakuracloud:index/proxyLBACME:ProxyLBACME',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, accept_tos=None, certificates=None, common_name=None, proxylb_id=None, update_delay_sec=None):
        """
        Get an existing ProxyLBACME resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] accept_tos: The flag for accept Let's Encrypt's [Terms of Service](https://letsencrypt.org/repository/).  
        :param pulumi.Input[list] certificates: Certificate used to terminate SSL/TSL. It contains some attributes to Certificate.
        :param pulumi.Input[str] common_name: The FQDN of target domain.  
        :param pulumi.Input[str] proxylb_id: The ID of target ProxyLB resource.  
        :param pulumi.Input[float] update_delay_sec: The wait time for update settings.
        
        The **certificates** object supports the following:
        
          * `additionalCertificates` (`pulumi.Input[list]`) - Additional certificates.
        
            * `intermediateCert` (`pulumi.Input[str]`) - The intermediate certificate.
            * `private_key` (`pulumi.Input[str]`) - The private key.
            * `serverCert` (`pulumi.Input[str]`) - The server certificate.
        
          * `intermediateCert` (`pulumi.Input[str]`) - The intermediate certificate.
          * `private_key` (`pulumi.Input[str]`) - The private key.
          * `serverCert` (`pulumi.Input[str]`) - The server certificate.

        > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/proxylb_acme.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["accept_tos"] = accept_tos
        __props__["certificates"] = certificates
        __props__["common_name"] = common_name
        __props__["proxylb_id"] = proxylb_id
        __props__["update_delay_sec"] = update_delay_sec
        return ProxyLBACME(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

