# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class MobileGateway(pulumi.CustomResource):
    description: pulumi.Output[str]
    """
    The description of the resource.
    """
    dns_server1: pulumi.Output[str]
    """
    The primary DNS server IP address.
    """
    dns_server2: pulumi.Output[str]
    """
    The secondly DNS server IP address.
    """
    graceful_shutdown_timeout: pulumi.Output[float]
    """
    The wait time (seconds) to do graceful shutdown the server connected to the resource.
    """
    icon_id: pulumi.Output[str]
    """
    The ID of the icon.
    """
    internet_connection: pulumi.Output[bool]
    """
    The flag of enable/disable connecting from MobileGateway to the Internet.
    """
    name: pulumi.Output[str]
    """
    The name of the resource.
    """
    private_ipaddress: pulumi.Output[str]
    """
    The IP address on private NIC of the Mobile Gateway.
    """
    private_nw_mask_len: pulumi.Output[float]
    """
    The network mask length on private NIC of the Mobile Gateway.
    """
    public_ipaddress: pulumi.Output[str]
    """
    The IP address on public NIC of the Mobile Gateway.
    """
    public_nw_mask_len: pulumi.Output[float]
    """
    The network mask length on public NIC of the Mobile Gateway.
    """
    sim_ids: pulumi.Output[list]
    """
    The ID list of the SIMs connected to the Mobile Gateway.
    """
    static_routes: pulumi.Output[list]
    switch_id: pulumi.Output[str]
    """
    The ID of the switch connected to the Mobile Gateway.
    """
    tags: pulumi.Output[list]
    """
    The tag list of the resources.
    """
    traffic_control: pulumi.Output[dict]
    """
    Traffic control rules. It contains some attributes to Traffic Control.
    
      * `autoTrafficShaping` (`bool`) - The flag of enable/disable Auto Traffic Shaping.
      * `bandWidthLimit` (`float`) - Traffic bandwidth limit(unit:`Kbps`). 
      * `enableEmail` (`bool`) - The flag of enable/disable e-mail notification.
      * `enableSlack` (`bool`) - The flag of enable/disable slack notification.
      * `quota` (`float`) - Traffic quota size (unit:`MB`).  
      * `slackWebhook` (`str`) - The webhook URL of destination of slack notification.
    """
    zone: pulumi.Output[str]
    """
    The ID of the zone to which the resource belongs.
    """
    def __init__(__self__, resource_name, opts=None, description=None, dns_server1=None, dns_server2=None, graceful_shutdown_timeout=None, icon_id=None, internet_connection=None, name=None, private_ipaddress=None, private_nw_mask_len=None, static_routes=None, switch_id=None, tags=None, traffic_control=None, zone=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a SakuraCloud Mobile Gateway resource. This can be used to create, update, and delete Mobile Gateways.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the resource.
        :param pulumi.Input[str] dns_server1: The primary DNS server IP address.
        :param pulumi.Input[str] dns_server2: The secondly DNS server IP address.
        :param pulumi.Input[float] graceful_shutdown_timeout: The wait time (seconds) to do graceful shutdown the server connected to the resource.
        :param pulumi.Input[str] icon_id: The ID of the icon.
        :param pulumi.Input[bool] internet_connection: The flag of enable/disable connecting from MobileGateway to the Internet.
        :param pulumi.Input[str] name: The name of the resource.
        :param pulumi.Input[str] private_ipaddress: The IP address on private NIC of the Mobile Gateway.
        :param pulumi.Input[float] private_nw_mask_len: The network mask length on private NIC of the Mobile Gateway.
        :param pulumi.Input[str] switch_id: The ID of the switch connected to the Mobile Gateway.
        :param pulumi.Input[list] tags: The tag list of the resources.
        :param pulumi.Input[dict] traffic_control: Traffic control rules. It contains some attributes to Traffic Control.
        :param pulumi.Input[str] zone: The ID of the zone to which the resource belongs.
        
        The **static_routes** object supports the following:
        
          * `next_hop` (`pulumi.Input[str]`)
          * `prefix` (`pulumi.Input[str]`)
        
        The **traffic_control** object supports the following:
        
          * `autoTrafficShaping` (`pulumi.Input[bool]`) - The flag of enable/disable Auto Traffic Shaping.
          * `bandWidthLimit` (`pulumi.Input[float]`) - Traffic bandwidth limit(unit:`Kbps`). 
          * `enableEmail` (`pulumi.Input[bool]`) - The flag of enable/disable e-mail notification.
          * `enableSlack` (`pulumi.Input[bool]`) - The flag of enable/disable slack notification.
          * `quota` (`pulumi.Input[float]`) - Traffic quota size (unit:`MB`).  
          * `slackWebhook` (`pulumi.Input[str]`) - The webhook URL of destination of slack notification.

        > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/mobile_gateway.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['description'] = description
            __props__['dns_server1'] = dns_server1
            __props__['dns_server2'] = dns_server2
            __props__['graceful_shutdown_timeout'] = graceful_shutdown_timeout
            __props__['icon_id'] = icon_id
            __props__['internet_connection'] = internet_connection
            __props__['name'] = name
            __props__['private_ipaddress'] = private_ipaddress
            __props__['private_nw_mask_len'] = private_nw_mask_len
            __props__['static_routes'] = static_routes
            __props__['switch_id'] = switch_id
            __props__['tags'] = tags
            __props__['traffic_control'] = traffic_control
            __props__['zone'] = zone
            __props__['public_ipaddress'] = None
            __props__['public_nw_mask_len'] = None
            __props__['sim_ids'] = None
        super(MobileGateway, __self__).__init__(
            'sakuracloud:index/mobileGateway:MobileGateway',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, description=None, dns_server1=None, dns_server2=None, graceful_shutdown_timeout=None, icon_id=None, internet_connection=None, name=None, private_ipaddress=None, private_nw_mask_len=None, public_ipaddress=None, public_nw_mask_len=None, sim_ids=None, static_routes=None, switch_id=None, tags=None, traffic_control=None, zone=None):
        """
        Get an existing MobileGateway resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the resource.
        :param pulumi.Input[str] dns_server1: The primary DNS server IP address.
        :param pulumi.Input[str] dns_server2: The secondly DNS server IP address.
        :param pulumi.Input[float] graceful_shutdown_timeout: The wait time (seconds) to do graceful shutdown the server connected to the resource.
        :param pulumi.Input[str] icon_id: The ID of the icon.
        :param pulumi.Input[bool] internet_connection: The flag of enable/disable connecting from MobileGateway to the Internet.
        :param pulumi.Input[str] name: The name of the resource.
        :param pulumi.Input[str] private_ipaddress: The IP address on private NIC of the Mobile Gateway.
        :param pulumi.Input[float] private_nw_mask_len: The network mask length on private NIC of the Mobile Gateway.
        :param pulumi.Input[str] public_ipaddress: The IP address on public NIC of the Mobile Gateway.
        :param pulumi.Input[float] public_nw_mask_len: The network mask length on public NIC of the Mobile Gateway.
        :param pulumi.Input[list] sim_ids: The ID list of the SIMs connected to the Mobile Gateway.
        :param pulumi.Input[str] switch_id: The ID of the switch connected to the Mobile Gateway.
        :param pulumi.Input[list] tags: The tag list of the resources.
        :param pulumi.Input[dict] traffic_control: Traffic control rules. It contains some attributes to Traffic Control.
        :param pulumi.Input[str] zone: The ID of the zone to which the resource belongs.
        
        The **static_routes** object supports the following:
        
          * `next_hop` (`pulumi.Input[str]`)
          * `prefix` (`pulumi.Input[str]`)
        
        The **traffic_control** object supports the following:
        
          * `autoTrafficShaping` (`pulumi.Input[bool]`) - The flag of enable/disable Auto Traffic Shaping.
          * `bandWidthLimit` (`pulumi.Input[float]`) - Traffic bandwidth limit(unit:`Kbps`). 
          * `enableEmail` (`pulumi.Input[bool]`) - The flag of enable/disable e-mail notification.
          * `enableSlack` (`pulumi.Input[bool]`) - The flag of enable/disable slack notification.
          * `quota` (`pulumi.Input[float]`) - Traffic quota size (unit:`MB`).  
          * `slackWebhook` (`pulumi.Input[str]`) - The webhook URL of destination of slack notification.

        > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/mobile_gateway.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["description"] = description
        __props__["dns_server1"] = dns_server1
        __props__["dns_server2"] = dns_server2
        __props__["graceful_shutdown_timeout"] = graceful_shutdown_timeout
        __props__["icon_id"] = icon_id
        __props__["internet_connection"] = internet_connection
        __props__["name"] = name
        __props__["private_ipaddress"] = private_ipaddress
        __props__["private_nw_mask_len"] = private_nw_mask_len
        __props__["public_ipaddress"] = public_ipaddress
        __props__["public_nw_mask_len"] = public_nw_mask_len
        __props__["sim_ids"] = sim_ids
        __props__["static_routes"] = static_routes
        __props__["switch_id"] = switch_id
        __props__["tags"] = tags
        __props__["traffic_control"] = traffic_control
        __props__["zone"] = zone
        return MobileGateway(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

