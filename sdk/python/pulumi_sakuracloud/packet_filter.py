# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class PacketFilter(pulumi.CustomResource):
    description: pulumi.Output[str]
    """
    The description of the expression.
    """
    expressions: pulumi.Output[list]
    """
    Health check rules. It contains some attributes to Expressions.
    
      * `allow` (`bool`) - The flag for allow/deny packets (default:`true`).
      * `description` (`str`) - The description of the expression.
      * `dest_port` (`str`) - Target destination port.
        Valid format is one of the following:
        * Number: `"0"` - `"65535"`
        * Range: `"xx-yy"`
        * Range (hex): `"0xPPPP/0xMMMM"`
      * `protocol` (`str`) - Protocol used in health check.  
        Valid value is one of the following: [ "tcp" / "udp" / "icmp" / "fragment" / "ip" ]
      * `source_nw` (`str`) - Target source network IP address or CIDR or range.  
        Valid format is one of the following:
        * IP address: `"xxx.xxx.xxx.xxx"`
        * CIDR: `"xxx.xxx.xxx.xxx/nn"`
        * Range: `"xxx.xxx.xxx.xxx/yyy.yyy.yyy.yyy"`
      * `source_port` (`str`) - Target source port.
        Valid format is one of the following:
        * Number: `"0"` - `"65535"`
        * Range: `"xx-yy"`
        * Range (hex): `"0xPPPP/0xMMMM"`
    """
    name: pulumi.Output[str]
    """
    The name of the resource.
    """
    zone: pulumi.Output[str]
    def __init__(__self__, resource_name, opts=None, description=None, expressions=None, name=None, zone=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a SakuraCloud Packet Filter resource. This can be used to create, update, and delete Packet Filters.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the expression.
        :param pulumi.Input[list] expressions: Health check rules. It contains some attributes to Expressions.
        :param pulumi.Input[str] name: The name of the resource.
        
        The **expressions** object supports the following:
        
          * `allow` (`pulumi.Input[bool]`) - The flag for allow/deny packets (default:`true`).
          * `description` (`pulumi.Input[str]`) - The description of the expression.
          * `dest_port` (`pulumi.Input[str]`) - Target destination port.
            Valid format is one of the following:
            * Number: `"0"` - `"65535"`
            * Range: `"xx-yy"`
            * Range (hex): `"0xPPPP/0xMMMM"`
          * `protocol` (`pulumi.Input[str]`) - Protocol used in health check.  
            Valid value is one of the following: [ "tcp" / "udp" / "icmp" / "fragment" / "ip" ]
          * `source_nw` (`pulumi.Input[str]`) - Target source network IP address or CIDR or range.  
            Valid format is one of the following:
            * IP address: `"xxx.xxx.xxx.xxx"`
            * CIDR: `"xxx.xxx.xxx.xxx/nn"`
            * Range: `"xxx.xxx.xxx.xxx/yyy.yyy.yyy.yyy"`
          * `source_port` (`pulumi.Input[str]`) - Target source port.
            Valid format is one of the following:
            * Number: `"0"` - `"65535"`
            * Range: `"xx-yy"`
            * Range (hex): `"0xPPPP/0xMMMM"`

        > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/packet_filter.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['description'] = description
            __props__['expressions'] = expressions
            __props__['name'] = name
            __props__['zone'] = zone
        super(PacketFilter, __self__).__init__(
            'sakuracloud:index/packetFilter:PacketFilter',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, description=None, expressions=None, name=None, zone=None):
        """
        Get an existing PacketFilter resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the expression.
        :param pulumi.Input[list] expressions: Health check rules. It contains some attributes to Expressions.
        :param pulumi.Input[str] name: The name of the resource.
        
        The **expressions** object supports the following:
        
          * `allow` (`pulumi.Input[bool]`) - The flag for allow/deny packets (default:`true`).
          * `description` (`pulumi.Input[str]`) - The description of the expression.
          * `dest_port` (`pulumi.Input[str]`) - Target destination port.
            Valid format is one of the following:
            * Number: `"0"` - `"65535"`
            * Range: `"xx-yy"`
            * Range (hex): `"0xPPPP/0xMMMM"`
          * `protocol` (`pulumi.Input[str]`) - Protocol used in health check.  
            Valid value is one of the following: [ "tcp" / "udp" / "icmp" / "fragment" / "ip" ]
          * `source_nw` (`pulumi.Input[str]`) - Target source network IP address or CIDR or range.  
            Valid format is one of the following:
            * IP address: `"xxx.xxx.xxx.xxx"`
            * CIDR: `"xxx.xxx.xxx.xxx/nn"`
            * Range: `"xxx.xxx.xxx.xxx/yyy.yyy.yyy.yyy"`
          * `source_port` (`pulumi.Input[str]`) - Target source port.
            Valid format is one of the following:
            * Number: `"0"` - `"65535"`
            * Range: `"xx-yy"`
            * Range (hex): `"0xPPPP/0xMMMM"`

        > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/packet_filter.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["description"] = description
        __props__["expressions"] = expressions
        __props__["name"] = name
        __props__["zone"] = zone
        return PacketFilter(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

