# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class Archive(pulumi.CustomResource):
    archive_file: pulumi.Output[str]
    """
    Archive file to upload (format:`raw`).
    """
    description: pulumi.Output[str]
    """
    The description of the resource.
    """
    hash: pulumi.Output[str]
    """
    MD5 hash value of the archive file.
    """
    icon_id: pulumi.Output[str]
    """
    The ID of the icon.
    """
    name: pulumi.Output[str]
    """
    The name of the resource.
    """
    size: pulumi.Output[float]
    """
    The size of the resource (unit:`GB`).   
    Valid value is one of the following: [ 20 (default) / 40 / 60 / 80 / 100 / 250 / 500 / 750 / 1024 ]
    """
    tags: pulumi.Output[list]
    """
    The tag list of the resources.
    """
    zone: pulumi.Output[str]
    """
    The ID of the zone to which the resource belongs.
    """
    def __init__(__self__, resource_name, opts=None, archive_file=None, description=None, hash=None, icon_id=None, name=None, size=None, tags=None, zone=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a SakuraCloud Archive resource. This can be used to create, update, and delete Archives.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] archive_file: Archive file to upload (format:`raw`).
        :param pulumi.Input[str] description: The description of the resource.
        :param pulumi.Input[str] hash: MD5 hash value of the archive file.
        :param pulumi.Input[str] icon_id: The ID of the icon.
        :param pulumi.Input[str] name: The name of the resource.
        :param pulumi.Input[float] size: The size of the resource (unit:`GB`).   
               Valid value is one of the following: [ 20 (default) / 40 / 60 / 80 / 100 / 250 / 500 / 750 / 1024 ]
        :param pulumi.Input[list] tags: The tag list of the resources.
        :param pulumi.Input[str] zone: The ID of the zone to which the resource belongs.

        > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/archive.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if archive_file is None:
                raise TypeError("Missing required property 'archive_file'")
            __props__['archive_file'] = archive_file
            __props__['description'] = description
            __props__['hash'] = hash
            __props__['icon_id'] = icon_id
            __props__['name'] = name
            __props__['size'] = size
            __props__['tags'] = tags
            __props__['zone'] = zone
        super(Archive, __self__).__init__(
            'sakuracloud:index/archive:Archive',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, archive_file=None, description=None, hash=None, icon_id=None, name=None, size=None, tags=None, zone=None):
        """
        Get an existing Archive resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] archive_file: Archive file to upload (format:`raw`).
        :param pulumi.Input[str] description: The description of the resource.
        :param pulumi.Input[str] hash: MD5 hash value of the archive file.
        :param pulumi.Input[str] icon_id: The ID of the icon.
        :param pulumi.Input[str] name: The name of the resource.
        :param pulumi.Input[float] size: The size of the resource (unit:`GB`).   
               Valid value is one of the following: [ 20 (default) / 40 / 60 / 80 / 100 / 250 / 500 / 750 / 1024 ]
        :param pulumi.Input[list] tags: The tag list of the resources.
        :param pulumi.Input[str] zone: The ID of the zone to which the resource belongs.

        > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/archive.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["archive_file"] = archive_file
        __props__["description"] = description
        __props__["hash"] = hash
        __props__["icon_id"] = icon_id
        __props__["name"] = name
        __props__["size"] = size
        __props__["tags"] = tags
        __props__["zone"] = zone
        return Archive(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

