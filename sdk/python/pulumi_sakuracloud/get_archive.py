# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetArchiveResult:
    """
    A collection of values returned by getArchive.
    """
    def __init__(__self__, description=None, filters=None, icon_id=None, name=None, name_selectors=None, os_type=None, size=None, tag_selectors=None, tags=None, zone=None, id=None):
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        __self__.description = description
        """
        The description of the resource.
        """
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        __self__.filters = filters
        if icon_id and not isinstance(icon_id, str):
            raise TypeError("Expected argument 'icon_id' to be a str")
        __self__.icon_id = icon_id
        """
        The ID of the icon of the resource.
        """
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        __self__.name = name
        """
        The name of the resource.
        """
        if name_selectors and not isinstance(name_selectors, list):
            raise TypeError("Expected argument 'name_selectors' to be a list")
        __self__.name_selectors = name_selectors
        if os_type and not isinstance(os_type, str):
            raise TypeError("Expected argument 'os_type' to be a str")
        __self__.os_type = os_type
        if size and not isinstance(size, float):
            raise TypeError("Expected argument 'size' to be a float")
        __self__.size = size
        """
        The size of the resource (unit:`GB`).
        """
        if tag_selectors and not isinstance(tag_selectors, list):
            raise TypeError("Expected argument 'tag_selectors' to be a list")
        __self__.tag_selectors = tag_selectors
        if tags and not isinstance(tags, list):
            raise TypeError("Expected argument 'tags' to be a list")
        __self__.tags = tags
        """
        The tag list of the resources.
        """
        if zone and not isinstance(zone, str):
            raise TypeError("Expected argument 'zone' to be a str")
        __self__.zone = zone
        """
        The ID of the zone to which the resource belongs.
        """
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """
class AwaitableGetArchiveResult(GetArchiveResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetArchiveResult(
            description=self.description,
            filters=self.filters,
            icon_id=self.icon_id,
            name=self.name,
            name_selectors=self.name_selectors,
            os_type=self.os_type,
            size=self.size,
            tag_selectors=self.tag_selectors,
            tags=self.tags,
            zone=self.zone,
            id=self.id)

def get_archive(filters=None,name_selectors=None,os_type=None,tag_selectors=None,zone=None,opts=None):
    """
    Use this data source to retrieve information about a SakuraCloud Archive.
    
    ## `os_type` Parameter Reference
    
    * `centos` - CentOS 7
    * `centos6` - CentOS 6
    * `ubuntu` - Ubuntu 
    * `debian` - Debian 
    * `coreos` - CoreOS
    * `rancheros` - RancherOS
    * `k3os` - k3OS
    * `kusanagi` - Kusanagi (CentOS7)
    * `sophos-utm` - Sophos-UTM
    * `freebsd` - FreeBSD
    * `windows2016` - Windows 2016
    * `windows2016-rds` - Windows 2016 (RDS)
    * `windows2016-rds-office` - Windows 2016 (RDS + Office)
    * `windows2016-sql-web` - Windows 2016 SQLServer (Web)
    * `windows2016-sql-standard` - Windows 2016 SQLServer (Standard)
    * `windows2016-sql2017-standard` - Windows 2016 SQLServer 2017 (Standard)
    * `windows2016-sql-standard-all` - Windows 2016 SQLServer (Standard, RDS + Office)
    * `windows2016-sql2017-standard-all` - Windows 2016 SQLServer 2017 (Standard, RDS + Office)
    * `windows2019` - Windows 2019
    
    :param list filters: The map of filter key and value.
    :param list name_selectors: The list of names to filtering.
    :param str os_type: The slug of target public archive. Valid values are in `os_type` section.
    :param list tag_selectors: The list of tags to filtering.
    :param str zone: The ID of the zone.
    
    The **filters** object supports the following:
    
      * `name` (`str`) - The name of the resource.
      * `values` (`list`)

    > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/d/archive.html.markdown.
    """
    __args__ = dict()

    __args__['filters'] = filters
    __args__['nameSelectors'] = name_selectors
    __args__['osType'] = os_type
    __args__['tagSelectors'] = tag_selectors
    __args__['zone'] = zone
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('sakuracloud:index/getArchive:getArchive', __args__, opts=opts).value

    return AwaitableGetArchiveResult(
        description=__ret__.get('description'),
        filters=__ret__.get('filters'),
        icon_id=__ret__.get('iconId'),
        name=__ret__.get('name'),
        name_selectors=__ret__.get('nameSelectors'),
        os_type=__ret__.get('osType'),
        size=__ret__.get('size'),
        tag_selectors=__ret__.get('tagSelectors'),
        tags=__ret__.get('tags'),
        zone=__ret__.get('zone'),
        id=__ret__.get('id'))
