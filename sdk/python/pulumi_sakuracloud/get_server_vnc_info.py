# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetServerVNCInfoResult:
    """
    A collection of values returned by getServerVNCInfo.
    """
    def __init__(__self__, host=None, id=None, password=None, port=None, server_id=None, zone=None):
        if host and not isinstance(host, str):
            raise TypeError("Expected argument 'host' to be a str")
        __self__.host = host
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """
        if password and not isinstance(password, str):
            raise TypeError("Expected argument 'password' to be a str")
        __self__.password = password
        if port and not isinstance(port, float):
            raise TypeError("Expected argument 'port' to be a float")
        __self__.port = port
        if server_id and not isinstance(server_id, str):
            raise TypeError("Expected argument 'server_id' to be a str")
        __self__.server_id = server_id
        if zone and not isinstance(zone, str):
            raise TypeError("Expected argument 'zone' to be a str")
        __self__.zone = zone
class AwaitableGetServerVNCInfoResult(GetServerVNCInfoResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetServerVNCInfoResult(
            host=self.host,
            id=self.id,
            password=self.password,
            port=self.port,
            server_id=self.server_id,
            zone=self.zone)

def get_server_vnc_info(server_id=None,zone=None,opts=None):
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()


    __args__['serverId'] = server_id
    __args__['zone'] = zone
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('sakuracloud:index/getServerVNCInfo:getServerVNCInfo', __args__, opts=opts).value

    return AwaitableGetServerVNCInfoResult(
        host=__ret__.get('host'),
        id=__ret__.get('id'),
        password=__ret__.get('password'),
        port=__ret__.get('port'),
        server_id=__ret__.get('serverId'),
        zone=__ret__.get('zone'))
