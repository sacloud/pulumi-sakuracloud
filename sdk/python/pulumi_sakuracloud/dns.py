# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class DNS(pulumi.CustomResource):
    description: pulumi.Output[str]
    """
    The description of the resource.
    """
    dns_servers: pulumi.Output[list]
    """
    List of host names of DNS servers.
    """
    icon_id: pulumi.Output[str]
    """
    The ID of the icon.
    """
    records: pulumi.Output[list]
    """
    Records. It contains some attributes to Records.
    
      * `name` (`str`) - The hostname of target Record. If "@" is specified, it indicates own zone.
      * `port` (`float`) - The port number used when `type` is `SRV`. 
      * `priority` (`float`) - The priority used when `type` is `MX` or `SRV`.
      * `ttl` (`float`) - The ttl value of the Record (unit:`second`). 
      * `type` (`str`) - The Record type.  
        Valid value is one of the following: [ "A" / "AAAA" / "CNAME" / "NS" / "MX" / "TXT" / "SRV" / "CAA" ]
      * `value` (`str`) - The value of the Record. 
      * `weight` (`float`) - The weight used when `type` is `SRV`.
    """
    tags: pulumi.Output[list]
    """
    The tag list of the resources.
    """
    zone: pulumi.Output[str]
    """
    The name of the zone.
    """
    def __init__(__self__, resource_name, opts=None, description=None, icon_id=None, records=None, tags=None, zone=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a SakuraCloud DNS zones resource. This can be used to create, update, and delete DNS zones.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the resource.
        :param pulumi.Input[str] icon_id: The ID of the icon.
        :param pulumi.Input[list] records: Records. It contains some attributes to Records.
        :param pulumi.Input[list] tags: The tag list of the resources.
        :param pulumi.Input[str] zone: The name of the zone.
        
        The **records** object supports the following:
        
          * `name` (`pulumi.Input[str]`) - The hostname of target Record. If "@" is specified, it indicates own zone.
          * `port` (`pulumi.Input[float]`) - The port number used when `type` is `SRV`. 
          * `priority` (`pulumi.Input[float]`) - The priority used when `type` is `MX` or `SRV`.
          * `ttl` (`pulumi.Input[float]`) - The ttl value of the Record (unit:`second`). 
          * `type` (`pulumi.Input[str]`) - The Record type.  
            Valid value is one of the following: [ "A" / "AAAA" / "CNAME" / "NS" / "MX" / "TXT" / "SRV" / "CAA" ]
          * `value` (`pulumi.Input[str]`) - The value of the Record. 
          * `weight` (`pulumi.Input[float]`) - The weight used when `type` is `SRV`.

        > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/dns.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['description'] = description
            __props__['icon_id'] = icon_id
            __props__['records'] = records
            __props__['tags'] = tags
            if zone is None:
                raise TypeError("Missing required property 'zone'")
            __props__['zone'] = zone
            __props__['dns_servers'] = None
        super(DNS, __self__).__init__(
            'sakuracloud:index/dNS:DNS',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, description=None, dns_servers=None, icon_id=None, records=None, tags=None, zone=None):
        """
        Get an existing DNS resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the resource.
        :param pulumi.Input[list] dns_servers: List of host names of DNS servers.
        :param pulumi.Input[str] icon_id: The ID of the icon.
        :param pulumi.Input[list] records: Records. It contains some attributes to Records.
        :param pulumi.Input[list] tags: The tag list of the resources.
        :param pulumi.Input[str] zone: The name of the zone.
        
        The **records** object supports the following:
        
          * `name` (`pulumi.Input[str]`) - The hostname of target Record. If "@" is specified, it indicates own zone.
          * `port` (`pulumi.Input[float]`) - The port number used when `type` is `SRV`. 
          * `priority` (`pulumi.Input[float]`) - The priority used when `type` is `MX` or `SRV`.
          * `ttl` (`pulumi.Input[float]`) - The ttl value of the Record (unit:`second`). 
          * `type` (`pulumi.Input[str]`) - The Record type.  
            Valid value is one of the following: [ "A" / "AAAA" / "CNAME" / "NS" / "MX" / "TXT" / "SRV" / "CAA" ]
          * `value` (`pulumi.Input[str]`) - The value of the Record. 
          * `weight` (`pulumi.Input[float]`) - The weight used when `type` is `SRV`.

        > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/dns.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["description"] = description
        __props__["dns_servers"] = dns_servers
        __props__["icon_id"] = icon_id
        __props__["records"] = records
        __props__["tags"] = tags
        __props__["zone"] = zone
        return DNS(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

