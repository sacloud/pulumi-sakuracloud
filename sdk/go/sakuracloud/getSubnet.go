// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Get information about an existing Subnet.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-sakuracloud/sdk/go/sakuracloud"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi/config"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		cfg := config.New(ctx, "")
// 		internetId := cfg.RequireObject("internetId")
// 		_, err := sakuracloud.LookupSubnet(ctx, &sakuracloud.LookupSubnetArgs{
// 			InternetId: internetId,
// 			Index:      1,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupSubnet(ctx *pulumi.Context, args *LookupSubnetArgs, opts ...pulumi.InvokeOption) (*LookupSubnetResult, error) {
	var rv LookupSubnetResult
	err := ctx.Invoke("sakuracloud:index/getSubnet:getSubnet", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSubnet.
type LookupSubnetArgs struct {
	// The index of the subnet in assigned to the Switch+Router. Changing this forces a new resource to be created.
	Index int `pulumi:"index"`
	// The id of the switch+router resource that the Subnet belongs. Changing this forces a new resource to be created.
	InternetId string `pulumi:"internetId"`
	// The name of zone that the Subnet is in (e.g. `is1a`, `tk1a`).
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getSubnet.
type LookupSubnetResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	Index      int    `pulumi:"index"`
	InternetId string `pulumi:"internetId"`
	// A list of assigned global address to the Subnet.
	IpAddresses []string `pulumi:"ipAddresses"`
	// Maximum IP address in assigned global addresses to the Subnet.
	MaxIpAddress string `pulumi:"maxIpAddress"`
	// Minimum IP address in assigned global addresses to the Subnet.
	MinIpAddress string `pulumi:"minIpAddress"`
	// The bit length of the subnet assigned to the Subnet.
	Netmask int `pulumi:"netmask"`
	// The IPv4 network address assigned to the Subnet.
	NetworkAddress string `pulumi:"networkAddress"`
	// The ip address of the next-hop at the Subnet.
	NextHop string `pulumi:"nextHop"`
	// The id of the switch connected from the Subnet.
	SwitchId string `pulumi:"switchId"`
	Zone     string `pulumi:"zone"`
}
