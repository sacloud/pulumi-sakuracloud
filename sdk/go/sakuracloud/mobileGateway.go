// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a SakuraCloud Mobile Gateway resource. This can be used to create, update, and delete Mobile Gateways.
//
// > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/mobile_gateway.html.markdown.
type MobileGateway struct {
	s *pulumi.ResourceState
}

// NewMobileGateway registers a new resource with the given unique name, arguments, and options.
func NewMobileGateway(ctx *pulumi.Context,
	name string, args *MobileGatewayArgs, opts ...pulumi.ResourceOpt) (*MobileGateway, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["dnsServer1"] = nil
		inputs["dnsServer2"] = nil
		inputs["gracefulShutdownTimeout"] = nil
		inputs["iconId"] = nil
		inputs["internetConnection"] = nil
		inputs["name"] = nil
		inputs["privateIpaddress"] = nil
		inputs["privateNwMaskLen"] = nil
		inputs["staticRoutes"] = nil
		inputs["switchId"] = nil
		inputs["tags"] = nil
		inputs["trafficControl"] = nil
		inputs["zone"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["dnsServer1"] = args.DnsServer1
		inputs["dnsServer2"] = args.DnsServer2
		inputs["gracefulShutdownTimeout"] = args.GracefulShutdownTimeout
		inputs["iconId"] = args.IconId
		inputs["internetConnection"] = args.InternetConnection
		inputs["name"] = args.Name
		inputs["privateIpaddress"] = args.PrivateIpaddress
		inputs["privateNwMaskLen"] = args.PrivateNwMaskLen
		inputs["staticRoutes"] = args.StaticRoutes
		inputs["switchId"] = args.SwitchId
		inputs["tags"] = args.Tags
		inputs["trafficControl"] = args.TrafficControl
		inputs["zone"] = args.Zone
	}
	inputs["publicIpaddress"] = nil
	inputs["publicNwMaskLen"] = nil
	inputs["simIds"] = nil
	s, err := ctx.RegisterResource("sakuracloud:index/mobileGateway:MobileGateway", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &MobileGateway{s: s}, nil
}

// GetMobileGateway gets an existing MobileGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMobileGateway(ctx *pulumi.Context,
	name string, id pulumi.ID, state *MobileGatewayState, opts ...pulumi.ResourceOpt) (*MobileGateway, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["dnsServer1"] = state.DnsServer1
		inputs["dnsServer2"] = state.DnsServer2
		inputs["gracefulShutdownTimeout"] = state.GracefulShutdownTimeout
		inputs["iconId"] = state.IconId
		inputs["internetConnection"] = state.InternetConnection
		inputs["name"] = state.Name
		inputs["privateIpaddress"] = state.PrivateIpaddress
		inputs["privateNwMaskLen"] = state.PrivateNwMaskLen
		inputs["publicIpaddress"] = state.PublicIpaddress
		inputs["publicNwMaskLen"] = state.PublicNwMaskLen
		inputs["simIds"] = state.SimIds
		inputs["staticRoutes"] = state.StaticRoutes
		inputs["switchId"] = state.SwitchId
		inputs["tags"] = state.Tags
		inputs["trafficControl"] = state.TrafficControl
		inputs["zone"] = state.Zone
	}
	s, err := ctx.ReadResource("sakuracloud:index/mobileGateway:MobileGateway", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &MobileGateway{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *MobileGateway) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *MobileGateway) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The description of the resource.
func (r *MobileGateway) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// The primary DNS server IP address.
func (r *MobileGateway) DnsServer1() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["dnsServer1"])
}

// The secondly DNS server IP address.
func (r *MobileGateway) DnsServer2() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["dnsServer2"])
}

// The wait time (seconds) to do graceful shutdown the server connected to the resource.
func (r *MobileGateway) GracefulShutdownTimeout() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["gracefulShutdownTimeout"])
}

// The ID of the icon.
func (r *MobileGateway) IconId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["iconId"])
}

// The flag of enable/disable connecting from MobileGateway to the Internet.
func (r *MobileGateway) InternetConnection() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["internetConnection"])
}

// The name of the resource.
func (r *MobileGateway) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The IP address on private NIC of the Mobile Gateway.
func (r *MobileGateway) PrivateIpaddress() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["privateIpaddress"])
}

// The network mask length on private NIC of the Mobile Gateway.
func (r *MobileGateway) PrivateNwMaskLen() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["privateNwMaskLen"])
}

// The IP address on public NIC of the Mobile Gateway.
func (r *MobileGateway) PublicIpaddress() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["publicIpaddress"])
}

// The network mask length on public NIC of the Mobile Gateway.
func (r *MobileGateway) PublicNwMaskLen() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["publicNwMaskLen"])
}

// The ID list of the SIMs connected to the Mobile Gateway.
func (r *MobileGateway) SimIds() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["simIds"])
}

func (r *MobileGateway) StaticRoutes() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["staticRoutes"])
}

// The ID of the switch connected to the Mobile Gateway.
func (r *MobileGateway) SwitchId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["switchId"])
}

// The tag list of the resources.
func (r *MobileGateway) Tags() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["tags"])
}

// Traffic control rules. It contains some attributes to Traffic Control.
func (r *MobileGateway) TrafficControl() *pulumi.Output {
	return r.s.State["trafficControl"]
}

// The ID of the zone to which the resource belongs.
func (r *MobileGateway) Zone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["zone"])
}

// Input properties used for looking up and filtering MobileGateway resources.
type MobileGatewayState struct {
	// The description of the resource.
	Description interface{}
	// The primary DNS server IP address.
	DnsServer1 interface{}
	// The secondly DNS server IP address.
	DnsServer2 interface{}
	// The wait time (seconds) to do graceful shutdown the server connected to the resource.
	GracefulShutdownTimeout interface{}
	// The ID of the icon.
	IconId interface{}
	// The flag of enable/disable connecting from MobileGateway to the Internet.
	InternetConnection interface{}
	// The name of the resource.
	Name interface{}
	// The IP address on private NIC of the Mobile Gateway.
	PrivateIpaddress interface{}
	// The network mask length on private NIC of the Mobile Gateway.
	PrivateNwMaskLen interface{}
	// The IP address on public NIC of the Mobile Gateway.
	PublicIpaddress interface{}
	// The network mask length on public NIC of the Mobile Gateway.
	PublicNwMaskLen interface{}
	// The ID list of the SIMs connected to the Mobile Gateway.
	SimIds interface{}
	StaticRoutes interface{}
	// The ID of the switch connected to the Mobile Gateway.
	SwitchId interface{}
	// The tag list of the resources.
	Tags interface{}
	// Traffic control rules. It contains some attributes to Traffic Control.
	TrafficControl interface{}
	// The ID of the zone to which the resource belongs.
	Zone interface{}
}

// The set of arguments for constructing a MobileGateway resource.
type MobileGatewayArgs struct {
	// The description of the resource.
	Description interface{}
	// The primary DNS server IP address.
	DnsServer1 interface{}
	// The secondly DNS server IP address.
	DnsServer2 interface{}
	// The wait time (seconds) to do graceful shutdown the server connected to the resource.
	GracefulShutdownTimeout interface{}
	// The ID of the icon.
	IconId interface{}
	// The flag of enable/disable connecting from MobileGateway to the Internet.
	InternetConnection interface{}
	// The name of the resource.
	Name interface{}
	// The IP address on private NIC of the Mobile Gateway.
	PrivateIpaddress interface{}
	// The network mask length on private NIC of the Mobile Gateway.
	PrivateNwMaskLen interface{}
	StaticRoutes interface{}
	// The ID of the switch connected to the Mobile Gateway.
	SwitchId interface{}
	// The tag list of the resources.
	Tags interface{}
	// Traffic control rules. It contains some attributes to Traffic Control.
	TrafficControl interface{}
	// The ID of the zone to which the resource belongs.
	Zone interface{}
}
