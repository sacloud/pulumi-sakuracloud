// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to retrieve information about a SakuraCloud Simple Monitor.
//
// > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/d/simple_monitor.html.markdown.
func LookupSimpleMonitor(ctx *pulumi.Context, args *GetSimpleMonitorArgs) (*GetSimpleMonitorResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["filters"] = args.Filters
		inputs["nameSelectors"] = args.NameSelectors
		inputs["tagSelectors"] = args.TagSelectors
	}
	outputs, err := ctx.Invoke("sakuracloud:index/getSimpleMonitor:getSimpleMonitor", inputs)
	if err != nil {
		return nil, err
	}
	return &GetSimpleMonitorResult{
		Description: outputs["description"],
		Enabled: outputs["enabled"],
		Filters: outputs["filters"],
		HealthChecks: outputs["healthChecks"],
		IconId: outputs["iconId"],
		NameSelectors: outputs["nameSelectors"],
		NotifyEmailEnabled: outputs["notifyEmailEnabled"],
		NotifyEmailHtml: outputs["notifyEmailHtml"],
		NotifyInterval: outputs["notifyInterval"],
		NotifySlackEnabled: outputs["notifySlackEnabled"],
		NotifySlackWebhook: outputs["notifySlackWebhook"],
		TagSelectors: outputs["tagSelectors"],
		Tags: outputs["tags"],
		Target: outputs["target"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getSimpleMonitor.
type GetSimpleMonitorArgs struct {
	// The map of filter key and value.
	Filters interface{}
	// The list of names to filtering.
	NameSelectors interface{}
	// The list of tags to filtering.
	TagSelectors interface{}
}

// A collection of values returned by getSimpleMonitor.
type GetSimpleMonitorResult struct {
	// The description of the resource.
	Description interface{}
	// The flag of enable/disable monitoring.
	Enabled interface{}
	Filters interface{}
	// Health check rules. It contains some attributes to Health Check.
	HealthChecks interface{}
	// The ID of the icon of the resource.
	IconId interface{}
	NameSelectors interface{}
	// The flag of enable/disable notification by E-mail.
	NotifyEmailEnabled interface{}
	// The flag of enable/disable HTML format for E-mail.
	NotifyEmailHtml interface{}
	// The intervals of notify (unit:`second`).  
	NotifyInterval interface{}
	// The flag of enable/disable notification by slack.
	NotifySlackEnabled interface{}
	// The webhook URL of destination of slack notification.
	NotifySlackWebhook interface{}
	TagSelectors interface{}
	// The tag list of the resources.
	Tags interface{}
	// The HostName or IP address of monitoring target.
	Target interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
