// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to retrieve information about a SakuraCloud Database.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-sakuracloud/blob/master/website/docs/d/database.html.markdown.
func LookupDatabase(ctx *pulumi.Context, args *GetDatabaseArgs) (*GetDatabaseResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["filters"] = args.Filters
		inputs["nameSelectors"] = args.NameSelectors
		inputs["tagSelectors"] = args.TagSelectors
		inputs["zone"] = args.Zone
	}
	outputs, err := ctx.Invoke("sakuracloud:index/getDatabase:getDatabase", inputs)
	if err != nil {
		return nil, err
	}
	return &GetDatabaseResult{
		AllowNetworks: outputs["allowNetworks"],
		BackupTime: outputs["backupTime"],
		BackupWeekdays: outputs["backupWeekdays"],
		DefaultRoute: outputs["defaultRoute"],
		Description: outputs["description"],
		Filters: outputs["filters"],
		IconId: outputs["iconId"],
		Ipaddress1: outputs["ipaddress1"],
		Name: outputs["name"],
		NameSelectors: outputs["nameSelectors"],
		NwMaskLen: outputs["nwMaskLen"],
		Plan: outputs["plan"],
		Port: outputs["port"],
		ReplicaPassword: outputs["replicaPassword"],
		ReplicaUser: outputs["replicaUser"],
		SwitchId: outputs["switchId"],
		TagSelectors: outputs["tagSelectors"],
		Tags: outputs["tags"],
		UserName: outputs["userName"],
		UserPassword: outputs["userPassword"],
		Zone: outputs["zone"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getDatabase.
type GetDatabaseArgs struct {
	// The map of filter key and value.
	Filters interface{}
	// The list of names to filtering.
	NameSelectors interface{}
	// The list of tags to filtering.
	TagSelectors interface{}
	// The ID of the zone.
	Zone interface{}
}

// A collection of values returned by getDatabase.
type GetDatabaseResult struct {
	// The network address list that allowed connections to the database.
	AllowNetworks interface{}
	// The time to perform backup.
	BackupTime interface{}
	// Day of the week to get backup.  
	BackupWeekdays interface{}
	// The default route IP address of the database.
	DefaultRoute interface{}
	// The description of the resource.
	Description interface{}
	Filters interface{}
	// The ID of the icon of the resource.
	IconId interface{}
	// The IP address of the database.
	Ipaddress1 interface{}
	// The name of the resource.
	Name interface{}
	NameSelectors interface{}
	// The network mask length of the database.
	NwMaskLen interface{}
	// The name of the resource plan.
	Plan interface{}
	// The number of the port on which the database is listening.
	Port interface{}
	ReplicaPassword interface{}
	ReplicaUser interface{}
	// The ID of the switch connected to the database.
	SwitchId interface{}
	TagSelectors interface{}
	// The tag list of the resources.
	Tags interface{}
	// The username to access database.
	UserName interface{}
	// The password to access database.
	UserPassword interface{}
	// The ID of the zone to which the resource belongs.
	Zone interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
