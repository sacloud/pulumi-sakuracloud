// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package sakuracloud

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type Switch struct {
	pulumi.CustomResourceState

	// The bridge id attached to the Switch
	BridgeId pulumi.StringPtrOutput `pulumi:"bridgeId"`
	// The description of the Switch. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The icon id to attach to the Switch
	IconId pulumi.StringPtrOutput `pulumi:"iconId"`
	// The name of the Switch. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of server id connected to the switch
	ServerIds pulumi.StringArrayOutput `pulumi:"serverIds"`
	// Any tags to assign to the Switch
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The name of zone that the Switch will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewSwitch registers a new resource with the given unique name, arguments, and options.
func NewSwitch(ctx *pulumi.Context,
	name string, args *SwitchArgs, opts ...pulumi.ResourceOption) (*Switch, error) {
	if args == nil {
		args = &SwitchArgs{}
	}
	var resource Switch
	err := ctx.RegisterResource("sakuracloud:index/switch:Switch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSwitch gets an existing Switch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSwitch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SwitchState, opts ...pulumi.ResourceOption) (*Switch, error) {
	var resource Switch
	err := ctx.ReadResource("sakuracloud:index/switch:Switch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Switch resources.
type switchState struct {
	// The bridge id attached to the Switch
	BridgeId *string `pulumi:"bridgeId"`
	// The description of the Switch. The length of this value must be in the range [`1`-`512`]
	Description *string `pulumi:"description"`
	// The icon id to attach to the Switch
	IconId *string `pulumi:"iconId"`
	// The name of the Switch. The length of this value must be in the range [`1`-`64`]
	Name *string `pulumi:"name"`
	// A list of server id connected to the switch
	ServerIds []string `pulumi:"serverIds"`
	// Any tags to assign to the Switch
	Tags []string `pulumi:"tags"`
	// The name of zone that the Switch will be created (e.g. `is1a`, `tk1a`)
	Zone *string `pulumi:"zone"`
}

type SwitchState struct {
	// The bridge id attached to the Switch
	BridgeId pulumi.StringPtrInput
	// The description of the Switch. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrInput
	// The icon id to attach to the Switch
	IconId pulumi.StringPtrInput
	// The name of the Switch. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringPtrInput
	// A list of server id connected to the switch
	ServerIds pulumi.StringArrayInput
	// Any tags to assign to the Switch
	Tags pulumi.StringArrayInput
	// The name of zone that the Switch will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringPtrInput
}

func (SwitchState) ElementType() reflect.Type {
	return reflect.TypeOf((*switchState)(nil)).Elem()
}

type switchArgs struct {
	// The bridge id attached to the Switch
	BridgeId *string `pulumi:"bridgeId"`
	// The description of the Switch. The length of this value must be in the range [`1`-`512`]
	Description *string `pulumi:"description"`
	// The icon id to attach to the Switch
	IconId *string `pulumi:"iconId"`
	// The name of the Switch. The length of this value must be in the range [`1`-`64`]
	Name *string `pulumi:"name"`
	// Any tags to assign to the Switch
	Tags []string `pulumi:"tags"`
	// The name of zone that the Switch will be created (e.g. `is1a`, `tk1a`)
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a Switch resource.
type SwitchArgs struct {
	// The bridge id attached to the Switch
	BridgeId pulumi.StringPtrInput
	// The description of the Switch. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrInput
	// The icon id to attach to the Switch
	IconId pulumi.StringPtrInput
	// The name of the Switch. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringPtrInput
	// Any tags to assign to the Switch
	Tags pulumi.StringArrayInput
	// The name of zone that the Switch will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringPtrInput
}

func (SwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*switchArgs)(nil)).Elem()
}
