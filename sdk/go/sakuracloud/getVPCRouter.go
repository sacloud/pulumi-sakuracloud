// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Get information about an existing VPC Router.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-sakuracloud/sdk/go/sakuracloud"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := sakuracloud.LookupVPCRouter(ctx, &sakuracloud.LookupVPCRouterArgs{
// 			Filter: sakuracloud.GetVPCRouterFilter{
// 				Names: []string{
// 					"foobar",
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupVPCRouter(ctx *pulumi.Context, args *LookupVPCRouterArgs, opts ...pulumi.InvokeOption) (*LookupVPCRouterResult, error) {
	var rv LookupVPCRouterResult
	err := ctx.Invoke("sakuracloud:index/getVPCRouter:getVPCRouter", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVPCRouter.
type LookupVPCRouterArgs struct {
	// One or more values used for filtering, as defined below.
	Filter *GetVPCRouterFilter `pulumi:"filter"`
	// The name of zone that the VPC Router is in (e.g. `is1a`, `tk1a`).
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getVPCRouter.
type LookupVPCRouterResult struct {
	// The description of the static NAT.
	Description string `pulumi:"description"`
	// A list of `dhcpServer` blocks as defined below.
	DhcpServers []GetVPCRouterDhcpServer `pulumi:"dhcpServers"`
	// A list of `dhcpStaticMapping` blocks as defined below.
	DhcpStaticMappings []GetVPCRouterDhcpStaticMapping `pulumi:"dhcpStaticMappings"`
	Filter             *GetVPCRouterFilter             `pulumi:"filter"`
	// A list of `firewall` blocks as defined below.
	Firewalls []GetVPCRouterFirewall `pulumi:"firewalls"`
	// The icon id attached to the VPCRouter.
	IconId string `pulumi:"iconId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The flag to enable connecting to the Internet from the VPC Router.
	InternetConnection bool `pulumi:"internetConnection"`
	// A list of `l2tp` blocks as defined below.
	L2tps []GetVPCRouterL2tp `pulumi:"l2tps"`
	// The user name used to authenticate remote access.
	Name string `pulumi:"name"`
	// The plan name of the VPCRouter. This will be one of [`standard`/`premium`/`highspec`/`highspec4000`].
	Plan string `pulumi:"plan"`
	// A list of `portForwarding` blocks as defined below. This represents a `Reverse NAT`.
	PortForwardings []GetVPCRouterPortForwarding `pulumi:"portForwardings"`
	// A list of `pptp` blocks as defined below.
	Pptps []GetVPCRouterPptp `pulumi:"pptps"`
	// A list of additional network interface setting. This doesn't include primary network interface setting.
	PrivateNetworkInterfaces []GetVPCRouterPrivateNetworkInterface `pulumi:"privateNetworkInterfaces"`
	// The public IP address used for the static NAT.
	PublicIp string `pulumi:"publicIp"`
	// The bit length of the subnet to assign to the public network interface.
	PublicNetmask int `pulumi:"publicNetmask"`
	// A list of additional network interface setting. This doesn't include primary network interface setting.
	PublicNetworkInterfaces []GetVPCRouterPublicNetworkInterface `pulumi:"publicNetworkInterfaces"`
	// A list of `siteToSiteVpn` blocks as defined below.
	SiteToSiteVpns []GetVPCRouterSiteToSiteVpn `pulumi:"siteToSiteVpns"`
	// A list of `staticNat` blocks as defined below. This represents a `1:1 NAT`, doing static mapping to both send/receive to/from the Internet. This is only used when `plan` is not `standard`.
	StaticNats []GetVPCRouterStaticNat `pulumi:"staticNats"`
	// A list of `staticRoute` blocks as defined below.
	StaticRoutes []GetVPCRouterStaticRoute `pulumi:"staticRoutes"`
	// The ip address of the syslog host to which the VPC Router sends logs.
	SyslogHost string `pulumi:"syslogHost"`
	// Any tags assigned to the VPCRouter.
	Tags []string `pulumi:"tags"`
	// A list of `user` blocks as defined below.
	Users []GetVPCRouterUser `pulumi:"users"`
	// The version of the VPC Router.
	Version int    `pulumi:"version"`
	Zone    string `pulumi:"zone"`
}
