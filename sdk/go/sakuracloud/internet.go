// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a SakuraCloud Internet resource. This can be used to create, update, and delete Internet.
//
// > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/internet.html.markdown.
type Internet struct {
	s *pulumi.ResourceState
}

// NewInternet registers a new resource with the given unique name, arguments, and options.
func NewInternet(ctx *pulumi.Context,
	name string, args *InternetArgs, opts ...pulumi.ResourceOpt) (*Internet, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["bandWidth"] = nil
		inputs["description"] = nil
		inputs["enableIpv6"] = nil
		inputs["gracefulShutdownTimeout"] = nil
		inputs["iconId"] = nil
		inputs["name"] = nil
		inputs["nwMaskLen"] = nil
		inputs["tags"] = nil
		inputs["zone"] = nil
	} else {
		inputs["bandWidth"] = args.BandWidth
		inputs["description"] = args.Description
		inputs["enableIpv6"] = args.EnableIpv6
		inputs["gracefulShutdownTimeout"] = args.GracefulShutdownTimeout
		inputs["iconId"] = args.IconId
		inputs["name"] = args.Name
		inputs["nwMaskLen"] = args.NwMaskLen
		inputs["tags"] = args.Tags
		inputs["zone"] = args.Zone
	}
	inputs["gateway"] = nil
	inputs["ipaddresses"] = nil
	inputs["ipv6NwAddress"] = nil
	inputs["ipv6Prefix"] = nil
	inputs["ipv6PrefixLen"] = nil
	inputs["maxIpaddress"] = nil
	inputs["minIpaddress"] = nil
	inputs["nwAddress"] = nil
	inputs["serverIds"] = nil
	inputs["switchId"] = nil
	s, err := ctx.RegisterResource("sakuracloud:index/internet:Internet", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Internet{s: s}, nil
}

// GetInternet gets an existing Internet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInternet(ctx *pulumi.Context,
	name string, id pulumi.ID, state *InternetState, opts ...pulumi.ResourceOpt) (*Internet, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["bandWidth"] = state.BandWidth
		inputs["description"] = state.Description
		inputs["enableIpv6"] = state.EnableIpv6
		inputs["gateway"] = state.Gateway
		inputs["gracefulShutdownTimeout"] = state.GracefulShutdownTimeout
		inputs["iconId"] = state.IconId
		inputs["ipaddresses"] = state.Ipaddresses
		inputs["ipv6NwAddress"] = state.Ipv6NwAddress
		inputs["ipv6Prefix"] = state.Ipv6Prefix
		inputs["ipv6PrefixLen"] = state.Ipv6PrefixLen
		inputs["maxIpaddress"] = state.MaxIpaddress
		inputs["minIpaddress"] = state.MinIpaddress
		inputs["name"] = state.Name
		inputs["nwAddress"] = state.NwAddress
		inputs["nwMaskLen"] = state.NwMaskLen
		inputs["serverIds"] = state.ServerIds
		inputs["switchId"] = state.SwitchId
		inputs["tags"] = state.Tags
		inputs["zone"] = state.Zone
	}
	s, err := ctx.ReadResource("sakuracloud:index/internet:Internet", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Internet{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Internet) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Internet) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Bandwidth of outbound traffic (unit:`Mbps`).  
// Valid value is one of the following: [ 100 (default) / 250 / 500 / 1000 / 1500 / 2000 / 2500 / 3000 / 5000 ]
func (r *Internet) BandWidth() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["bandWidth"])
}

// The description of the resource.
func (r *Internet) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// The ipv6 enabled flag.
func (r *Internet) EnableIpv6() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["enableIpv6"])
}

// The network gateway address of the switch.
func (r *Internet) Gateway() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["gateway"])
}

// The wait time (seconds) to do graceful shutdown the server connected to the resource.
func (r *Internet) GracefulShutdownTimeout() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["gracefulShutdownTimeout"])
}

// The ID of the icon.
func (r *Internet) IconId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["iconId"])
}

// Global IP address list.
func (r *Internet) Ipaddresses() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["ipaddresses"])
}

// The ipv6 network address.
func (r *Internet) Ipv6NwAddress() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ipv6NwAddress"])
}

// Address prefix of ipv6 network.
func (r *Internet) Ipv6Prefix() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ipv6Prefix"])
}

// Address prefix length of ipv6 network.
func (r *Internet) Ipv6PrefixLen() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["ipv6PrefixLen"])
}

// Max global IP address.
func (r *Internet) MaxIpaddress() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["maxIpaddress"])
}

// Min global IP address.
func (r *Internet) MinIpaddress() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["minIpaddress"])
}

// The name of the resource.
func (r *Internet) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The network address.
func (r *Internet) NwAddress() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["nwAddress"])
}

// Network mask length.  
// Valid value is one of the following: [ 28 (default) / 27 / 26 ]
func (r *Internet) NwMaskLen() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["nwMaskLen"])
}

// The ID list of the servers connected to the switch.
func (r *Internet) ServerIds() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["serverIds"])
}

// The ID of the switch.
func (r *Internet) SwitchId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["switchId"])
}

// The tag list of the resources.
func (r *Internet) Tags() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["tags"])
}

// The ID of the zone to which the resource belongs.
func (r *Internet) Zone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["zone"])
}

// Input properties used for looking up and filtering Internet resources.
type InternetState struct {
	// Bandwidth of outbound traffic (unit:`Mbps`).  
	// Valid value is one of the following: [ 100 (default) / 250 / 500 / 1000 / 1500 / 2000 / 2500 / 3000 / 5000 ]
	BandWidth interface{}
	// The description of the resource.
	Description interface{}
	// The ipv6 enabled flag.
	EnableIpv6 interface{}
	// The network gateway address of the switch.
	Gateway interface{}
	// The wait time (seconds) to do graceful shutdown the server connected to the resource.
	GracefulShutdownTimeout interface{}
	// The ID of the icon.
	IconId interface{}
	// Global IP address list.
	Ipaddresses interface{}
	// The ipv6 network address.
	Ipv6NwAddress interface{}
	// Address prefix of ipv6 network.
	Ipv6Prefix interface{}
	// Address prefix length of ipv6 network.
	Ipv6PrefixLen interface{}
	// Max global IP address.
	MaxIpaddress interface{}
	// Min global IP address.
	MinIpaddress interface{}
	// The name of the resource.
	Name interface{}
	// The network address.
	NwAddress interface{}
	// Network mask length.  
	// Valid value is one of the following: [ 28 (default) / 27 / 26 ]
	NwMaskLen interface{}
	// The ID list of the servers connected to the switch.
	ServerIds interface{}
	// The ID of the switch.
	SwitchId interface{}
	// The tag list of the resources.
	Tags interface{}
	// The ID of the zone to which the resource belongs.
	Zone interface{}
}

// The set of arguments for constructing a Internet resource.
type InternetArgs struct {
	// Bandwidth of outbound traffic (unit:`Mbps`).  
	// Valid value is one of the following: [ 100 (default) / 250 / 500 / 1000 / 1500 / 2000 / 2500 / 3000 / 5000 ]
	BandWidth interface{}
	// The description of the resource.
	Description interface{}
	// The ipv6 enabled flag.
	EnableIpv6 interface{}
	// The wait time (seconds) to do graceful shutdown the server connected to the resource.
	GracefulShutdownTimeout interface{}
	// The ID of the icon.
	IconId interface{}
	// The name of the resource.
	Name interface{}
	// Network mask length.  
	// Valid value is one of the following: [ 28 (default) / 27 / 26 ]
	NwMaskLen interface{}
	// The tag list of the resources.
	Tags interface{}
	// The ID of the zone to which the resource belongs.
	Zone interface{}
}
