// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package sakuracloud

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type Internet struct {
	pulumi.CustomResourceState

	// The bandwidth of the network connected to the Internet in Mbps.
	// `100`/`250`/`500`/`1000`/`1500`/`2000`/`2500`/`3000`/`5000`
	BandWidth pulumi.IntPtrOutput `pulumi:"bandWidth"`
	// The description of the Switch+Router. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The flag to enable IPv6
	EnableIpv6 pulumi.BoolPtrOutput `pulumi:"enableIpv6"`
	// The IP address of the gateway used by the Switch+Router
	Gateway pulumi.StringOutput `pulumi:"gateway"`
	// The icon id to attach to the Switch+Router
	IconId pulumi.StringPtrOutput `pulumi:"iconId"`
	// A list of assigned global address to the Switch+Router
	IpAddresses pulumi.StringArrayOutput `pulumi:"ipAddresses"`
	// The IPv6 network address assigned to the Switch+Router
	Ipv6NetworkAddress pulumi.StringOutput `pulumi:"ipv6NetworkAddress"`
	// The network prefix of assigned IPv6 addresses to the Switch+Router
	Ipv6Prefix pulumi.StringOutput `pulumi:"ipv6Prefix"`
	// The bit length of IPv6 network prefix
	Ipv6PrefixLen pulumi.IntOutput `pulumi:"ipv6PrefixLen"`
	// Maximum IP address in assigned global addresses to the Switch+Router
	MaxIpAddress pulumi.StringOutput `pulumi:"maxIpAddress"`
	// Minimum IP address in assigned global addresses to the Switch+Router
	MinIpAddress pulumi.StringOutput `pulumi:"minIpAddress"`
	// The name of the Switch+Router. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringOutput `pulumi:"name"`
	// The bit length of the subnet assigned to the Switch+Router. `26`/`27`/`28`
	Netmask pulumi.IntPtrOutput `pulumi:"netmask"`
	// The IPv4 network address assigned to the Switch+Router
	NetworkAddress pulumi.StringOutput `pulumi:"networkAddress"`
	// A list of the ID of Servers connected to the Switch+Router
	ServerIds pulumi.StringArrayOutput `pulumi:"serverIds"`
	// The id of the switch
	SwitchId pulumi.StringOutput `pulumi:"switchId"`
	// Any tags to assign to the Switch+Router
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The name of zone that the Switch+Router will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewInternet registers a new resource with the given unique name, arguments, and options.
func NewInternet(ctx *pulumi.Context,
	name string, args *InternetArgs, opts ...pulumi.ResourceOption) (*Internet, error) {
	if args == nil {
		args = &InternetArgs{}
	}
	var resource Internet
	err := ctx.RegisterResource("sakuracloud:index/internet:Internet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInternet gets an existing Internet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInternet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InternetState, opts ...pulumi.ResourceOption) (*Internet, error) {
	var resource Internet
	err := ctx.ReadResource("sakuracloud:index/internet:Internet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Internet resources.
type internetState struct {
	// The bandwidth of the network connected to the Internet in Mbps.
	// `100`/`250`/`500`/`1000`/`1500`/`2000`/`2500`/`3000`/`5000`
	BandWidth *int `pulumi:"bandWidth"`
	// The description of the Switch+Router. The length of this value must be in the range [`1`-`512`]
	Description *string `pulumi:"description"`
	// The flag to enable IPv6
	EnableIpv6 *bool `pulumi:"enableIpv6"`
	// The IP address of the gateway used by the Switch+Router
	Gateway *string `pulumi:"gateway"`
	// The icon id to attach to the Switch+Router
	IconId *string `pulumi:"iconId"`
	// A list of assigned global address to the Switch+Router
	IpAddresses []string `pulumi:"ipAddresses"`
	// The IPv6 network address assigned to the Switch+Router
	Ipv6NetworkAddress *string `pulumi:"ipv6NetworkAddress"`
	// The network prefix of assigned IPv6 addresses to the Switch+Router
	Ipv6Prefix *string `pulumi:"ipv6Prefix"`
	// The bit length of IPv6 network prefix
	Ipv6PrefixLen *int `pulumi:"ipv6PrefixLen"`
	// Maximum IP address in assigned global addresses to the Switch+Router
	MaxIpAddress *string `pulumi:"maxIpAddress"`
	// Minimum IP address in assigned global addresses to the Switch+Router
	MinIpAddress *string `pulumi:"minIpAddress"`
	// The name of the Switch+Router. The length of this value must be in the range [`1`-`64`]
	Name *string `pulumi:"name"`
	// The bit length of the subnet assigned to the Switch+Router. `26`/`27`/`28`
	Netmask *int `pulumi:"netmask"`
	// The IPv4 network address assigned to the Switch+Router
	NetworkAddress *string `pulumi:"networkAddress"`
	// A list of the ID of Servers connected to the Switch+Router
	ServerIds []string `pulumi:"serverIds"`
	// The id of the switch
	SwitchId *string `pulumi:"switchId"`
	// Any tags to assign to the Switch+Router
	Tags []string `pulumi:"tags"`
	// The name of zone that the Switch+Router will be created (e.g. `is1a`, `tk1a`)
	Zone *string `pulumi:"zone"`
}

type InternetState struct {
	// The bandwidth of the network connected to the Internet in Mbps.
	// `100`/`250`/`500`/`1000`/`1500`/`2000`/`2500`/`3000`/`5000`
	BandWidth pulumi.IntPtrInput
	// The description of the Switch+Router. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrInput
	// The flag to enable IPv6
	EnableIpv6 pulumi.BoolPtrInput
	// The IP address of the gateway used by the Switch+Router
	Gateway pulumi.StringPtrInput
	// The icon id to attach to the Switch+Router
	IconId pulumi.StringPtrInput
	// A list of assigned global address to the Switch+Router
	IpAddresses pulumi.StringArrayInput
	// The IPv6 network address assigned to the Switch+Router
	Ipv6NetworkAddress pulumi.StringPtrInput
	// The network prefix of assigned IPv6 addresses to the Switch+Router
	Ipv6Prefix pulumi.StringPtrInput
	// The bit length of IPv6 network prefix
	Ipv6PrefixLen pulumi.IntPtrInput
	// Maximum IP address in assigned global addresses to the Switch+Router
	MaxIpAddress pulumi.StringPtrInput
	// Minimum IP address in assigned global addresses to the Switch+Router
	MinIpAddress pulumi.StringPtrInput
	// The name of the Switch+Router. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringPtrInput
	// The bit length of the subnet assigned to the Switch+Router. `26`/`27`/`28`
	Netmask pulumi.IntPtrInput
	// The IPv4 network address assigned to the Switch+Router
	NetworkAddress pulumi.StringPtrInput
	// A list of the ID of Servers connected to the Switch+Router
	ServerIds pulumi.StringArrayInput
	// The id of the switch
	SwitchId pulumi.StringPtrInput
	// Any tags to assign to the Switch+Router
	Tags pulumi.StringArrayInput
	// The name of zone that the Switch+Router will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringPtrInput
}

func (InternetState) ElementType() reflect.Type {
	return reflect.TypeOf((*internetState)(nil)).Elem()
}

type internetArgs struct {
	// The bandwidth of the network connected to the Internet in Mbps.
	// `100`/`250`/`500`/`1000`/`1500`/`2000`/`2500`/`3000`/`5000`
	BandWidth *int `pulumi:"bandWidth"`
	// The description of the Switch+Router. The length of this value must be in the range [`1`-`512`]
	Description *string `pulumi:"description"`
	// The flag to enable IPv6
	EnableIpv6 *bool `pulumi:"enableIpv6"`
	// The icon id to attach to the Switch+Router
	IconId *string `pulumi:"iconId"`
	// The name of the Switch+Router. The length of this value must be in the range [`1`-`64`]
	Name *string `pulumi:"name"`
	// The bit length of the subnet assigned to the Switch+Router. `26`/`27`/`28`
	Netmask *int `pulumi:"netmask"`
	// Any tags to assign to the Switch+Router
	Tags []string `pulumi:"tags"`
	// The name of zone that the Switch+Router will be created (e.g. `is1a`, `tk1a`)
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a Internet resource.
type InternetArgs struct {
	// The bandwidth of the network connected to the Internet in Mbps.
	// `100`/`250`/`500`/`1000`/`1500`/`2000`/`2500`/`3000`/`5000`
	BandWidth pulumi.IntPtrInput
	// The description of the Switch+Router. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrInput
	// The flag to enable IPv6
	EnableIpv6 pulumi.BoolPtrInput
	// The icon id to attach to the Switch+Router
	IconId pulumi.StringPtrInput
	// The name of the Switch+Router. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringPtrInput
	// The bit length of the subnet assigned to the Switch+Router. `26`/`27`/`28`
	Netmask pulumi.IntPtrInput
	// Any tags to assign to the Switch+Router
	Tags pulumi.StringArrayInput
	// The name of zone that the Switch+Router will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringPtrInput
}

func (InternetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*internetArgs)(nil)).Elem()
}

