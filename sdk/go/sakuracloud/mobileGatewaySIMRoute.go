// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a SakuraCloud Mobile Gateway SIM Route resource. This can be used to create, update, and delete Mobile Gateway SIM Routes.
// 
// ## Import (not supported)
// 
// Import of Mobile Gateway SIM Route is not supported.
//
// > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/mobile_gateway_sim_route.html.markdown.
type MobileGatewaySIMRoute struct {
	s *pulumi.ResourceState
}

// NewMobileGatewaySIMRoute registers a new resource with the given unique name, arguments, and options.
func NewMobileGatewaySIMRoute(ctx *pulumi.Context,
	name string, args *MobileGatewaySIMRouteArgs, opts ...pulumi.ResourceOpt) (*MobileGatewaySIMRoute, error) {
	if args == nil || args.MobileGatewayId == nil {
		return nil, errors.New("missing required argument 'MobileGatewayId'")
	}
	if args == nil || args.Prefix == nil {
		return nil, errors.New("missing required argument 'Prefix'")
	}
	if args == nil || args.SimId == nil {
		return nil, errors.New("missing required argument 'SimId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["mobileGatewayId"] = nil
		inputs["prefix"] = nil
		inputs["simId"] = nil
		inputs["zone"] = nil
	} else {
		inputs["mobileGatewayId"] = args.MobileGatewayId
		inputs["prefix"] = args.Prefix
		inputs["simId"] = args.SimId
		inputs["zone"] = args.Zone
	}
	s, err := ctx.RegisterResource("sakuracloud:index/mobileGatewaySIMRoute:MobileGatewaySIMRoute", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &MobileGatewaySIMRoute{s: s}, nil
}

// GetMobileGatewaySIMRoute gets an existing MobileGatewaySIMRoute resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMobileGatewaySIMRoute(ctx *pulumi.Context,
	name string, id pulumi.ID, state *MobileGatewaySIMRouteState, opts ...pulumi.ResourceOpt) (*MobileGatewaySIMRoute, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["mobileGatewayId"] = state.MobileGatewayId
		inputs["prefix"] = state.Prefix
		inputs["simId"] = state.SimId
		inputs["zone"] = state.Zone
	}
	s, err := ctx.ReadResource("sakuracloud:index/mobileGatewaySIMRoute:MobileGatewaySIMRoute", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &MobileGatewaySIMRoute{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *MobileGatewaySIMRoute) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *MobileGatewaySIMRoute) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The ID of the Mobile Gateway to set SIM Route.
func (r *MobileGatewaySIMRoute) MobileGatewayId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["mobileGatewayId"])
}

// The routing prefix (format:`CIDR`).
func (r *MobileGatewaySIMRoute) Prefix() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["prefix"])
}

// The ID of the routing destination SIM.
func (r *MobileGatewaySIMRoute) SimId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["simId"])
}

// The ID of the zone to which the resource belongs.
func (r *MobileGatewaySIMRoute) Zone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["zone"])
}

// Input properties used for looking up and filtering MobileGatewaySIMRoute resources.
type MobileGatewaySIMRouteState struct {
	// The ID of the Mobile Gateway to set SIM Route.
	MobileGatewayId interface{}
	// The routing prefix (format:`CIDR`).
	Prefix interface{}
	// The ID of the routing destination SIM.
	SimId interface{}
	// The ID of the zone to which the resource belongs.
	Zone interface{}
}

// The set of arguments for constructing a MobileGatewaySIMRoute resource.
type MobileGatewaySIMRouteArgs struct {
	// The ID of the Mobile Gateway to set SIM Route.
	MobileGatewayId interface{}
	// The routing prefix (format:`CIDR`).
	Prefix interface{}
	// The ID of the routing destination SIM.
	SimId interface{}
	// The ID of the zone to which the resource belongs.
	Zone interface{}
}
