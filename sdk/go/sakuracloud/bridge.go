// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a SakuraCloud Bridge resource. This can be used to create, update, and delete Bridges.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-sakuracloud/blob/master/website/docs/r/bridge.html.markdown.
type Bridge struct {
	s *pulumi.ResourceState
}

// NewBridge registers a new resource with the given unique name, arguments, and options.
func NewBridge(ctx *pulumi.Context,
	name string, args *BridgeArgs, opts ...pulumi.ResourceOpt) (*Bridge, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["name"] = nil
		inputs["zone"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["name"] = args.Name
		inputs["zone"] = args.Zone
	}
	inputs["switchIds"] = nil
	s, err := ctx.RegisterResource("sakuracloud:index/bridge:Bridge", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Bridge{s: s}, nil
}

// GetBridge gets an existing Bridge resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBridge(ctx *pulumi.Context,
	name string, id pulumi.ID, state *BridgeState, opts ...pulumi.ResourceOpt) (*Bridge, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["name"] = state.Name
		inputs["switchIds"] = state.SwitchIds
		inputs["zone"] = state.Zone
	}
	s, err := ctx.ReadResource("sakuracloud:index/bridge:Bridge", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Bridge{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Bridge) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Bridge) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The description of the resource.
func (r *Bridge) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// The name of the resource.
func (r *Bridge) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The ID list of the Switches connected to the Bridge. 
func (r *Bridge) SwitchIds() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["switchIds"])
}

// The ID of the zone to which the resource belongs.  
func (r *Bridge) Zone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["zone"])
}

// Input properties used for looking up and filtering Bridge resources.
type BridgeState struct {
	// The description of the resource.
	Description interface{}
	// The name of the resource.
	Name interface{}
	// The ID list of the Switches connected to the Bridge. 
	SwitchIds interface{}
	// The ID of the zone to which the resource belongs.  
	Zone interface{}
}

// The set of arguments for constructing a Bridge resource.
type BridgeArgs struct {
	// The description of the resource.
	Description interface{}
	// The name of the resource.
	Name interface{}
	// The ID of the zone to which the resource belongs.  
	Zone interface{}
}
