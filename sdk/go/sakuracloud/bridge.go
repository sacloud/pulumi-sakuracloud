// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package sakuracloud

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type Bridge struct {
	pulumi.CustomResourceState

	// The description of the Bridge. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the Bridge. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of zone that the Bridge will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewBridge registers a new resource with the given unique name, arguments, and options.
func NewBridge(ctx *pulumi.Context,
	name string, args *BridgeArgs, opts ...pulumi.ResourceOption) (*Bridge, error) {
	if args == nil {
		args = &BridgeArgs{}
	}
	var resource Bridge
	err := ctx.RegisterResource("sakuracloud:index/bridge:Bridge", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBridge gets an existing Bridge resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBridge(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BridgeState, opts ...pulumi.ResourceOption) (*Bridge, error) {
	var resource Bridge
	err := ctx.ReadResource("sakuracloud:index/bridge:Bridge", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bridge resources.
type bridgeState struct {
	// The description of the Bridge. The length of this value must be in the range [`1`-`512`]
	Description *string `pulumi:"description"`
	// The name of the Bridge. The length of this value must be in the range [`1`-`64`]
	Name *string `pulumi:"name"`
	// The name of zone that the Bridge will be created (e.g. `is1a`, `tk1a`)
	Zone *string `pulumi:"zone"`
}

type BridgeState struct {
	// The description of the Bridge. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrInput
	// The name of the Bridge. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringPtrInput
	// The name of zone that the Bridge will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringPtrInput
}

func (BridgeState) ElementType() reflect.Type {
	return reflect.TypeOf((*bridgeState)(nil)).Elem()
}

type bridgeArgs struct {
	// The description of the Bridge. The length of this value must be in the range [`1`-`512`]
	Description *string `pulumi:"description"`
	// The name of the Bridge. The length of this value must be in the range [`1`-`64`]
	Name *string `pulumi:"name"`
	// The name of zone that the Bridge will be created (e.g. `is1a`, `tk1a`)
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a Bridge resource.
type BridgeArgs struct {
	// The description of the Bridge. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrInput
	// The name of the Bridge. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringPtrInput
	// The name of zone that the Bridge will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringPtrInput
}

func (BridgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bridgeArgs)(nil)).Elem()
}

