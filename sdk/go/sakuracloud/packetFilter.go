// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a SakuraCloud Packet Filter resource. This can be used to create, update, and delete Packet Filters.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-sakuracloud/blob/master/website/docs/r/packet_filter.html.markdown.
type PacketFilter struct {
	s *pulumi.ResourceState
}

// NewPacketFilter registers a new resource with the given unique name, arguments, and options.
func NewPacketFilter(ctx *pulumi.Context,
	name string, args *PacketFilterArgs, opts ...pulumi.ResourceOpt) (*PacketFilter, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["expressions"] = nil
		inputs["name"] = nil
		inputs["zone"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["expressions"] = args.Expressions
		inputs["name"] = args.Name
		inputs["zone"] = args.Zone
	}
	s, err := ctx.RegisterResource("sakuracloud:index/packetFilter:PacketFilter", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &PacketFilter{s: s}, nil
}

// GetPacketFilter gets an existing PacketFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPacketFilter(ctx *pulumi.Context,
	name string, id pulumi.ID, state *PacketFilterState, opts ...pulumi.ResourceOpt) (*PacketFilter, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["description"] = state.Description
		inputs["expressions"] = state.Expressions
		inputs["name"] = state.Name
		inputs["zone"] = state.Zone
	}
	s, err := ctx.ReadResource("sakuracloud:index/packetFilter:PacketFilter", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &PacketFilter{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *PacketFilter) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *PacketFilter) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The description of the expression.
func (r *PacketFilter) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// Health check rules. It contains some attributes to Expressions.
func (r *PacketFilter) Expressions() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["expressions"])
}

// The name of the resource.
func (r *PacketFilter) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// target SakuraCloud zone
func (r *PacketFilter) Zone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["zone"])
}

// Input properties used for looking up and filtering PacketFilter resources.
type PacketFilterState struct {
	// The description of the expression.
	Description interface{}
	// Health check rules. It contains some attributes to Expressions.
	Expressions interface{}
	// The name of the resource.
	Name interface{}
	// target SakuraCloud zone
	Zone interface{}
}

// The set of arguments for constructing a PacketFilter resource.
type PacketFilterArgs struct {
	// The description of the expression.
	Description interface{}
	// Health check rules. It contains some attributes to Expressions.
	Expressions interface{}
	// The name of the resource.
	Name interface{}
	// target SakuraCloud zone
	Zone interface{}
}
