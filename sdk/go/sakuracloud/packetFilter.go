// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package sakuracloud

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type PacketFilter struct {
	pulumi.CustomResourceState

	// The description of the packetFilter. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrOutput            `pulumi:"description"`
	Expressions PacketFilterExpressionArrayOutput `pulumi:"expressions"`
	// The name of the packetFilter. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringOutput `pulumi:"name"`
	// The name of zone that the packetFilter will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewPacketFilter registers a new resource with the given unique name, arguments, and options.
func NewPacketFilter(ctx *pulumi.Context,
	name string, args *PacketFilterArgs, opts ...pulumi.ResourceOption) (*PacketFilter, error) {
	if args == nil {
		args = &PacketFilterArgs{}
	}
	var resource PacketFilter
	err := ctx.RegisterResource("sakuracloud:index/packetFilter:PacketFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPacketFilter gets an existing PacketFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPacketFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PacketFilterState, opts ...pulumi.ResourceOption) (*PacketFilter, error) {
	var resource PacketFilter
	err := ctx.ReadResource("sakuracloud:index/packetFilter:PacketFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PacketFilter resources.
type packetFilterState struct {
	// The description of the packetFilter. The length of this value must be in the range [`1`-`512`]
	Description *string                  `pulumi:"description"`
	Expressions []PacketFilterExpression `pulumi:"expressions"`
	// The name of the packetFilter. The length of this value must be in the range [`1`-`64`]
	Name *string `pulumi:"name"`
	// The name of zone that the packetFilter will be created (e.g. `is1a`, `tk1a`)
	Zone *string `pulumi:"zone"`
}

type PacketFilterState struct {
	// The description of the packetFilter. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrInput
	Expressions PacketFilterExpressionArrayInput
	// The name of the packetFilter. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringPtrInput
	// The name of zone that the packetFilter will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringPtrInput
}

func (PacketFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*packetFilterState)(nil)).Elem()
}

type packetFilterArgs struct {
	// The description of the packetFilter. The length of this value must be in the range [`1`-`512`]
	Description *string                  `pulumi:"description"`
	Expressions []PacketFilterExpression `pulumi:"expressions"`
	// The name of the packetFilter. The length of this value must be in the range [`1`-`64`]
	Name *string `pulumi:"name"`
	// The name of zone that the packetFilter will be created (e.g. `is1a`, `tk1a`)
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a PacketFilter resource.
type PacketFilterArgs struct {
	// The description of the packetFilter. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrInput
	Expressions PacketFilterExpressionArrayInput
	// The name of the packetFilter. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringPtrInput
	// The name of zone that the packetFilter will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringPtrInput
}

func (PacketFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*packetFilterArgs)(nil)).Elem()
}
