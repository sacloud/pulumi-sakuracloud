// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to retrieve information about a SakuraCloud ProxyLB.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-sakuracloud/blob/master/website/docs/d/proxylb.html.markdown.
func LookupProxyLB(ctx *pulumi.Context, args *GetProxyLBArgs) (*GetProxyLBResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["filters"] = args.Filters
		inputs["nameSelectors"] = args.NameSelectors
		inputs["tagSelectors"] = args.TagSelectors
	}
	outputs, err := ctx.Invoke("sakuracloud:index/getProxyLB:getProxyLB", inputs)
	if err != nil {
		return nil, err
	}
	return &GetProxyLBResult{
		BindPorts: outputs["bindPorts"],
		Certificates: outputs["certificates"],
		Description: outputs["description"],
		Filters: outputs["filters"],
		Fqdn: outputs["fqdn"],
		HealthChecks: outputs["healthChecks"],
		IconId: outputs["iconId"],
		Name: outputs["name"],
		NameSelectors: outputs["nameSelectors"],
		Plan: outputs["plan"],
		ProxyNetworks: outputs["proxyNetworks"],
		Servers: outputs["servers"],
		SorryServers: outputs["sorryServers"],
		StickySession: outputs["stickySession"],
		TagSelectors: outputs["tagSelectors"],
		Tags: outputs["tags"],
		Timeout: outputs["timeout"],
		Vip: outputs["vip"],
		VipFailover: outputs["vipFailover"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getProxyLB.
type GetProxyLBArgs struct {
	// The map of filter key and value.
	Filters interface{}
	// The list of names to filtering.
	NameSelectors interface{}
	// The list of tags to filtering.
	TagSelectors interface{}
}

// A collection of values returned by getProxyLB.
type GetProxyLBResult struct {
	// The external listen ports. It contains some attributes to Bind Ports.
	BindPorts interface{}
	// Certificate used to terminate SSL/TSL. It contains some attributes to Certificate.
	Certificates interface{}
	// The description of the resource.
	Description interface{}
	Filters interface{}
	Fqdn interface{}
	// The health check rules. It contains some attributes to Health Check.
	HealthChecks interface{}
	// The ID of the icon.
	IconId interface{}
	// Name of the resource.
	Name interface{}
	NameSelectors interface{}
	// The plan of the resource.
	Plan interface{}
	ProxyNetworks interface{}
	// Real servers. It contains some attributes to Servers.
	Servers interface{}
	// The pair of IPAddress and port number of sorry-server.
	SorryServers interface{}
	// The flag of enable Sticky-Session.  
	StickySession interface{}
	TagSelectors interface{}
	// The tag list of the resources.
	Tags interface{}
	// Timeout seconds. 
	Timeout interface{}
	Vip interface{}
	// The flag of enable VIP Fail-Over.  
	VipFailover interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
