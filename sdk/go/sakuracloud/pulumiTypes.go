// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package sakuracloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ContainerRegistryUser struct {
	Name string `pulumi:"name"`
	Password string `pulumi:"password"`
	Permission string `pulumi:"permission"`
}

type ContainerRegistryUserInput interface {
	pulumi.Input

	ToContainerRegistryUserOutput() ContainerRegistryUserOutput
	ToContainerRegistryUserOutputWithContext(context.Context) ContainerRegistryUserOutput
}

type ContainerRegistryUserArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Password pulumi.StringInput `pulumi:"password"`
	Permission pulumi.StringInput `pulumi:"permission"`
}

func (ContainerRegistryUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistryUser)(nil)).Elem()
}

func (i ContainerRegistryUserArgs) ToContainerRegistryUserOutput() ContainerRegistryUserOutput {
	return i.ToContainerRegistryUserOutputWithContext(context.Background())
}

func (i ContainerRegistryUserArgs) ToContainerRegistryUserOutputWithContext(ctx context.Context) ContainerRegistryUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryUserOutput)
}

type ContainerRegistryUserArrayInput interface {
	pulumi.Input

	ToContainerRegistryUserArrayOutput() ContainerRegistryUserArrayOutput
	ToContainerRegistryUserArrayOutputWithContext(context.Context) ContainerRegistryUserArrayOutput
}

type ContainerRegistryUserArray []ContainerRegistryUserInput

func (ContainerRegistryUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerRegistryUser)(nil)).Elem()
}

func (i ContainerRegistryUserArray) ToContainerRegistryUserArrayOutput() ContainerRegistryUserArrayOutput {
	return i.ToContainerRegistryUserArrayOutputWithContext(context.Background())
}

func (i ContainerRegistryUserArray) ToContainerRegistryUserArrayOutputWithContext(ctx context.Context) ContainerRegistryUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerRegistryUserArrayOutput)
}

type ContainerRegistryUserOutput struct { *pulumi.OutputState }

func (ContainerRegistryUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerRegistryUser)(nil)).Elem()
}

func (o ContainerRegistryUserOutput) ToContainerRegistryUserOutput() ContainerRegistryUserOutput {
	return o
}

func (o ContainerRegistryUserOutput) ToContainerRegistryUserOutputWithContext(ctx context.Context) ContainerRegistryUserOutput {
	return o
}

func (o ContainerRegistryUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerRegistryUser) string { return v.Name }).(pulumi.StringOutput)
}

func (o ContainerRegistryUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerRegistryUser) string { return v.Password }).(pulumi.StringOutput)
}

func (o ContainerRegistryUserOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func (v ContainerRegistryUser) string { return v.Permission }).(pulumi.StringOutput)
}

type ContainerRegistryUserArrayOutput struct { *pulumi.OutputState}

func (ContainerRegistryUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerRegistryUser)(nil)).Elem()
}

func (o ContainerRegistryUserArrayOutput) ToContainerRegistryUserArrayOutput() ContainerRegistryUserArrayOutput {
	return o
}

func (o ContainerRegistryUserArrayOutput) ToContainerRegistryUserArrayOutputWithContext(ctx context.Context) ContainerRegistryUserArrayOutput {
	return o
}

func (o ContainerRegistryUserArrayOutput) Index(i pulumi.IntInput) ContainerRegistryUserOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ContainerRegistryUser {
		return vs[0].([]ContainerRegistryUser)[vs[1].(int)]
	}).(ContainerRegistryUserOutput)
}

type DNSRecordType struct {
	Name string `pulumi:"name"`
	Port *int `pulumi:"port"`
	Priority *int `pulumi:"priority"`
	Ttl *int `pulumi:"ttl"`
	Type string `pulumi:"type"`
	Value string `pulumi:"value"`
	Weight *int `pulumi:"weight"`
}

type DNSRecordTypeInput interface {
	pulumi.Input

	ToDNSRecordTypeOutput() DNSRecordTypeOutput
	ToDNSRecordTypeOutputWithContext(context.Context) DNSRecordTypeOutput
}

type DNSRecordTypeArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Port pulumi.IntPtrInput `pulumi:"port"`
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
	Type pulumi.StringInput `pulumi:"type"`
	Value pulumi.StringInput `pulumi:"value"`
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (DNSRecordTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DNSRecordType)(nil)).Elem()
}

func (i DNSRecordTypeArgs) ToDNSRecordTypeOutput() DNSRecordTypeOutput {
	return i.ToDNSRecordTypeOutputWithContext(context.Background())
}

func (i DNSRecordTypeArgs) ToDNSRecordTypeOutputWithContext(ctx context.Context) DNSRecordTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DNSRecordTypeOutput)
}

type DNSRecordTypeArrayInput interface {
	pulumi.Input

	ToDNSRecordTypeArrayOutput() DNSRecordTypeArrayOutput
	ToDNSRecordTypeArrayOutputWithContext(context.Context) DNSRecordTypeArrayOutput
}

type DNSRecordTypeArray []DNSRecordTypeInput

func (DNSRecordTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DNSRecordType)(nil)).Elem()
}

func (i DNSRecordTypeArray) ToDNSRecordTypeArrayOutput() DNSRecordTypeArrayOutput {
	return i.ToDNSRecordTypeArrayOutputWithContext(context.Background())
}

func (i DNSRecordTypeArray) ToDNSRecordTypeArrayOutputWithContext(ctx context.Context) DNSRecordTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DNSRecordTypeArrayOutput)
}

type DNSRecordTypeOutput struct { *pulumi.OutputState }

func (DNSRecordTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DNSRecordType)(nil)).Elem()
}

func (o DNSRecordTypeOutput) ToDNSRecordTypeOutput() DNSRecordTypeOutput {
	return o
}

func (o DNSRecordTypeOutput) ToDNSRecordTypeOutputWithContext(ctx context.Context) DNSRecordTypeOutput {
	return o
}

func (o DNSRecordTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v DNSRecordType) string { return v.Name }).(pulumi.StringOutput)
}

func (o DNSRecordTypeOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v DNSRecordType) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o DNSRecordTypeOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func (v DNSRecordType) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

func (o DNSRecordTypeOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func (v DNSRecordType) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

func (o DNSRecordTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v DNSRecordType) string { return v.Type }).(pulumi.StringOutput)
}

func (o DNSRecordTypeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v DNSRecordType) string { return v.Value }).(pulumi.StringOutput)
}

func (o DNSRecordTypeOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func (v DNSRecordType) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type DNSRecordTypeArrayOutput struct { *pulumi.OutputState}

func (DNSRecordTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DNSRecordType)(nil)).Elem()
}

func (o DNSRecordTypeArrayOutput) ToDNSRecordTypeArrayOutput() DNSRecordTypeArrayOutput {
	return o
}

func (o DNSRecordTypeArrayOutput) ToDNSRecordTypeArrayOutputWithContext(ctx context.Context) DNSRecordTypeArrayOutput {
	return o
}

func (o DNSRecordTypeArrayOutput) Index(i pulumi.IntInput) DNSRecordTypeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) DNSRecordType {
		return vs[0].([]DNSRecordType)[vs[1].(int)]
	}).(DNSRecordTypeOutput)
}

type DatabaseBackup struct {
	Time *string `pulumi:"time"`
	Weekdays []string `pulumi:"weekdays"`
}

type DatabaseBackupInput interface {
	pulumi.Input

	ToDatabaseBackupOutput() DatabaseBackupOutput
	ToDatabaseBackupOutputWithContext(context.Context) DatabaseBackupOutput
}

type DatabaseBackupArgs struct {
	Time pulumi.StringPtrInput `pulumi:"time"`
	Weekdays pulumi.StringArrayInput `pulumi:"weekdays"`
}

func (DatabaseBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackup)(nil)).Elem()
}

func (i DatabaseBackupArgs) ToDatabaseBackupOutput() DatabaseBackupOutput {
	return i.ToDatabaseBackupOutputWithContext(context.Background())
}

func (i DatabaseBackupArgs) ToDatabaseBackupOutputWithContext(ctx context.Context) DatabaseBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupOutput)
}

func (i DatabaseBackupArgs) ToDatabaseBackupPtrOutput() DatabaseBackupPtrOutput {
	return i.ToDatabaseBackupPtrOutputWithContext(context.Background())
}

func (i DatabaseBackupArgs) ToDatabaseBackupPtrOutputWithContext(ctx context.Context) DatabaseBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupOutput).ToDatabaseBackupPtrOutputWithContext(ctx)
}

type DatabaseBackupPtrInput interface {
	pulumi.Input

	ToDatabaseBackupPtrOutput() DatabaseBackupPtrOutput
	ToDatabaseBackupPtrOutputWithContext(context.Context) DatabaseBackupPtrOutput
}

type databaseBackupPtrType DatabaseBackupArgs

func DatabaseBackupPtr(v *DatabaseBackupArgs) DatabaseBackupPtrInput {	return (*databaseBackupPtrType)(v)
}

func (*databaseBackupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseBackup)(nil)).Elem()
}

func (i *databaseBackupPtrType) ToDatabaseBackupPtrOutput() DatabaseBackupPtrOutput {
	return i.ToDatabaseBackupPtrOutputWithContext(context.Background())
}

func (i *databaseBackupPtrType) ToDatabaseBackupPtrOutputWithContext(ctx context.Context) DatabaseBackupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseBackupPtrOutput)
}

type DatabaseBackupOutput struct { *pulumi.OutputState }

func (DatabaseBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseBackup)(nil)).Elem()
}

func (o DatabaseBackupOutput) ToDatabaseBackupOutput() DatabaseBackupOutput {
	return o
}

func (o DatabaseBackupOutput) ToDatabaseBackupOutputWithContext(ctx context.Context) DatabaseBackupOutput {
	return o
}

func (o DatabaseBackupOutput) ToDatabaseBackupPtrOutput() DatabaseBackupPtrOutput {
	return o.ToDatabaseBackupPtrOutputWithContext(context.Background())
}

func (o DatabaseBackupOutput) ToDatabaseBackupPtrOutputWithContext(ctx context.Context) DatabaseBackupPtrOutput {
	return o.ApplyT(func(v DatabaseBackup) *DatabaseBackup {
		return &v
	}).(DatabaseBackupPtrOutput)
}
func (o DatabaseBackupOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DatabaseBackup) *string { return v.Time }).(pulumi.StringPtrOutput)
}

func (o DatabaseBackupOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func (v DatabaseBackup) []string { return v.Weekdays }).(pulumi.StringArrayOutput)
}

type DatabaseBackupPtrOutput struct { *pulumi.OutputState}

func (DatabaseBackupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseBackup)(nil)).Elem()
}

func (o DatabaseBackupPtrOutput) ToDatabaseBackupPtrOutput() DatabaseBackupPtrOutput {
	return o
}

func (o DatabaseBackupPtrOutput) ToDatabaseBackupPtrOutputWithContext(ctx context.Context) DatabaseBackupPtrOutput {
	return o
}

func (o DatabaseBackupPtrOutput) Elem() DatabaseBackupOutput {
	return o.ApplyT(func (v *DatabaseBackup) DatabaseBackup { return *v }).(DatabaseBackupOutput)
}

func (o DatabaseBackupPtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DatabaseBackup) *string { return v.Time }).(pulumi.StringPtrOutput)
}

func (o DatabaseBackupPtrOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func (v DatabaseBackup) []string { return v.Weekdays }).(pulumi.StringArrayOutput)
}

type DatabaseNetworkInterface struct {
	Gateway string `pulumi:"gateway"`
	IpAddress string `pulumi:"ipAddress"`
	Netmask int `pulumi:"netmask"`
	Port *int `pulumi:"port"`
	SourceRanges []string `pulumi:"sourceRanges"`
	SwitchId string `pulumi:"switchId"`
}

type DatabaseNetworkInterfaceInput interface {
	pulumi.Input

	ToDatabaseNetworkInterfaceOutput() DatabaseNetworkInterfaceOutput
	ToDatabaseNetworkInterfaceOutputWithContext(context.Context) DatabaseNetworkInterfaceOutput
}

type DatabaseNetworkInterfaceArgs struct {
	Gateway pulumi.StringInput `pulumi:"gateway"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	Netmask pulumi.IntInput `pulumi:"netmask"`
	Port pulumi.IntPtrInput `pulumi:"port"`
	SourceRanges pulumi.StringArrayInput `pulumi:"sourceRanges"`
	SwitchId pulumi.StringInput `pulumi:"switchId"`
}

func (DatabaseNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNetworkInterface)(nil)).Elem()
}

func (i DatabaseNetworkInterfaceArgs) ToDatabaseNetworkInterfaceOutput() DatabaseNetworkInterfaceOutput {
	return i.ToDatabaseNetworkInterfaceOutputWithContext(context.Background())
}

func (i DatabaseNetworkInterfaceArgs) ToDatabaseNetworkInterfaceOutputWithContext(ctx context.Context) DatabaseNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNetworkInterfaceOutput)
}

func (i DatabaseNetworkInterfaceArgs) ToDatabaseNetworkInterfacePtrOutput() DatabaseNetworkInterfacePtrOutput {
	return i.ToDatabaseNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i DatabaseNetworkInterfaceArgs) ToDatabaseNetworkInterfacePtrOutputWithContext(ctx context.Context) DatabaseNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNetworkInterfaceOutput).ToDatabaseNetworkInterfacePtrOutputWithContext(ctx)
}

type DatabaseNetworkInterfacePtrInput interface {
	pulumi.Input

	ToDatabaseNetworkInterfacePtrOutput() DatabaseNetworkInterfacePtrOutput
	ToDatabaseNetworkInterfacePtrOutputWithContext(context.Context) DatabaseNetworkInterfacePtrOutput
}

type databaseNetworkInterfacePtrType DatabaseNetworkInterfaceArgs

func DatabaseNetworkInterfacePtr(v *DatabaseNetworkInterfaceArgs) DatabaseNetworkInterfacePtrInput {	return (*databaseNetworkInterfacePtrType)(v)
}

func (*databaseNetworkInterfacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseNetworkInterface)(nil)).Elem()
}

func (i *databaseNetworkInterfacePtrType) ToDatabaseNetworkInterfacePtrOutput() DatabaseNetworkInterfacePtrOutput {
	return i.ToDatabaseNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i *databaseNetworkInterfacePtrType) ToDatabaseNetworkInterfacePtrOutputWithContext(ctx context.Context) DatabaseNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseNetworkInterfacePtrOutput)
}

type DatabaseNetworkInterfaceOutput struct { *pulumi.OutputState }

func (DatabaseNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseNetworkInterface)(nil)).Elem()
}

func (o DatabaseNetworkInterfaceOutput) ToDatabaseNetworkInterfaceOutput() DatabaseNetworkInterfaceOutput {
	return o
}

func (o DatabaseNetworkInterfaceOutput) ToDatabaseNetworkInterfaceOutputWithContext(ctx context.Context) DatabaseNetworkInterfaceOutput {
	return o
}

func (o DatabaseNetworkInterfaceOutput) ToDatabaseNetworkInterfacePtrOutput() DatabaseNetworkInterfacePtrOutput {
	return o.ToDatabaseNetworkInterfacePtrOutputWithContext(context.Background())
}

func (o DatabaseNetworkInterfaceOutput) ToDatabaseNetworkInterfacePtrOutputWithContext(ctx context.Context) DatabaseNetworkInterfacePtrOutput {
	return o.ApplyT(func(v DatabaseNetworkInterface) *DatabaseNetworkInterface {
		return &v
	}).(DatabaseNetworkInterfacePtrOutput)
}
func (o DatabaseNetworkInterfaceOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseNetworkInterface) string { return v.Gateway }).(pulumi.StringOutput)
}

func (o DatabaseNetworkInterfaceOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseNetworkInterface) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o DatabaseNetworkInterfaceOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v DatabaseNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o DatabaseNetworkInterfaceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v DatabaseNetworkInterface) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o DatabaseNetworkInterfaceOutput) SourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func (v DatabaseNetworkInterface) []string { return v.SourceRanges }).(pulumi.StringArrayOutput)
}

func (o DatabaseNetworkInterfaceOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseNetworkInterface) string { return v.SwitchId }).(pulumi.StringOutput)
}

type DatabaseNetworkInterfacePtrOutput struct { *pulumi.OutputState}

func (DatabaseNetworkInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseNetworkInterface)(nil)).Elem()
}

func (o DatabaseNetworkInterfacePtrOutput) ToDatabaseNetworkInterfacePtrOutput() DatabaseNetworkInterfacePtrOutput {
	return o
}

func (o DatabaseNetworkInterfacePtrOutput) ToDatabaseNetworkInterfacePtrOutputWithContext(ctx context.Context) DatabaseNetworkInterfacePtrOutput {
	return o
}

func (o DatabaseNetworkInterfacePtrOutput) Elem() DatabaseNetworkInterfaceOutput {
	return o.ApplyT(func (v *DatabaseNetworkInterface) DatabaseNetworkInterface { return *v }).(DatabaseNetworkInterfaceOutput)
}

func (o DatabaseNetworkInterfacePtrOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseNetworkInterface) string { return v.Gateway }).(pulumi.StringOutput)
}

func (o DatabaseNetworkInterfacePtrOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseNetworkInterface) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o DatabaseNetworkInterfacePtrOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v DatabaseNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o DatabaseNetworkInterfacePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v DatabaseNetworkInterface) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o DatabaseNetworkInterfacePtrOutput) SourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func (v DatabaseNetworkInterface) []string { return v.SourceRanges }).(pulumi.StringArrayOutput)
}

func (o DatabaseNetworkInterfacePtrOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseNetworkInterface) string { return v.SwitchId }).(pulumi.StringOutput)
}

type DatabaseReadReplicaNetworkInterface struct {
	Gateway *string `pulumi:"gateway"`
	IpAddress string `pulumi:"ipAddress"`
	Netmask *int `pulumi:"netmask"`
	SourceRanges []string `pulumi:"sourceRanges"`
	SwitchId *string `pulumi:"switchId"`
}

type DatabaseReadReplicaNetworkInterfaceInput interface {
	pulumi.Input

	ToDatabaseReadReplicaNetworkInterfaceOutput() DatabaseReadReplicaNetworkInterfaceOutput
	ToDatabaseReadReplicaNetworkInterfaceOutputWithContext(context.Context) DatabaseReadReplicaNetworkInterfaceOutput
}

type DatabaseReadReplicaNetworkInterfaceArgs struct {
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	Netmask pulumi.IntPtrInput `pulumi:"netmask"`
	SourceRanges pulumi.StringArrayInput `pulumi:"sourceRanges"`
	SwitchId pulumi.StringPtrInput `pulumi:"switchId"`
}

func (DatabaseReadReplicaNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseReadReplicaNetworkInterface)(nil)).Elem()
}

func (i DatabaseReadReplicaNetworkInterfaceArgs) ToDatabaseReadReplicaNetworkInterfaceOutput() DatabaseReadReplicaNetworkInterfaceOutput {
	return i.ToDatabaseReadReplicaNetworkInterfaceOutputWithContext(context.Background())
}

func (i DatabaseReadReplicaNetworkInterfaceArgs) ToDatabaseReadReplicaNetworkInterfaceOutputWithContext(ctx context.Context) DatabaseReadReplicaNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseReadReplicaNetworkInterfaceOutput)
}

func (i DatabaseReadReplicaNetworkInterfaceArgs) ToDatabaseReadReplicaNetworkInterfacePtrOutput() DatabaseReadReplicaNetworkInterfacePtrOutput {
	return i.ToDatabaseReadReplicaNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i DatabaseReadReplicaNetworkInterfaceArgs) ToDatabaseReadReplicaNetworkInterfacePtrOutputWithContext(ctx context.Context) DatabaseReadReplicaNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseReadReplicaNetworkInterfaceOutput).ToDatabaseReadReplicaNetworkInterfacePtrOutputWithContext(ctx)
}

type DatabaseReadReplicaNetworkInterfacePtrInput interface {
	pulumi.Input

	ToDatabaseReadReplicaNetworkInterfacePtrOutput() DatabaseReadReplicaNetworkInterfacePtrOutput
	ToDatabaseReadReplicaNetworkInterfacePtrOutputWithContext(context.Context) DatabaseReadReplicaNetworkInterfacePtrOutput
}

type databaseReadReplicaNetworkInterfacePtrType DatabaseReadReplicaNetworkInterfaceArgs

func DatabaseReadReplicaNetworkInterfacePtr(v *DatabaseReadReplicaNetworkInterfaceArgs) DatabaseReadReplicaNetworkInterfacePtrInput {	return (*databaseReadReplicaNetworkInterfacePtrType)(v)
}

func (*databaseReadReplicaNetworkInterfacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseReadReplicaNetworkInterface)(nil)).Elem()
}

func (i *databaseReadReplicaNetworkInterfacePtrType) ToDatabaseReadReplicaNetworkInterfacePtrOutput() DatabaseReadReplicaNetworkInterfacePtrOutput {
	return i.ToDatabaseReadReplicaNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i *databaseReadReplicaNetworkInterfacePtrType) ToDatabaseReadReplicaNetworkInterfacePtrOutputWithContext(ctx context.Context) DatabaseReadReplicaNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseReadReplicaNetworkInterfacePtrOutput)
}

type DatabaseReadReplicaNetworkInterfaceOutput struct { *pulumi.OutputState }

func (DatabaseReadReplicaNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseReadReplicaNetworkInterface)(nil)).Elem()
}

func (o DatabaseReadReplicaNetworkInterfaceOutput) ToDatabaseReadReplicaNetworkInterfaceOutput() DatabaseReadReplicaNetworkInterfaceOutput {
	return o
}

func (o DatabaseReadReplicaNetworkInterfaceOutput) ToDatabaseReadReplicaNetworkInterfaceOutputWithContext(ctx context.Context) DatabaseReadReplicaNetworkInterfaceOutput {
	return o
}

func (o DatabaseReadReplicaNetworkInterfaceOutput) ToDatabaseReadReplicaNetworkInterfacePtrOutput() DatabaseReadReplicaNetworkInterfacePtrOutput {
	return o.ToDatabaseReadReplicaNetworkInterfacePtrOutputWithContext(context.Background())
}

func (o DatabaseReadReplicaNetworkInterfaceOutput) ToDatabaseReadReplicaNetworkInterfacePtrOutputWithContext(ctx context.Context) DatabaseReadReplicaNetworkInterfacePtrOutput {
	return o.ApplyT(func(v DatabaseReadReplicaNetworkInterface) *DatabaseReadReplicaNetworkInterface {
		return &v
	}).(DatabaseReadReplicaNetworkInterfacePtrOutput)
}
func (o DatabaseReadReplicaNetworkInterfaceOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DatabaseReadReplicaNetworkInterface) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o DatabaseReadReplicaNetworkInterfaceOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseReadReplicaNetworkInterface) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o DatabaseReadReplicaNetworkInterfaceOutput) Netmask() pulumi.IntPtrOutput {
	return o.ApplyT(func (v DatabaseReadReplicaNetworkInterface) *int { return v.Netmask }).(pulumi.IntPtrOutput)
}

func (o DatabaseReadReplicaNetworkInterfaceOutput) SourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func (v DatabaseReadReplicaNetworkInterface) []string { return v.SourceRanges }).(pulumi.StringArrayOutput)
}

func (o DatabaseReadReplicaNetworkInterfaceOutput) SwitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DatabaseReadReplicaNetworkInterface) *string { return v.SwitchId }).(pulumi.StringPtrOutput)
}

type DatabaseReadReplicaNetworkInterfacePtrOutput struct { *pulumi.OutputState}

func (DatabaseReadReplicaNetworkInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseReadReplicaNetworkInterface)(nil)).Elem()
}

func (o DatabaseReadReplicaNetworkInterfacePtrOutput) ToDatabaseReadReplicaNetworkInterfacePtrOutput() DatabaseReadReplicaNetworkInterfacePtrOutput {
	return o
}

func (o DatabaseReadReplicaNetworkInterfacePtrOutput) ToDatabaseReadReplicaNetworkInterfacePtrOutputWithContext(ctx context.Context) DatabaseReadReplicaNetworkInterfacePtrOutput {
	return o
}

func (o DatabaseReadReplicaNetworkInterfacePtrOutput) Elem() DatabaseReadReplicaNetworkInterfaceOutput {
	return o.ApplyT(func (v *DatabaseReadReplicaNetworkInterface) DatabaseReadReplicaNetworkInterface { return *v }).(DatabaseReadReplicaNetworkInterfaceOutput)
}

func (o DatabaseReadReplicaNetworkInterfacePtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DatabaseReadReplicaNetworkInterface) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o DatabaseReadReplicaNetworkInterfacePtrOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v DatabaseReadReplicaNetworkInterface) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o DatabaseReadReplicaNetworkInterfacePtrOutput) Netmask() pulumi.IntPtrOutput {
	return o.ApplyT(func (v DatabaseReadReplicaNetworkInterface) *int { return v.Netmask }).(pulumi.IntPtrOutput)
}

func (o DatabaseReadReplicaNetworkInterfacePtrOutput) SourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func (v DatabaseReadReplicaNetworkInterface) []string { return v.SourceRanges }).(pulumi.StringArrayOutput)
}

func (o DatabaseReadReplicaNetworkInterfacePtrOutput) SwitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v DatabaseReadReplicaNetworkInterface) *string { return v.SwitchId }).(pulumi.StringPtrOutput)
}

type GSLBHealthCheck struct {
	DelayLoop *int `pulumi:"delayLoop"`
	HostHeader *string `pulumi:"hostHeader"`
	Path *string `pulumi:"path"`
	Port *int `pulumi:"port"`
	Protocol string `pulumi:"protocol"`
	Status *string `pulumi:"status"`
}

type GSLBHealthCheckInput interface {
	pulumi.Input

	ToGSLBHealthCheckOutput() GSLBHealthCheckOutput
	ToGSLBHealthCheckOutputWithContext(context.Context) GSLBHealthCheckOutput
}

type GSLBHealthCheckArgs struct {
	DelayLoop pulumi.IntPtrInput `pulumi:"delayLoop"`
	HostHeader pulumi.StringPtrInput `pulumi:"hostHeader"`
	Path pulumi.StringPtrInput `pulumi:"path"`
	Port pulumi.IntPtrInput `pulumi:"port"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GSLBHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GSLBHealthCheck)(nil)).Elem()
}

func (i GSLBHealthCheckArgs) ToGSLBHealthCheckOutput() GSLBHealthCheckOutput {
	return i.ToGSLBHealthCheckOutputWithContext(context.Background())
}

func (i GSLBHealthCheckArgs) ToGSLBHealthCheckOutputWithContext(ctx context.Context) GSLBHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GSLBHealthCheckOutput)
}

func (i GSLBHealthCheckArgs) ToGSLBHealthCheckPtrOutput() GSLBHealthCheckPtrOutput {
	return i.ToGSLBHealthCheckPtrOutputWithContext(context.Background())
}

func (i GSLBHealthCheckArgs) ToGSLBHealthCheckPtrOutputWithContext(ctx context.Context) GSLBHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GSLBHealthCheckOutput).ToGSLBHealthCheckPtrOutputWithContext(ctx)
}

type GSLBHealthCheckPtrInput interface {
	pulumi.Input

	ToGSLBHealthCheckPtrOutput() GSLBHealthCheckPtrOutput
	ToGSLBHealthCheckPtrOutputWithContext(context.Context) GSLBHealthCheckPtrOutput
}

type gslbhealthCheckPtrType GSLBHealthCheckArgs

func GSLBHealthCheckPtr(v *GSLBHealthCheckArgs) GSLBHealthCheckPtrInput {	return (*gslbhealthCheckPtrType)(v)
}

func (*gslbhealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GSLBHealthCheck)(nil)).Elem()
}

func (i *gslbhealthCheckPtrType) ToGSLBHealthCheckPtrOutput() GSLBHealthCheckPtrOutput {
	return i.ToGSLBHealthCheckPtrOutputWithContext(context.Background())
}

func (i *gslbhealthCheckPtrType) ToGSLBHealthCheckPtrOutputWithContext(ctx context.Context) GSLBHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GSLBHealthCheckPtrOutput)
}

type GSLBHealthCheckOutput struct { *pulumi.OutputState }

func (GSLBHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GSLBHealthCheck)(nil)).Elem()
}

func (o GSLBHealthCheckOutput) ToGSLBHealthCheckOutput() GSLBHealthCheckOutput {
	return o
}

func (o GSLBHealthCheckOutput) ToGSLBHealthCheckOutputWithContext(ctx context.Context) GSLBHealthCheckOutput {
	return o
}

func (o GSLBHealthCheckOutput) ToGSLBHealthCheckPtrOutput() GSLBHealthCheckPtrOutput {
	return o.ToGSLBHealthCheckPtrOutputWithContext(context.Background())
}

func (o GSLBHealthCheckOutput) ToGSLBHealthCheckPtrOutputWithContext(ctx context.Context) GSLBHealthCheckPtrOutput {
	return o.ApplyT(func(v GSLBHealthCheck) *GSLBHealthCheck {
		return &v
	}).(GSLBHealthCheckPtrOutput)
}
func (o GSLBHealthCheckOutput) DelayLoop() pulumi.IntPtrOutput {
	return o.ApplyT(func (v GSLBHealthCheck) *int { return v.DelayLoop }).(pulumi.IntPtrOutput)
}

func (o GSLBHealthCheckOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GSLBHealthCheck) *string { return v.HostHeader }).(pulumi.StringPtrOutput)
}

func (o GSLBHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GSLBHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o GSLBHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v GSLBHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o GSLBHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v GSLBHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GSLBHealthCheckOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GSLBHealthCheck) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type GSLBHealthCheckPtrOutput struct { *pulumi.OutputState}

func (GSLBHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GSLBHealthCheck)(nil)).Elem()
}

func (o GSLBHealthCheckPtrOutput) ToGSLBHealthCheckPtrOutput() GSLBHealthCheckPtrOutput {
	return o
}

func (o GSLBHealthCheckPtrOutput) ToGSLBHealthCheckPtrOutputWithContext(ctx context.Context) GSLBHealthCheckPtrOutput {
	return o
}

func (o GSLBHealthCheckPtrOutput) Elem() GSLBHealthCheckOutput {
	return o.ApplyT(func (v *GSLBHealthCheck) GSLBHealthCheck { return *v }).(GSLBHealthCheckOutput)
}

func (o GSLBHealthCheckPtrOutput) DelayLoop() pulumi.IntPtrOutput {
	return o.ApplyT(func (v GSLBHealthCheck) *int { return v.DelayLoop }).(pulumi.IntPtrOutput)
}

func (o GSLBHealthCheckPtrOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GSLBHealthCheck) *string { return v.HostHeader }).(pulumi.StringPtrOutput)
}

func (o GSLBHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GSLBHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o GSLBHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v GSLBHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o GSLBHealthCheckPtrOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v GSLBHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GSLBHealthCheckPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GSLBHealthCheck) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type GSLBServer struct {
	Enabled *bool `pulumi:"enabled"`
	IpAddress string `pulumi:"ipAddress"`
	Weight *int `pulumi:"weight"`
}

type GSLBServerInput interface {
	pulumi.Input

	ToGSLBServerOutput() GSLBServerOutput
	ToGSLBServerOutputWithContext(context.Context) GSLBServerOutput
}

type GSLBServerArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (GSLBServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GSLBServer)(nil)).Elem()
}

func (i GSLBServerArgs) ToGSLBServerOutput() GSLBServerOutput {
	return i.ToGSLBServerOutputWithContext(context.Background())
}

func (i GSLBServerArgs) ToGSLBServerOutputWithContext(ctx context.Context) GSLBServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GSLBServerOutput)
}

type GSLBServerArrayInput interface {
	pulumi.Input

	ToGSLBServerArrayOutput() GSLBServerArrayOutput
	ToGSLBServerArrayOutputWithContext(context.Context) GSLBServerArrayOutput
}

type GSLBServerArray []GSLBServerInput

func (GSLBServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GSLBServer)(nil)).Elem()
}

func (i GSLBServerArray) ToGSLBServerArrayOutput() GSLBServerArrayOutput {
	return i.ToGSLBServerArrayOutputWithContext(context.Background())
}

func (i GSLBServerArray) ToGSLBServerArrayOutputWithContext(ctx context.Context) GSLBServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GSLBServerArrayOutput)
}

type GSLBServerOutput struct { *pulumi.OutputState }

func (GSLBServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GSLBServer)(nil)).Elem()
}

func (o GSLBServerOutput) ToGSLBServerOutput() GSLBServerOutput {
	return o
}

func (o GSLBServerOutput) ToGSLBServerOutputWithContext(ctx context.Context) GSLBServerOutput {
	return o
}

func (o GSLBServerOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v GSLBServer) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o GSLBServerOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v GSLBServer) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GSLBServerOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func (v GSLBServer) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type GSLBServerArrayOutput struct { *pulumi.OutputState}

func (GSLBServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GSLBServer)(nil)).Elem()
}

func (o GSLBServerArrayOutput) ToGSLBServerArrayOutput() GSLBServerArrayOutput {
	return o
}

func (o GSLBServerArrayOutput) ToGSLBServerArrayOutputWithContext(ctx context.Context) GSLBServerArrayOutput {
	return o
}

func (o GSLBServerArrayOutput) Index(i pulumi.IntInput) GSLBServerOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GSLBServer {
		return vs[0].([]GSLBServer)[vs[1].(int)]
	}).(GSLBServerOutput)
}

type LoadBalancerNetworkInterface struct {
	Gateway *string `pulumi:"gateway"`
	IpAddresses []string `pulumi:"ipAddresses"`
	Netmask int `pulumi:"netmask"`
	SwitchId string `pulumi:"switchId"`
	Vrid int `pulumi:"vrid"`
}

type LoadBalancerNetworkInterfaceInput interface {
	pulumi.Input

	ToLoadBalancerNetworkInterfaceOutput() LoadBalancerNetworkInterfaceOutput
	ToLoadBalancerNetworkInterfaceOutputWithContext(context.Context) LoadBalancerNetworkInterfaceOutput
}

type LoadBalancerNetworkInterfaceArgs struct {
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	Netmask pulumi.IntInput `pulumi:"netmask"`
	SwitchId pulumi.StringInput `pulumi:"switchId"`
	Vrid pulumi.IntInput `pulumi:"vrid"`
}

func (LoadBalancerNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerNetworkInterface)(nil)).Elem()
}

func (i LoadBalancerNetworkInterfaceArgs) ToLoadBalancerNetworkInterfaceOutput() LoadBalancerNetworkInterfaceOutput {
	return i.ToLoadBalancerNetworkInterfaceOutputWithContext(context.Background())
}

func (i LoadBalancerNetworkInterfaceArgs) ToLoadBalancerNetworkInterfaceOutputWithContext(ctx context.Context) LoadBalancerNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerNetworkInterfaceOutput)
}

func (i LoadBalancerNetworkInterfaceArgs) ToLoadBalancerNetworkInterfacePtrOutput() LoadBalancerNetworkInterfacePtrOutput {
	return i.ToLoadBalancerNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i LoadBalancerNetworkInterfaceArgs) ToLoadBalancerNetworkInterfacePtrOutputWithContext(ctx context.Context) LoadBalancerNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerNetworkInterfaceOutput).ToLoadBalancerNetworkInterfacePtrOutputWithContext(ctx)
}

type LoadBalancerNetworkInterfacePtrInput interface {
	pulumi.Input

	ToLoadBalancerNetworkInterfacePtrOutput() LoadBalancerNetworkInterfacePtrOutput
	ToLoadBalancerNetworkInterfacePtrOutputWithContext(context.Context) LoadBalancerNetworkInterfacePtrOutput
}

type loadBalancerNetworkInterfacePtrType LoadBalancerNetworkInterfaceArgs

func LoadBalancerNetworkInterfacePtr(v *LoadBalancerNetworkInterfaceArgs) LoadBalancerNetworkInterfacePtrInput {	return (*loadBalancerNetworkInterfacePtrType)(v)
}

func (*loadBalancerNetworkInterfacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerNetworkInterface)(nil)).Elem()
}

func (i *loadBalancerNetworkInterfacePtrType) ToLoadBalancerNetworkInterfacePtrOutput() LoadBalancerNetworkInterfacePtrOutput {
	return i.ToLoadBalancerNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i *loadBalancerNetworkInterfacePtrType) ToLoadBalancerNetworkInterfacePtrOutputWithContext(ctx context.Context) LoadBalancerNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerNetworkInterfacePtrOutput)
}

type LoadBalancerNetworkInterfaceOutput struct { *pulumi.OutputState }

func (LoadBalancerNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerNetworkInterface)(nil)).Elem()
}

func (o LoadBalancerNetworkInterfaceOutput) ToLoadBalancerNetworkInterfaceOutput() LoadBalancerNetworkInterfaceOutput {
	return o
}

func (o LoadBalancerNetworkInterfaceOutput) ToLoadBalancerNetworkInterfaceOutputWithContext(ctx context.Context) LoadBalancerNetworkInterfaceOutput {
	return o
}

func (o LoadBalancerNetworkInterfaceOutput) ToLoadBalancerNetworkInterfacePtrOutput() LoadBalancerNetworkInterfacePtrOutput {
	return o.ToLoadBalancerNetworkInterfacePtrOutputWithContext(context.Background())
}

func (o LoadBalancerNetworkInterfaceOutput) ToLoadBalancerNetworkInterfacePtrOutputWithContext(ctx context.Context) LoadBalancerNetworkInterfacePtrOutput {
	return o.ApplyT(func(v LoadBalancerNetworkInterface) *LoadBalancerNetworkInterface {
		return &v
	}).(LoadBalancerNetworkInterfacePtrOutput)
}
func (o LoadBalancerNetworkInterfaceOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func (v LoadBalancerNetworkInterface) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o LoadBalancerNetworkInterfaceOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func (v LoadBalancerNetworkInterface) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerNetworkInterfaceOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v LoadBalancerNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o LoadBalancerNetworkInterfaceOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func (v LoadBalancerNetworkInterface) string { return v.SwitchId }).(pulumi.StringOutput)
}

func (o LoadBalancerNetworkInterfaceOutput) Vrid() pulumi.IntOutput {
	return o.ApplyT(func (v LoadBalancerNetworkInterface) int { return v.Vrid }).(pulumi.IntOutput)
}

type LoadBalancerNetworkInterfacePtrOutput struct { *pulumi.OutputState}

func (LoadBalancerNetworkInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerNetworkInterface)(nil)).Elem()
}

func (o LoadBalancerNetworkInterfacePtrOutput) ToLoadBalancerNetworkInterfacePtrOutput() LoadBalancerNetworkInterfacePtrOutput {
	return o
}

func (o LoadBalancerNetworkInterfacePtrOutput) ToLoadBalancerNetworkInterfacePtrOutputWithContext(ctx context.Context) LoadBalancerNetworkInterfacePtrOutput {
	return o
}

func (o LoadBalancerNetworkInterfacePtrOutput) Elem() LoadBalancerNetworkInterfaceOutput {
	return o.ApplyT(func (v *LoadBalancerNetworkInterface) LoadBalancerNetworkInterface { return *v }).(LoadBalancerNetworkInterfaceOutput)
}

func (o LoadBalancerNetworkInterfacePtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func (v LoadBalancerNetworkInterface) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o LoadBalancerNetworkInterfacePtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func (v LoadBalancerNetworkInterface) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o LoadBalancerNetworkInterfacePtrOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v LoadBalancerNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o LoadBalancerNetworkInterfacePtrOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func (v LoadBalancerNetworkInterface) string { return v.SwitchId }).(pulumi.StringOutput)
}

func (o LoadBalancerNetworkInterfacePtrOutput) Vrid() pulumi.IntOutput {
	return o.ApplyT(func (v LoadBalancerNetworkInterface) int { return v.Vrid }).(pulumi.IntOutput)
}

type LoadBalancerVip struct {
	DelayLoop *int `pulumi:"delayLoop"`
	Description *string `pulumi:"description"`
	Port int `pulumi:"port"`
	Servers []LoadBalancerVipServer `pulumi:"servers"`
	SorryServer *string `pulumi:"sorryServer"`
	Vip string `pulumi:"vip"`
}

type LoadBalancerVipInput interface {
	pulumi.Input

	ToLoadBalancerVipOutput() LoadBalancerVipOutput
	ToLoadBalancerVipOutputWithContext(context.Context) LoadBalancerVipOutput
}

type LoadBalancerVipArgs struct {
	DelayLoop pulumi.IntPtrInput `pulumi:"delayLoop"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	Port pulumi.IntInput `pulumi:"port"`
	Servers LoadBalancerVipServerArrayInput `pulumi:"servers"`
	SorryServer pulumi.StringPtrInput `pulumi:"sorryServer"`
	Vip pulumi.StringInput `pulumi:"vip"`
}

func (LoadBalancerVipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerVip)(nil)).Elem()
}

func (i LoadBalancerVipArgs) ToLoadBalancerVipOutput() LoadBalancerVipOutput {
	return i.ToLoadBalancerVipOutputWithContext(context.Background())
}

func (i LoadBalancerVipArgs) ToLoadBalancerVipOutputWithContext(ctx context.Context) LoadBalancerVipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerVipOutput)
}

type LoadBalancerVipArrayInput interface {
	pulumi.Input

	ToLoadBalancerVipArrayOutput() LoadBalancerVipArrayOutput
	ToLoadBalancerVipArrayOutputWithContext(context.Context) LoadBalancerVipArrayOutput
}

type LoadBalancerVipArray []LoadBalancerVipInput

func (LoadBalancerVipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerVip)(nil)).Elem()
}

func (i LoadBalancerVipArray) ToLoadBalancerVipArrayOutput() LoadBalancerVipArrayOutput {
	return i.ToLoadBalancerVipArrayOutputWithContext(context.Background())
}

func (i LoadBalancerVipArray) ToLoadBalancerVipArrayOutputWithContext(ctx context.Context) LoadBalancerVipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerVipArrayOutput)
}

type LoadBalancerVipOutput struct { *pulumi.OutputState }

func (LoadBalancerVipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerVip)(nil)).Elem()
}

func (o LoadBalancerVipOutput) ToLoadBalancerVipOutput() LoadBalancerVipOutput {
	return o
}

func (o LoadBalancerVipOutput) ToLoadBalancerVipOutputWithContext(ctx context.Context) LoadBalancerVipOutput {
	return o
}

func (o LoadBalancerVipOutput) DelayLoop() pulumi.IntPtrOutput {
	return o.ApplyT(func (v LoadBalancerVip) *int { return v.DelayLoop }).(pulumi.IntPtrOutput)
}

func (o LoadBalancerVipOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v LoadBalancerVip) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LoadBalancerVipOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func (v LoadBalancerVip) int { return v.Port }).(pulumi.IntOutput)
}

func (o LoadBalancerVipOutput) Servers() LoadBalancerVipServerArrayOutput {
	return o.ApplyT(func (v LoadBalancerVip) []LoadBalancerVipServer { return v.Servers }).(LoadBalancerVipServerArrayOutput)
}

func (o LoadBalancerVipOutput) SorryServer() pulumi.StringPtrOutput {
	return o.ApplyT(func (v LoadBalancerVip) *string { return v.SorryServer }).(pulumi.StringPtrOutput)
}

func (o LoadBalancerVipOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func (v LoadBalancerVip) string { return v.Vip }).(pulumi.StringOutput)
}

type LoadBalancerVipArrayOutput struct { *pulumi.OutputState}

func (LoadBalancerVipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerVip)(nil)).Elem()
}

func (o LoadBalancerVipArrayOutput) ToLoadBalancerVipArrayOutput() LoadBalancerVipArrayOutput {
	return o
}

func (o LoadBalancerVipArrayOutput) ToLoadBalancerVipArrayOutputWithContext(ctx context.Context) LoadBalancerVipArrayOutput {
	return o
}

func (o LoadBalancerVipArrayOutput) Index(i pulumi.IntInput) LoadBalancerVipOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) LoadBalancerVip {
		return vs[0].([]LoadBalancerVip)[vs[1].(int)]
	}).(LoadBalancerVipOutput)
}

type LoadBalancerVipServer struct {
	Enabled *bool `pulumi:"enabled"`
	IpAddress string `pulumi:"ipAddress"`
	Path *string `pulumi:"path"`
	Protocol string `pulumi:"protocol"`
	Status *string `pulumi:"status"`
}

type LoadBalancerVipServerInput interface {
	pulumi.Input

	ToLoadBalancerVipServerOutput() LoadBalancerVipServerOutput
	ToLoadBalancerVipServerOutputWithContext(context.Context) LoadBalancerVipServerOutput
}

type LoadBalancerVipServerArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	Path pulumi.StringPtrInput `pulumi:"path"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (LoadBalancerVipServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerVipServer)(nil)).Elem()
}

func (i LoadBalancerVipServerArgs) ToLoadBalancerVipServerOutput() LoadBalancerVipServerOutput {
	return i.ToLoadBalancerVipServerOutputWithContext(context.Background())
}

func (i LoadBalancerVipServerArgs) ToLoadBalancerVipServerOutputWithContext(ctx context.Context) LoadBalancerVipServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerVipServerOutput)
}

type LoadBalancerVipServerArrayInput interface {
	pulumi.Input

	ToLoadBalancerVipServerArrayOutput() LoadBalancerVipServerArrayOutput
	ToLoadBalancerVipServerArrayOutputWithContext(context.Context) LoadBalancerVipServerArrayOutput
}

type LoadBalancerVipServerArray []LoadBalancerVipServerInput

func (LoadBalancerVipServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerVipServer)(nil)).Elem()
}

func (i LoadBalancerVipServerArray) ToLoadBalancerVipServerArrayOutput() LoadBalancerVipServerArrayOutput {
	return i.ToLoadBalancerVipServerArrayOutputWithContext(context.Background())
}

func (i LoadBalancerVipServerArray) ToLoadBalancerVipServerArrayOutputWithContext(ctx context.Context) LoadBalancerVipServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerVipServerArrayOutput)
}

type LoadBalancerVipServerOutput struct { *pulumi.OutputState }

func (LoadBalancerVipServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerVipServer)(nil)).Elem()
}

func (o LoadBalancerVipServerOutput) ToLoadBalancerVipServerOutput() LoadBalancerVipServerOutput {
	return o
}

func (o LoadBalancerVipServerOutput) ToLoadBalancerVipServerOutputWithContext(ctx context.Context) LoadBalancerVipServerOutput {
	return o
}

func (o LoadBalancerVipServerOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v LoadBalancerVipServer) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o LoadBalancerVipServerOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v LoadBalancerVipServer) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o LoadBalancerVipServerOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func (v LoadBalancerVipServer) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o LoadBalancerVipServerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v LoadBalancerVipServer) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o LoadBalancerVipServerOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func (v LoadBalancerVipServer) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type LoadBalancerVipServerArrayOutput struct { *pulumi.OutputState}

func (LoadBalancerVipServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerVipServer)(nil)).Elem()
}

func (o LoadBalancerVipServerArrayOutput) ToLoadBalancerVipServerArrayOutput() LoadBalancerVipServerArrayOutput {
	return o
}

func (o LoadBalancerVipServerArrayOutput) ToLoadBalancerVipServerArrayOutputWithContext(ctx context.Context) LoadBalancerVipServerArrayOutput {
	return o
}

func (o LoadBalancerVipServerArrayOutput) Index(i pulumi.IntInput) LoadBalancerVipServerOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) LoadBalancerVipServer {
		return vs[0].([]LoadBalancerVipServer)[vs[1].(int)]
	}).(LoadBalancerVipServerOutput)
}

type LocalRouterNetworkInterface struct {
	IpAddresses []string `pulumi:"ipAddresses"`
	Netmask int `pulumi:"netmask"`
	Vip string `pulumi:"vip"`
	Vrid int `pulumi:"vrid"`
}

type LocalRouterNetworkInterfaceInput interface {
	pulumi.Input

	ToLocalRouterNetworkInterfaceOutput() LocalRouterNetworkInterfaceOutput
	ToLocalRouterNetworkInterfaceOutputWithContext(context.Context) LocalRouterNetworkInterfaceOutput
}

type LocalRouterNetworkInterfaceArgs struct {
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	Netmask pulumi.IntInput `pulumi:"netmask"`
	Vip pulumi.StringInput `pulumi:"vip"`
	Vrid pulumi.IntInput `pulumi:"vrid"`
}

func (LocalRouterNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalRouterNetworkInterface)(nil)).Elem()
}

func (i LocalRouterNetworkInterfaceArgs) ToLocalRouterNetworkInterfaceOutput() LocalRouterNetworkInterfaceOutput {
	return i.ToLocalRouterNetworkInterfaceOutputWithContext(context.Background())
}

func (i LocalRouterNetworkInterfaceArgs) ToLocalRouterNetworkInterfaceOutputWithContext(ctx context.Context) LocalRouterNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterNetworkInterfaceOutput)
}

func (i LocalRouterNetworkInterfaceArgs) ToLocalRouterNetworkInterfacePtrOutput() LocalRouterNetworkInterfacePtrOutput {
	return i.ToLocalRouterNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i LocalRouterNetworkInterfaceArgs) ToLocalRouterNetworkInterfacePtrOutputWithContext(ctx context.Context) LocalRouterNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterNetworkInterfaceOutput).ToLocalRouterNetworkInterfacePtrOutputWithContext(ctx)
}

type LocalRouterNetworkInterfacePtrInput interface {
	pulumi.Input

	ToLocalRouterNetworkInterfacePtrOutput() LocalRouterNetworkInterfacePtrOutput
	ToLocalRouterNetworkInterfacePtrOutputWithContext(context.Context) LocalRouterNetworkInterfacePtrOutput
}

type localRouterNetworkInterfacePtrType LocalRouterNetworkInterfaceArgs

func LocalRouterNetworkInterfacePtr(v *LocalRouterNetworkInterfaceArgs) LocalRouterNetworkInterfacePtrInput {	return (*localRouterNetworkInterfacePtrType)(v)
}

func (*localRouterNetworkInterfacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalRouterNetworkInterface)(nil)).Elem()
}

func (i *localRouterNetworkInterfacePtrType) ToLocalRouterNetworkInterfacePtrOutput() LocalRouterNetworkInterfacePtrOutput {
	return i.ToLocalRouterNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i *localRouterNetworkInterfacePtrType) ToLocalRouterNetworkInterfacePtrOutputWithContext(ctx context.Context) LocalRouterNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterNetworkInterfacePtrOutput)
}

type LocalRouterNetworkInterfaceOutput struct { *pulumi.OutputState }

func (LocalRouterNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalRouterNetworkInterface)(nil)).Elem()
}

func (o LocalRouterNetworkInterfaceOutput) ToLocalRouterNetworkInterfaceOutput() LocalRouterNetworkInterfaceOutput {
	return o
}

func (o LocalRouterNetworkInterfaceOutput) ToLocalRouterNetworkInterfaceOutputWithContext(ctx context.Context) LocalRouterNetworkInterfaceOutput {
	return o
}

func (o LocalRouterNetworkInterfaceOutput) ToLocalRouterNetworkInterfacePtrOutput() LocalRouterNetworkInterfacePtrOutput {
	return o.ToLocalRouterNetworkInterfacePtrOutputWithContext(context.Background())
}

func (o LocalRouterNetworkInterfaceOutput) ToLocalRouterNetworkInterfacePtrOutputWithContext(ctx context.Context) LocalRouterNetworkInterfacePtrOutput {
	return o.ApplyT(func(v LocalRouterNetworkInterface) *LocalRouterNetworkInterface {
		return &v
	}).(LocalRouterNetworkInterfacePtrOutput)
}
func (o LocalRouterNetworkInterfaceOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func (v LocalRouterNetworkInterface) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o LocalRouterNetworkInterfaceOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v LocalRouterNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o LocalRouterNetworkInterfaceOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func (v LocalRouterNetworkInterface) string { return v.Vip }).(pulumi.StringOutput)
}

func (o LocalRouterNetworkInterfaceOutput) Vrid() pulumi.IntOutput {
	return o.ApplyT(func (v LocalRouterNetworkInterface) int { return v.Vrid }).(pulumi.IntOutput)
}

type LocalRouterNetworkInterfacePtrOutput struct { *pulumi.OutputState}

func (LocalRouterNetworkInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalRouterNetworkInterface)(nil)).Elem()
}

func (o LocalRouterNetworkInterfacePtrOutput) ToLocalRouterNetworkInterfacePtrOutput() LocalRouterNetworkInterfacePtrOutput {
	return o
}

func (o LocalRouterNetworkInterfacePtrOutput) ToLocalRouterNetworkInterfacePtrOutputWithContext(ctx context.Context) LocalRouterNetworkInterfacePtrOutput {
	return o
}

func (o LocalRouterNetworkInterfacePtrOutput) Elem() LocalRouterNetworkInterfaceOutput {
	return o.ApplyT(func (v *LocalRouterNetworkInterface) LocalRouterNetworkInterface { return *v }).(LocalRouterNetworkInterfaceOutput)
}

func (o LocalRouterNetworkInterfacePtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func (v LocalRouterNetworkInterface) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o LocalRouterNetworkInterfacePtrOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v LocalRouterNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o LocalRouterNetworkInterfacePtrOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func (v LocalRouterNetworkInterface) string { return v.Vip }).(pulumi.StringOutput)
}

func (o LocalRouterNetworkInterfacePtrOutput) Vrid() pulumi.IntOutput {
	return o.ApplyT(func (v LocalRouterNetworkInterface) int { return v.Vrid }).(pulumi.IntOutput)
}

type LocalRouterPeer struct {
	Description *string `pulumi:"description"`
	Enabled *bool `pulumi:"enabled"`
	PeerId string `pulumi:"peerId"`
	SecretKey string `pulumi:"secretKey"`
}

type LocalRouterPeerInput interface {
	pulumi.Input

	ToLocalRouterPeerOutput() LocalRouterPeerOutput
	ToLocalRouterPeerOutputWithContext(context.Context) LocalRouterPeerOutput
}

type LocalRouterPeerArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	PeerId pulumi.StringInput `pulumi:"peerId"`
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
}

func (LocalRouterPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalRouterPeer)(nil)).Elem()
}

func (i LocalRouterPeerArgs) ToLocalRouterPeerOutput() LocalRouterPeerOutput {
	return i.ToLocalRouterPeerOutputWithContext(context.Background())
}

func (i LocalRouterPeerArgs) ToLocalRouterPeerOutputWithContext(ctx context.Context) LocalRouterPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterPeerOutput)
}

type LocalRouterPeerArrayInput interface {
	pulumi.Input

	ToLocalRouterPeerArrayOutput() LocalRouterPeerArrayOutput
	ToLocalRouterPeerArrayOutputWithContext(context.Context) LocalRouterPeerArrayOutput
}

type LocalRouterPeerArray []LocalRouterPeerInput

func (LocalRouterPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalRouterPeer)(nil)).Elem()
}

func (i LocalRouterPeerArray) ToLocalRouterPeerArrayOutput() LocalRouterPeerArrayOutput {
	return i.ToLocalRouterPeerArrayOutputWithContext(context.Background())
}

func (i LocalRouterPeerArray) ToLocalRouterPeerArrayOutputWithContext(ctx context.Context) LocalRouterPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterPeerArrayOutput)
}

type LocalRouterPeerOutput struct { *pulumi.OutputState }

func (LocalRouterPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalRouterPeer)(nil)).Elem()
}

func (o LocalRouterPeerOutput) ToLocalRouterPeerOutput() LocalRouterPeerOutput {
	return o
}

func (o LocalRouterPeerOutput) ToLocalRouterPeerOutputWithContext(ctx context.Context) LocalRouterPeerOutput {
	return o
}

func (o LocalRouterPeerOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v LocalRouterPeer) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LocalRouterPeerOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v LocalRouterPeer) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o LocalRouterPeerOutput) PeerId() pulumi.StringOutput {
	return o.ApplyT(func (v LocalRouterPeer) string { return v.PeerId }).(pulumi.StringOutput)
}

func (o LocalRouterPeerOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func (v LocalRouterPeer) string { return v.SecretKey }).(pulumi.StringOutput)
}

type LocalRouterPeerArrayOutput struct { *pulumi.OutputState}

func (LocalRouterPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalRouterPeer)(nil)).Elem()
}

func (o LocalRouterPeerArrayOutput) ToLocalRouterPeerArrayOutput() LocalRouterPeerArrayOutput {
	return o
}

func (o LocalRouterPeerArrayOutput) ToLocalRouterPeerArrayOutputWithContext(ctx context.Context) LocalRouterPeerArrayOutput {
	return o
}

func (o LocalRouterPeerArrayOutput) Index(i pulumi.IntInput) LocalRouterPeerOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) LocalRouterPeer {
		return vs[0].([]LocalRouterPeer)[vs[1].(int)]
	}).(LocalRouterPeerOutput)
}

type LocalRouterStaticRoute struct {
	NextHop string `pulumi:"nextHop"`
	Prefix string `pulumi:"prefix"`
}

type LocalRouterStaticRouteInput interface {
	pulumi.Input

	ToLocalRouterStaticRouteOutput() LocalRouterStaticRouteOutput
	ToLocalRouterStaticRouteOutputWithContext(context.Context) LocalRouterStaticRouteOutput
}

type LocalRouterStaticRouteArgs struct {
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (LocalRouterStaticRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalRouterStaticRoute)(nil)).Elem()
}

func (i LocalRouterStaticRouteArgs) ToLocalRouterStaticRouteOutput() LocalRouterStaticRouteOutput {
	return i.ToLocalRouterStaticRouteOutputWithContext(context.Background())
}

func (i LocalRouterStaticRouteArgs) ToLocalRouterStaticRouteOutputWithContext(ctx context.Context) LocalRouterStaticRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterStaticRouteOutput)
}

type LocalRouterStaticRouteArrayInput interface {
	pulumi.Input

	ToLocalRouterStaticRouteArrayOutput() LocalRouterStaticRouteArrayOutput
	ToLocalRouterStaticRouteArrayOutputWithContext(context.Context) LocalRouterStaticRouteArrayOutput
}

type LocalRouterStaticRouteArray []LocalRouterStaticRouteInput

func (LocalRouterStaticRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalRouterStaticRoute)(nil)).Elem()
}

func (i LocalRouterStaticRouteArray) ToLocalRouterStaticRouteArrayOutput() LocalRouterStaticRouteArrayOutput {
	return i.ToLocalRouterStaticRouteArrayOutputWithContext(context.Background())
}

func (i LocalRouterStaticRouteArray) ToLocalRouterStaticRouteArrayOutputWithContext(ctx context.Context) LocalRouterStaticRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterStaticRouteArrayOutput)
}

type LocalRouterStaticRouteOutput struct { *pulumi.OutputState }

func (LocalRouterStaticRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalRouterStaticRoute)(nil)).Elem()
}

func (o LocalRouterStaticRouteOutput) ToLocalRouterStaticRouteOutput() LocalRouterStaticRouteOutput {
	return o
}

func (o LocalRouterStaticRouteOutput) ToLocalRouterStaticRouteOutputWithContext(ctx context.Context) LocalRouterStaticRouteOutput {
	return o
}

func (o LocalRouterStaticRouteOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func (v LocalRouterStaticRoute) string { return v.NextHop }).(pulumi.StringOutput)
}

func (o LocalRouterStaticRouteOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func (v LocalRouterStaticRoute) string { return v.Prefix }).(pulumi.StringOutput)
}

type LocalRouterStaticRouteArrayOutput struct { *pulumi.OutputState}

func (LocalRouterStaticRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalRouterStaticRoute)(nil)).Elem()
}

func (o LocalRouterStaticRouteArrayOutput) ToLocalRouterStaticRouteArrayOutput() LocalRouterStaticRouteArrayOutput {
	return o
}

func (o LocalRouterStaticRouteArrayOutput) ToLocalRouterStaticRouteArrayOutputWithContext(ctx context.Context) LocalRouterStaticRouteArrayOutput {
	return o
}

func (o LocalRouterStaticRouteArrayOutput) Index(i pulumi.IntInput) LocalRouterStaticRouteOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) LocalRouterStaticRoute {
		return vs[0].([]LocalRouterStaticRoute)[vs[1].(int)]
	}).(LocalRouterStaticRouteOutput)
}

type LocalRouterSwitch struct {
	Category *string `pulumi:"category"`
	Code string `pulumi:"code"`
	ZoneId string `pulumi:"zoneId"`
}

type LocalRouterSwitchInput interface {
	pulumi.Input

	ToLocalRouterSwitchOutput() LocalRouterSwitchOutput
	ToLocalRouterSwitchOutputWithContext(context.Context) LocalRouterSwitchOutput
}

type LocalRouterSwitchArgs struct {
	Category pulumi.StringPtrInput `pulumi:"category"`
	Code pulumi.StringInput `pulumi:"code"`
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (LocalRouterSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalRouterSwitch)(nil)).Elem()
}

func (i LocalRouterSwitchArgs) ToLocalRouterSwitchOutput() LocalRouterSwitchOutput {
	return i.ToLocalRouterSwitchOutputWithContext(context.Background())
}

func (i LocalRouterSwitchArgs) ToLocalRouterSwitchOutputWithContext(ctx context.Context) LocalRouterSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterSwitchOutput)
}

func (i LocalRouterSwitchArgs) ToLocalRouterSwitchPtrOutput() LocalRouterSwitchPtrOutput {
	return i.ToLocalRouterSwitchPtrOutputWithContext(context.Background())
}

func (i LocalRouterSwitchArgs) ToLocalRouterSwitchPtrOutputWithContext(ctx context.Context) LocalRouterSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterSwitchOutput).ToLocalRouterSwitchPtrOutputWithContext(ctx)
}

type LocalRouterSwitchPtrInput interface {
	pulumi.Input

	ToLocalRouterSwitchPtrOutput() LocalRouterSwitchPtrOutput
	ToLocalRouterSwitchPtrOutputWithContext(context.Context) LocalRouterSwitchPtrOutput
}

type localRouterSwitchPtrType LocalRouterSwitchArgs

func LocalRouterSwitchPtr(v *LocalRouterSwitchArgs) LocalRouterSwitchPtrInput {	return (*localRouterSwitchPtrType)(v)
}

func (*localRouterSwitchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalRouterSwitch)(nil)).Elem()
}

func (i *localRouterSwitchPtrType) ToLocalRouterSwitchPtrOutput() LocalRouterSwitchPtrOutput {
	return i.ToLocalRouterSwitchPtrOutputWithContext(context.Background())
}

func (i *localRouterSwitchPtrType) ToLocalRouterSwitchPtrOutputWithContext(ctx context.Context) LocalRouterSwitchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterSwitchPtrOutput)
}

type LocalRouterSwitchOutput struct { *pulumi.OutputState }

func (LocalRouterSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalRouterSwitch)(nil)).Elem()
}

func (o LocalRouterSwitchOutput) ToLocalRouterSwitchOutput() LocalRouterSwitchOutput {
	return o
}

func (o LocalRouterSwitchOutput) ToLocalRouterSwitchOutputWithContext(ctx context.Context) LocalRouterSwitchOutput {
	return o
}

func (o LocalRouterSwitchOutput) ToLocalRouterSwitchPtrOutput() LocalRouterSwitchPtrOutput {
	return o.ToLocalRouterSwitchPtrOutputWithContext(context.Background())
}

func (o LocalRouterSwitchOutput) ToLocalRouterSwitchPtrOutputWithContext(ctx context.Context) LocalRouterSwitchPtrOutput {
	return o.ApplyT(func(v LocalRouterSwitch) *LocalRouterSwitch {
		return &v
	}).(LocalRouterSwitchPtrOutput)
}
func (o LocalRouterSwitchOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func (v LocalRouterSwitch) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LocalRouterSwitchOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func (v LocalRouterSwitch) string { return v.Code }).(pulumi.StringOutput)
}

func (o LocalRouterSwitchOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func (v LocalRouterSwitch) string { return v.ZoneId }).(pulumi.StringOutput)
}

type LocalRouterSwitchPtrOutput struct { *pulumi.OutputState}

func (LocalRouterSwitchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalRouterSwitch)(nil)).Elem()
}

func (o LocalRouterSwitchPtrOutput) ToLocalRouterSwitchPtrOutput() LocalRouterSwitchPtrOutput {
	return o
}

func (o LocalRouterSwitchPtrOutput) ToLocalRouterSwitchPtrOutputWithContext(ctx context.Context) LocalRouterSwitchPtrOutput {
	return o
}

func (o LocalRouterSwitchPtrOutput) Elem() LocalRouterSwitchOutput {
	return o.ApplyT(func (v *LocalRouterSwitch) LocalRouterSwitch { return *v }).(LocalRouterSwitchOutput)
}

func (o LocalRouterSwitchPtrOutput) Category() pulumi.StringPtrOutput {
	return o.ApplyT(func (v LocalRouterSwitch) *string { return v.Category }).(pulumi.StringPtrOutput)
}

func (o LocalRouterSwitchPtrOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func (v LocalRouterSwitch) string { return v.Code }).(pulumi.StringOutput)
}

func (o LocalRouterSwitchPtrOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func (v LocalRouterSwitch) string { return v.ZoneId }).(pulumi.StringOutput)
}

type MobileGatewayPrivateNetworkInterface struct {
	IpAddress string `pulumi:"ipAddress"`
	Netmask int `pulumi:"netmask"`
	SwitchId string `pulumi:"switchId"`
}

type MobileGatewayPrivateNetworkInterfaceInput interface {
	pulumi.Input

	ToMobileGatewayPrivateNetworkInterfaceOutput() MobileGatewayPrivateNetworkInterfaceOutput
	ToMobileGatewayPrivateNetworkInterfaceOutputWithContext(context.Context) MobileGatewayPrivateNetworkInterfaceOutput
}

type MobileGatewayPrivateNetworkInterfaceArgs struct {
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	Netmask pulumi.IntInput `pulumi:"netmask"`
	SwitchId pulumi.StringInput `pulumi:"switchId"`
}

func (MobileGatewayPrivateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileGatewayPrivateNetworkInterface)(nil)).Elem()
}

func (i MobileGatewayPrivateNetworkInterfaceArgs) ToMobileGatewayPrivateNetworkInterfaceOutput() MobileGatewayPrivateNetworkInterfaceOutput {
	return i.ToMobileGatewayPrivateNetworkInterfaceOutputWithContext(context.Background())
}

func (i MobileGatewayPrivateNetworkInterfaceArgs) ToMobileGatewayPrivateNetworkInterfaceOutputWithContext(ctx context.Context) MobileGatewayPrivateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileGatewayPrivateNetworkInterfaceOutput)
}

func (i MobileGatewayPrivateNetworkInterfaceArgs) ToMobileGatewayPrivateNetworkInterfacePtrOutput() MobileGatewayPrivateNetworkInterfacePtrOutput {
	return i.ToMobileGatewayPrivateNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i MobileGatewayPrivateNetworkInterfaceArgs) ToMobileGatewayPrivateNetworkInterfacePtrOutputWithContext(ctx context.Context) MobileGatewayPrivateNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileGatewayPrivateNetworkInterfaceOutput).ToMobileGatewayPrivateNetworkInterfacePtrOutputWithContext(ctx)
}

type MobileGatewayPrivateNetworkInterfacePtrInput interface {
	pulumi.Input

	ToMobileGatewayPrivateNetworkInterfacePtrOutput() MobileGatewayPrivateNetworkInterfacePtrOutput
	ToMobileGatewayPrivateNetworkInterfacePtrOutputWithContext(context.Context) MobileGatewayPrivateNetworkInterfacePtrOutput
}

type mobileGatewayPrivateNetworkInterfacePtrType MobileGatewayPrivateNetworkInterfaceArgs

func MobileGatewayPrivateNetworkInterfacePtr(v *MobileGatewayPrivateNetworkInterfaceArgs) MobileGatewayPrivateNetworkInterfacePtrInput {	return (*mobileGatewayPrivateNetworkInterfacePtrType)(v)
}

func (*mobileGatewayPrivateNetworkInterfacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileGatewayPrivateNetworkInterface)(nil)).Elem()
}

func (i *mobileGatewayPrivateNetworkInterfacePtrType) ToMobileGatewayPrivateNetworkInterfacePtrOutput() MobileGatewayPrivateNetworkInterfacePtrOutput {
	return i.ToMobileGatewayPrivateNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i *mobileGatewayPrivateNetworkInterfacePtrType) ToMobileGatewayPrivateNetworkInterfacePtrOutputWithContext(ctx context.Context) MobileGatewayPrivateNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileGatewayPrivateNetworkInterfacePtrOutput)
}

type MobileGatewayPrivateNetworkInterfaceOutput struct { *pulumi.OutputState }

func (MobileGatewayPrivateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileGatewayPrivateNetworkInterface)(nil)).Elem()
}

func (o MobileGatewayPrivateNetworkInterfaceOutput) ToMobileGatewayPrivateNetworkInterfaceOutput() MobileGatewayPrivateNetworkInterfaceOutput {
	return o
}

func (o MobileGatewayPrivateNetworkInterfaceOutput) ToMobileGatewayPrivateNetworkInterfaceOutputWithContext(ctx context.Context) MobileGatewayPrivateNetworkInterfaceOutput {
	return o
}

func (o MobileGatewayPrivateNetworkInterfaceOutput) ToMobileGatewayPrivateNetworkInterfacePtrOutput() MobileGatewayPrivateNetworkInterfacePtrOutput {
	return o.ToMobileGatewayPrivateNetworkInterfacePtrOutputWithContext(context.Background())
}

func (o MobileGatewayPrivateNetworkInterfaceOutput) ToMobileGatewayPrivateNetworkInterfacePtrOutputWithContext(ctx context.Context) MobileGatewayPrivateNetworkInterfacePtrOutput {
	return o.ApplyT(func(v MobileGatewayPrivateNetworkInterface) *MobileGatewayPrivateNetworkInterface {
		return &v
	}).(MobileGatewayPrivateNetworkInterfacePtrOutput)
}
func (o MobileGatewayPrivateNetworkInterfaceOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v MobileGatewayPrivateNetworkInterface) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o MobileGatewayPrivateNetworkInterfaceOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v MobileGatewayPrivateNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o MobileGatewayPrivateNetworkInterfaceOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func (v MobileGatewayPrivateNetworkInterface) string { return v.SwitchId }).(pulumi.StringOutput)
}

type MobileGatewayPrivateNetworkInterfacePtrOutput struct { *pulumi.OutputState}

func (MobileGatewayPrivateNetworkInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileGatewayPrivateNetworkInterface)(nil)).Elem()
}

func (o MobileGatewayPrivateNetworkInterfacePtrOutput) ToMobileGatewayPrivateNetworkInterfacePtrOutput() MobileGatewayPrivateNetworkInterfacePtrOutput {
	return o
}

func (o MobileGatewayPrivateNetworkInterfacePtrOutput) ToMobileGatewayPrivateNetworkInterfacePtrOutputWithContext(ctx context.Context) MobileGatewayPrivateNetworkInterfacePtrOutput {
	return o
}

func (o MobileGatewayPrivateNetworkInterfacePtrOutput) Elem() MobileGatewayPrivateNetworkInterfaceOutput {
	return o.ApplyT(func (v *MobileGatewayPrivateNetworkInterface) MobileGatewayPrivateNetworkInterface { return *v }).(MobileGatewayPrivateNetworkInterfaceOutput)
}

func (o MobileGatewayPrivateNetworkInterfacePtrOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v MobileGatewayPrivateNetworkInterface) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o MobileGatewayPrivateNetworkInterfacePtrOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v MobileGatewayPrivateNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o MobileGatewayPrivateNetworkInterfacePtrOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func (v MobileGatewayPrivateNetworkInterface) string { return v.SwitchId }).(pulumi.StringOutput)
}

type MobileGatewaySim struct {
	IpAddress string `pulumi:"ipAddress"`
	SimId string `pulumi:"simId"`
}

type MobileGatewaySimInput interface {
	pulumi.Input

	ToMobileGatewaySimOutput() MobileGatewaySimOutput
	ToMobileGatewaySimOutputWithContext(context.Context) MobileGatewaySimOutput
}

type MobileGatewaySimArgs struct {
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	SimId pulumi.StringInput `pulumi:"simId"`
}

func (MobileGatewaySimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileGatewaySim)(nil)).Elem()
}

func (i MobileGatewaySimArgs) ToMobileGatewaySimOutput() MobileGatewaySimOutput {
	return i.ToMobileGatewaySimOutputWithContext(context.Background())
}

func (i MobileGatewaySimArgs) ToMobileGatewaySimOutputWithContext(ctx context.Context) MobileGatewaySimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileGatewaySimOutput)
}

type MobileGatewaySimArrayInput interface {
	pulumi.Input

	ToMobileGatewaySimArrayOutput() MobileGatewaySimArrayOutput
	ToMobileGatewaySimArrayOutputWithContext(context.Context) MobileGatewaySimArrayOutput
}

type MobileGatewaySimArray []MobileGatewaySimInput

func (MobileGatewaySimArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobileGatewaySim)(nil)).Elem()
}

func (i MobileGatewaySimArray) ToMobileGatewaySimArrayOutput() MobileGatewaySimArrayOutput {
	return i.ToMobileGatewaySimArrayOutputWithContext(context.Background())
}

func (i MobileGatewaySimArray) ToMobileGatewaySimArrayOutputWithContext(ctx context.Context) MobileGatewaySimArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileGatewaySimArrayOutput)
}

type MobileGatewaySimOutput struct { *pulumi.OutputState }

func (MobileGatewaySimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileGatewaySim)(nil)).Elem()
}

func (o MobileGatewaySimOutput) ToMobileGatewaySimOutput() MobileGatewaySimOutput {
	return o
}

func (o MobileGatewaySimOutput) ToMobileGatewaySimOutputWithContext(ctx context.Context) MobileGatewaySimOutput {
	return o
}

func (o MobileGatewaySimOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v MobileGatewaySim) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o MobileGatewaySimOutput) SimId() pulumi.StringOutput {
	return o.ApplyT(func (v MobileGatewaySim) string { return v.SimId }).(pulumi.StringOutput)
}

type MobileGatewaySimArrayOutput struct { *pulumi.OutputState}

func (MobileGatewaySimArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobileGatewaySim)(nil)).Elem()
}

func (o MobileGatewaySimArrayOutput) ToMobileGatewaySimArrayOutput() MobileGatewaySimArrayOutput {
	return o
}

func (o MobileGatewaySimArrayOutput) ToMobileGatewaySimArrayOutputWithContext(ctx context.Context) MobileGatewaySimArrayOutput {
	return o
}

func (o MobileGatewaySimArrayOutput) Index(i pulumi.IntInput) MobileGatewaySimOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) MobileGatewaySim {
		return vs[0].([]MobileGatewaySim)[vs[1].(int)]
	}).(MobileGatewaySimOutput)
}

type MobileGatewaySimRoute struct {
	Prefix string `pulumi:"prefix"`
	SimId string `pulumi:"simId"`
}

type MobileGatewaySimRouteInput interface {
	pulumi.Input

	ToMobileGatewaySimRouteOutput() MobileGatewaySimRouteOutput
	ToMobileGatewaySimRouteOutputWithContext(context.Context) MobileGatewaySimRouteOutput
}

type MobileGatewaySimRouteArgs struct {
	Prefix pulumi.StringInput `pulumi:"prefix"`
	SimId pulumi.StringInput `pulumi:"simId"`
}

func (MobileGatewaySimRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileGatewaySimRoute)(nil)).Elem()
}

func (i MobileGatewaySimRouteArgs) ToMobileGatewaySimRouteOutput() MobileGatewaySimRouteOutput {
	return i.ToMobileGatewaySimRouteOutputWithContext(context.Background())
}

func (i MobileGatewaySimRouteArgs) ToMobileGatewaySimRouteOutputWithContext(ctx context.Context) MobileGatewaySimRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileGatewaySimRouteOutput)
}

type MobileGatewaySimRouteArrayInput interface {
	pulumi.Input

	ToMobileGatewaySimRouteArrayOutput() MobileGatewaySimRouteArrayOutput
	ToMobileGatewaySimRouteArrayOutputWithContext(context.Context) MobileGatewaySimRouteArrayOutput
}

type MobileGatewaySimRouteArray []MobileGatewaySimRouteInput

func (MobileGatewaySimRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobileGatewaySimRoute)(nil)).Elem()
}

func (i MobileGatewaySimRouteArray) ToMobileGatewaySimRouteArrayOutput() MobileGatewaySimRouteArrayOutput {
	return i.ToMobileGatewaySimRouteArrayOutputWithContext(context.Background())
}

func (i MobileGatewaySimRouteArray) ToMobileGatewaySimRouteArrayOutputWithContext(ctx context.Context) MobileGatewaySimRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileGatewaySimRouteArrayOutput)
}

type MobileGatewaySimRouteOutput struct { *pulumi.OutputState }

func (MobileGatewaySimRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileGatewaySimRoute)(nil)).Elem()
}

func (o MobileGatewaySimRouteOutput) ToMobileGatewaySimRouteOutput() MobileGatewaySimRouteOutput {
	return o
}

func (o MobileGatewaySimRouteOutput) ToMobileGatewaySimRouteOutputWithContext(ctx context.Context) MobileGatewaySimRouteOutput {
	return o
}

func (o MobileGatewaySimRouteOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func (v MobileGatewaySimRoute) string { return v.Prefix }).(pulumi.StringOutput)
}

func (o MobileGatewaySimRouteOutput) SimId() pulumi.StringOutput {
	return o.ApplyT(func (v MobileGatewaySimRoute) string { return v.SimId }).(pulumi.StringOutput)
}

type MobileGatewaySimRouteArrayOutput struct { *pulumi.OutputState}

func (MobileGatewaySimRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobileGatewaySimRoute)(nil)).Elem()
}

func (o MobileGatewaySimRouteArrayOutput) ToMobileGatewaySimRouteArrayOutput() MobileGatewaySimRouteArrayOutput {
	return o
}

func (o MobileGatewaySimRouteArrayOutput) ToMobileGatewaySimRouteArrayOutputWithContext(ctx context.Context) MobileGatewaySimRouteArrayOutput {
	return o
}

func (o MobileGatewaySimRouteArrayOutput) Index(i pulumi.IntInput) MobileGatewaySimRouteOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) MobileGatewaySimRoute {
		return vs[0].([]MobileGatewaySimRoute)[vs[1].(int)]
	}).(MobileGatewaySimRouteOutput)
}

type MobileGatewayStaticRoute struct {
	NextHop string `pulumi:"nextHop"`
	Prefix string `pulumi:"prefix"`
}

type MobileGatewayStaticRouteInput interface {
	pulumi.Input

	ToMobileGatewayStaticRouteOutput() MobileGatewayStaticRouteOutput
	ToMobileGatewayStaticRouteOutputWithContext(context.Context) MobileGatewayStaticRouteOutput
}

type MobileGatewayStaticRouteArgs struct {
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (MobileGatewayStaticRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileGatewayStaticRoute)(nil)).Elem()
}

func (i MobileGatewayStaticRouteArgs) ToMobileGatewayStaticRouteOutput() MobileGatewayStaticRouteOutput {
	return i.ToMobileGatewayStaticRouteOutputWithContext(context.Background())
}

func (i MobileGatewayStaticRouteArgs) ToMobileGatewayStaticRouteOutputWithContext(ctx context.Context) MobileGatewayStaticRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileGatewayStaticRouteOutput)
}

type MobileGatewayStaticRouteArrayInput interface {
	pulumi.Input

	ToMobileGatewayStaticRouteArrayOutput() MobileGatewayStaticRouteArrayOutput
	ToMobileGatewayStaticRouteArrayOutputWithContext(context.Context) MobileGatewayStaticRouteArrayOutput
}

type MobileGatewayStaticRouteArray []MobileGatewayStaticRouteInput

func (MobileGatewayStaticRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobileGatewayStaticRoute)(nil)).Elem()
}

func (i MobileGatewayStaticRouteArray) ToMobileGatewayStaticRouteArrayOutput() MobileGatewayStaticRouteArrayOutput {
	return i.ToMobileGatewayStaticRouteArrayOutputWithContext(context.Background())
}

func (i MobileGatewayStaticRouteArray) ToMobileGatewayStaticRouteArrayOutputWithContext(ctx context.Context) MobileGatewayStaticRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileGatewayStaticRouteArrayOutput)
}

type MobileGatewayStaticRouteOutput struct { *pulumi.OutputState }

func (MobileGatewayStaticRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileGatewayStaticRoute)(nil)).Elem()
}

func (o MobileGatewayStaticRouteOutput) ToMobileGatewayStaticRouteOutput() MobileGatewayStaticRouteOutput {
	return o
}

func (o MobileGatewayStaticRouteOutput) ToMobileGatewayStaticRouteOutputWithContext(ctx context.Context) MobileGatewayStaticRouteOutput {
	return o
}

func (o MobileGatewayStaticRouteOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func (v MobileGatewayStaticRoute) string { return v.NextHop }).(pulumi.StringOutput)
}

func (o MobileGatewayStaticRouteOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func (v MobileGatewayStaticRoute) string { return v.Prefix }).(pulumi.StringOutput)
}

type MobileGatewayStaticRouteArrayOutput struct { *pulumi.OutputState}

func (MobileGatewayStaticRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MobileGatewayStaticRoute)(nil)).Elem()
}

func (o MobileGatewayStaticRouteArrayOutput) ToMobileGatewayStaticRouteArrayOutput() MobileGatewayStaticRouteArrayOutput {
	return o
}

func (o MobileGatewayStaticRouteArrayOutput) ToMobileGatewayStaticRouteArrayOutputWithContext(ctx context.Context) MobileGatewayStaticRouteArrayOutput {
	return o
}

func (o MobileGatewayStaticRouteArrayOutput) Index(i pulumi.IntInput) MobileGatewayStaticRouteOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) MobileGatewayStaticRoute {
		return vs[0].([]MobileGatewayStaticRoute)[vs[1].(int)]
	}).(MobileGatewayStaticRouteOutput)
}

type MobileGatewayTrafficControl struct {
	AutoTrafficShaping *bool `pulumi:"autoTrafficShaping"`
	BandWidthLimit *int `pulumi:"bandWidthLimit"`
	EnableEmail *bool `pulumi:"enableEmail"`
	EnableSlack *bool `pulumi:"enableSlack"`
	Quota int `pulumi:"quota"`
	SlackWebhook *string `pulumi:"slackWebhook"`
}

type MobileGatewayTrafficControlInput interface {
	pulumi.Input

	ToMobileGatewayTrafficControlOutput() MobileGatewayTrafficControlOutput
	ToMobileGatewayTrafficControlOutputWithContext(context.Context) MobileGatewayTrafficControlOutput
}

type MobileGatewayTrafficControlArgs struct {
	AutoTrafficShaping pulumi.BoolPtrInput `pulumi:"autoTrafficShaping"`
	BandWidthLimit pulumi.IntPtrInput `pulumi:"bandWidthLimit"`
	EnableEmail pulumi.BoolPtrInput `pulumi:"enableEmail"`
	EnableSlack pulumi.BoolPtrInput `pulumi:"enableSlack"`
	Quota pulumi.IntInput `pulumi:"quota"`
	SlackWebhook pulumi.StringPtrInput `pulumi:"slackWebhook"`
}

func (MobileGatewayTrafficControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileGatewayTrafficControl)(nil)).Elem()
}

func (i MobileGatewayTrafficControlArgs) ToMobileGatewayTrafficControlOutput() MobileGatewayTrafficControlOutput {
	return i.ToMobileGatewayTrafficControlOutputWithContext(context.Background())
}

func (i MobileGatewayTrafficControlArgs) ToMobileGatewayTrafficControlOutputWithContext(ctx context.Context) MobileGatewayTrafficControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileGatewayTrafficControlOutput)
}

func (i MobileGatewayTrafficControlArgs) ToMobileGatewayTrafficControlPtrOutput() MobileGatewayTrafficControlPtrOutput {
	return i.ToMobileGatewayTrafficControlPtrOutputWithContext(context.Background())
}

func (i MobileGatewayTrafficControlArgs) ToMobileGatewayTrafficControlPtrOutputWithContext(ctx context.Context) MobileGatewayTrafficControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileGatewayTrafficControlOutput).ToMobileGatewayTrafficControlPtrOutputWithContext(ctx)
}

type MobileGatewayTrafficControlPtrInput interface {
	pulumi.Input

	ToMobileGatewayTrafficControlPtrOutput() MobileGatewayTrafficControlPtrOutput
	ToMobileGatewayTrafficControlPtrOutputWithContext(context.Context) MobileGatewayTrafficControlPtrOutput
}

type mobileGatewayTrafficControlPtrType MobileGatewayTrafficControlArgs

func MobileGatewayTrafficControlPtr(v *MobileGatewayTrafficControlArgs) MobileGatewayTrafficControlPtrInput {	return (*mobileGatewayTrafficControlPtrType)(v)
}

func (*mobileGatewayTrafficControlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileGatewayTrafficControl)(nil)).Elem()
}

func (i *mobileGatewayTrafficControlPtrType) ToMobileGatewayTrafficControlPtrOutput() MobileGatewayTrafficControlPtrOutput {
	return i.ToMobileGatewayTrafficControlPtrOutputWithContext(context.Background())
}

func (i *mobileGatewayTrafficControlPtrType) ToMobileGatewayTrafficControlPtrOutputWithContext(ctx context.Context) MobileGatewayTrafficControlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MobileGatewayTrafficControlPtrOutput)
}

type MobileGatewayTrafficControlOutput struct { *pulumi.OutputState }

func (MobileGatewayTrafficControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MobileGatewayTrafficControl)(nil)).Elem()
}

func (o MobileGatewayTrafficControlOutput) ToMobileGatewayTrafficControlOutput() MobileGatewayTrafficControlOutput {
	return o
}

func (o MobileGatewayTrafficControlOutput) ToMobileGatewayTrafficControlOutputWithContext(ctx context.Context) MobileGatewayTrafficControlOutput {
	return o
}

func (o MobileGatewayTrafficControlOutput) ToMobileGatewayTrafficControlPtrOutput() MobileGatewayTrafficControlPtrOutput {
	return o.ToMobileGatewayTrafficControlPtrOutputWithContext(context.Background())
}

func (o MobileGatewayTrafficControlOutput) ToMobileGatewayTrafficControlPtrOutputWithContext(ctx context.Context) MobileGatewayTrafficControlPtrOutput {
	return o.ApplyT(func(v MobileGatewayTrafficControl) *MobileGatewayTrafficControl {
		return &v
	}).(MobileGatewayTrafficControlPtrOutput)
}
func (o MobileGatewayTrafficControlOutput) AutoTrafficShaping() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v MobileGatewayTrafficControl) *bool { return v.AutoTrafficShaping }).(pulumi.BoolPtrOutput)
}

func (o MobileGatewayTrafficControlOutput) BandWidthLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func (v MobileGatewayTrafficControl) *int { return v.BandWidthLimit }).(pulumi.IntPtrOutput)
}

func (o MobileGatewayTrafficControlOutput) EnableEmail() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v MobileGatewayTrafficControl) *bool { return v.EnableEmail }).(pulumi.BoolPtrOutput)
}

func (o MobileGatewayTrafficControlOutput) EnableSlack() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v MobileGatewayTrafficControl) *bool { return v.EnableSlack }).(pulumi.BoolPtrOutput)
}

func (o MobileGatewayTrafficControlOutput) Quota() pulumi.IntOutput {
	return o.ApplyT(func (v MobileGatewayTrafficControl) int { return v.Quota }).(pulumi.IntOutput)
}

func (o MobileGatewayTrafficControlOutput) SlackWebhook() pulumi.StringPtrOutput {
	return o.ApplyT(func (v MobileGatewayTrafficControl) *string { return v.SlackWebhook }).(pulumi.StringPtrOutput)
}

type MobileGatewayTrafficControlPtrOutput struct { *pulumi.OutputState}

func (MobileGatewayTrafficControlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MobileGatewayTrafficControl)(nil)).Elem()
}

func (o MobileGatewayTrafficControlPtrOutput) ToMobileGatewayTrafficControlPtrOutput() MobileGatewayTrafficControlPtrOutput {
	return o
}

func (o MobileGatewayTrafficControlPtrOutput) ToMobileGatewayTrafficControlPtrOutputWithContext(ctx context.Context) MobileGatewayTrafficControlPtrOutput {
	return o
}

func (o MobileGatewayTrafficControlPtrOutput) Elem() MobileGatewayTrafficControlOutput {
	return o.ApplyT(func (v *MobileGatewayTrafficControl) MobileGatewayTrafficControl { return *v }).(MobileGatewayTrafficControlOutput)
}

func (o MobileGatewayTrafficControlPtrOutput) AutoTrafficShaping() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v MobileGatewayTrafficControl) *bool { return v.AutoTrafficShaping }).(pulumi.BoolPtrOutput)
}

func (o MobileGatewayTrafficControlPtrOutput) BandWidthLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func (v MobileGatewayTrafficControl) *int { return v.BandWidthLimit }).(pulumi.IntPtrOutput)
}

func (o MobileGatewayTrafficControlPtrOutput) EnableEmail() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v MobileGatewayTrafficControl) *bool { return v.EnableEmail }).(pulumi.BoolPtrOutput)
}

func (o MobileGatewayTrafficControlPtrOutput) EnableSlack() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v MobileGatewayTrafficControl) *bool { return v.EnableSlack }).(pulumi.BoolPtrOutput)
}

func (o MobileGatewayTrafficControlPtrOutput) Quota() pulumi.IntOutput {
	return o.ApplyT(func (v MobileGatewayTrafficControl) int { return v.Quota }).(pulumi.IntOutput)
}

func (o MobileGatewayTrafficControlPtrOutput) SlackWebhook() pulumi.StringPtrOutput {
	return o.ApplyT(func (v MobileGatewayTrafficControl) *string { return v.SlackWebhook }).(pulumi.StringPtrOutput)
}

type NFSNetworkInterface struct {
	Gateway *string `pulumi:"gateway"`
	IpAddress string `pulumi:"ipAddress"`
	Netmask int `pulumi:"netmask"`
	SwitchId string `pulumi:"switchId"`
}

type NFSNetworkInterfaceInput interface {
	pulumi.Input

	ToNFSNetworkInterfaceOutput() NFSNetworkInterfaceOutput
	ToNFSNetworkInterfaceOutputWithContext(context.Context) NFSNetworkInterfaceOutput
}

type NFSNetworkInterfaceArgs struct {
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	Netmask pulumi.IntInput `pulumi:"netmask"`
	SwitchId pulumi.StringInput `pulumi:"switchId"`
}

func (NFSNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NFSNetworkInterface)(nil)).Elem()
}

func (i NFSNetworkInterfaceArgs) ToNFSNetworkInterfaceOutput() NFSNetworkInterfaceOutput {
	return i.ToNFSNetworkInterfaceOutputWithContext(context.Background())
}

func (i NFSNetworkInterfaceArgs) ToNFSNetworkInterfaceOutputWithContext(ctx context.Context) NFSNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NFSNetworkInterfaceOutput)
}

func (i NFSNetworkInterfaceArgs) ToNFSNetworkInterfacePtrOutput() NFSNetworkInterfacePtrOutput {
	return i.ToNFSNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i NFSNetworkInterfaceArgs) ToNFSNetworkInterfacePtrOutputWithContext(ctx context.Context) NFSNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NFSNetworkInterfaceOutput).ToNFSNetworkInterfacePtrOutputWithContext(ctx)
}

type NFSNetworkInterfacePtrInput interface {
	pulumi.Input

	ToNFSNetworkInterfacePtrOutput() NFSNetworkInterfacePtrOutput
	ToNFSNetworkInterfacePtrOutputWithContext(context.Context) NFSNetworkInterfacePtrOutput
}

type nfsnetworkInterfacePtrType NFSNetworkInterfaceArgs

func NFSNetworkInterfacePtr(v *NFSNetworkInterfaceArgs) NFSNetworkInterfacePtrInput {	return (*nfsnetworkInterfacePtrType)(v)
}

func (*nfsnetworkInterfacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NFSNetworkInterface)(nil)).Elem()
}

func (i *nfsnetworkInterfacePtrType) ToNFSNetworkInterfacePtrOutput() NFSNetworkInterfacePtrOutput {
	return i.ToNFSNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i *nfsnetworkInterfacePtrType) ToNFSNetworkInterfacePtrOutputWithContext(ctx context.Context) NFSNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NFSNetworkInterfacePtrOutput)
}

type NFSNetworkInterfaceOutput struct { *pulumi.OutputState }

func (NFSNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NFSNetworkInterface)(nil)).Elem()
}

func (o NFSNetworkInterfaceOutput) ToNFSNetworkInterfaceOutput() NFSNetworkInterfaceOutput {
	return o
}

func (o NFSNetworkInterfaceOutput) ToNFSNetworkInterfaceOutputWithContext(ctx context.Context) NFSNetworkInterfaceOutput {
	return o
}

func (o NFSNetworkInterfaceOutput) ToNFSNetworkInterfacePtrOutput() NFSNetworkInterfacePtrOutput {
	return o.ToNFSNetworkInterfacePtrOutputWithContext(context.Background())
}

func (o NFSNetworkInterfaceOutput) ToNFSNetworkInterfacePtrOutputWithContext(ctx context.Context) NFSNetworkInterfacePtrOutput {
	return o.ApplyT(func(v NFSNetworkInterface) *NFSNetworkInterface {
		return &v
	}).(NFSNetworkInterfacePtrOutput)
}
func (o NFSNetworkInterfaceOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func (v NFSNetworkInterface) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o NFSNetworkInterfaceOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v NFSNetworkInterface) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o NFSNetworkInterfaceOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v NFSNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o NFSNetworkInterfaceOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func (v NFSNetworkInterface) string { return v.SwitchId }).(pulumi.StringOutput)
}

type NFSNetworkInterfacePtrOutput struct { *pulumi.OutputState}

func (NFSNetworkInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NFSNetworkInterface)(nil)).Elem()
}

func (o NFSNetworkInterfacePtrOutput) ToNFSNetworkInterfacePtrOutput() NFSNetworkInterfacePtrOutput {
	return o
}

func (o NFSNetworkInterfacePtrOutput) ToNFSNetworkInterfacePtrOutputWithContext(ctx context.Context) NFSNetworkInterfacePtrOutput {
	return o
}

func (o NFSNetworkInterfacePtrOutput) Elem() NFSNetworkInterfaceOutput {
	return o.ApplyT(func (v *NFSNetworkInterface) NFSNetworkInterface { return *v }).(NFSNetworkInterfaceOutput)
}

func (o NFSNetworkInterfacePtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func (v NFSNetworkInterface) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o NFSNetworkInterfacePtrOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v NFSNetworkInterface) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o NFSNetworkInterfacePtrOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v NFSNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o NFSNetworkInterfacePtrOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func (v NFSNetworkInterface) string { return v.SwitchId }).(pulumi.StringOutput)
}

type PacketFilterExpression struct {
	Allow *bool `pulumi:"allow"`
	Description *string `pulumi:"description"`
	DestinationPort *string `pulumi:"destinationPort"`
	Protocol string `pulumi:"protocol"`
	SourceNetwork *string `pulumi:"sourceNetwork"`
	SourcePort *string `pulumi:"sourcePort"`
}

type PacketFilterExpressionInput interface {
	pulumi.Input

	ToPacketFilterExpressionOutput() PacketFilterExpressionOutput
	ToPacketFilterExpressionOutputWithContext(context.Context) PacketFilterExpressionOutput
}

type PacketFilterExpressionArgs struct {
	Allow pulumi.BoolPtrInput `pulumi:"allow"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	DestinationPort pulumi.StringPtrInput `pulumi:"destinationPort"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	SourceNetwork pulumi.StringPtrInput `pulumi:"sourceNetwork"`
	SourcePort pulumi.StringPtrInput `pulumi:"sourcePort"`
}

func (PacketFilterExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketFilterExpression)(nil)).Elem()
}

func (i PacketFilterExpressionArgs) ToPacketFilterExpressionOutput() PacketFilterExpressionOutput {
	return i.ToPacketFilterExpressionOutputWithContext(context.Background())
}

func (i PacketFilterExpressionArgs) ToPacketFilterExpressionOutputWithContext(ctx context.Context) PacketFilterExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketFilterExpressionOutput)
}

type PacketFilterExpressionArrayInput interface {
	pulumi.Input

	ToPacketFilterExpressionArrayOutput() PacketFilterExpressionArrayOutput
	ToPacketFilterExpressionArrayOutputWithContext(context.Context) PacketFilterExpressionArrayOutput
}

type PacketFilterExpressionArray []PacketFilterExpressionInput

func (PacketFilterExpressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketFilterExpression)(nil)).Elem()
}

func (i PacketFilterExpressionArray) ToPacketFilterExpressionArrayOutput() PacketFilterExpressionArrayOutput {
	return i.ToPacketFilterExpressionArrayOutputWithContext(context.Background())
}

func (i PacketFilterExpressionArray) ToPacketFilterExpressionArrayOutputWithContext(ctx context.Context) PacketFilterExpressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketFilterExpressionArrayOutput)
}

type PacketFilterExpressionOutput struct { *pulumi.OutputState }

func (PacketFilterExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketFilterExpression)(nil)).Elem()
}

func (o PacketFilterExpressionOutput) ToPacketFilterExpressionOutput() PacketFilterExpressionOutput {
	return o
}

func (o PacketFilterExpressionOutput) ToPacketFilterExpressionOutputWithContext(ctx context.Context) PacketFilterExpressionOutput {
	return o
}

func (o PacketFilterExpressionOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PacketFilterExpression) *bool { return v.Allow }).(pulumi.BoolPtrOutput)
}

func (o PacketFilterExpressionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PacketFilterExpression) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PacketFilterExpressionOutput) DestinationPort() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PacketFilterExpression) *string { return v.DestinationPort }).(pulumi.StringPtrOutput)
}

func (o PacketFilterExpressionOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v PacketFilterExpression) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o PacketFilterExpressionOutput) SourceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PacketFilterExpression) *string { return v.SourceNetwork }).(pulumi.StringPtrOutput)
}

func (o PacketFilterExpressionOutput) SourcePort() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PacketFilterExpression) *string { return v.SourcePort }).(pulumi.StringPtrOutput)
}

type PacketFilterExpressionArrayOutput struct { *pulumi.OutputState}

func (PacketFilterExpressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketFilterExpression)(nil)).Elem()
}

func (o PacketFilterExpressionArrayOutput) ToPacketFilterExpressionArrayOutput() PacketFilterExpressionArrayOutput {
	return o
}

func (o PacketFilterExpressionArrayOutput) ToPacketFilterExpressionArrayOutputWithContext(ctx context.Context) PacketFilterExpressionArrayOutput {
	return o
}

func (o PacketFilterExpressionArrayOutput) Index(i pulumi.IntInput) PacketFilterExpressionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) PacketFilterExpression {
		return vs[0].([]PacketFilterExpression)[vs[1].(int)]
	}).(PacketFilterExpressionOutput)
}

type PacketFilterRuleExpression struct {
	Allow *bool `pulumi:"allow"`
	Description *string `pulumi:"description"`
	DestinationPort *string `pulumi:"destinationPort"`
	Protocol string `pulumi:"protocol"`
	SourceNetwork *string `pulumi:"sourceNetwork"`
	SourcePort *string `pulumi:"sourcePort"`
}

type PacketFilterRuleExpressionInput interface {
	pulumi.Input

	ToPacketFilterRuleExpressionOutput() PacketFilterRuleExpressionOutput
	ToPacketFilterRuleExpressionOutputWithContext(context.Context) PacketFilterRuleExpressionOutput
}

type PacketFilterRuleExpressionArgs struct {
	Allow pulumi.BoolPtrInput `pulumi:"allow"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	DestinationPort pulumi.StringPtrInput `pulumi:"destinationPort"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	SourceNetwork pulumi.StringPtrInput `pulumi:"sourceNetwork"`
	SourcePort pulumi.StringPtrInput `pulumi:"sourcePort"`
}

func (PacketFilterRuleExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketFilterRuleExpression)(nil)).Elem()
}

func (i PacketFilterRuleExpressionArgs) ToPacketFilterRuleExpressionOutput() PacketFilterRuleExpressionOutput {
	return i.ToPacketFilterRuleExpressionOutputWithContext(context.Background())
}

func (i PacketFilterRuleExpressionArgs) ToPacketFilterRuleExpressionOutputWithContext(ctx context.Context) PacketFilterRuleExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketFilterRuleExpressionOutput)
}

type PacketFilterRuleExpressionArrayInput interface {
	pulumi.Input

	ToPacketFilterRuleExpressionArrayOutput() PacketFilterRuleExpressionArrayOutput
	ToPacketFilterRuleExpressionArrayOutputWithContext(context.Context) PacketFilterRuleExpressionArrayOutput
}

type PacketFilterRuleExpressionArray []PacketFilterRuleExpressionInput

func (PacketFilterRuleExpressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketFilterRuleExpression)(nil)).Elem()
}

func (i PacketFilterRuleExpressionArray) ToPacketFilterRuleExpressionArrayOutput() PacketFilterRuleExpressionArrayOutput {
	return i.ToPacketFilterRuleExpressionArrayOutputWithContext(context.Background())
}

func (i PacketFilterRuleExpressionArray) ToPacketFilterRuleExpressionArrayOutputWithContext(ctx context.Context) PacketFilterRuleExpressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PacketFilterRuleExpressionArrayOutput)
}

type PacketFilterRuleExpressionOutput struct { *pulumi.OutputState }

func (PacketFilterRuleExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PacketFilterRuleExpression)(nil)).Elem()
}

func (o PacketFilterRuleExpressionOutput) ToPacketFilterRuleExpressionOutput() PacketFilterRuleExpressionOutput {
	return o
}

func (o PacketFilterRuleExpressionOutput) ToPacketFilterRuleExpressionOutputWithContext(ctx context.Context) PacketFilterRuleExpressionOutput {
	return o
}

func (o PacketFilterRuleExpressionOutput) Allow() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v PacketFilterRuleExpression) *bool { return v.Allow }).(pulumi.BoolPtrOutput)
}

func (o PacketFilterRuleExpressionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PacketFilterRuleExpression) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PacketFilterRuleExpressionOutput) DestinationPort() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PacketFilterRuleExpression) *string { return v.DestinationPort }).(pulumi.StringPtrOutput)
}

func (o PacketFilterRuleExpressionOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v PacketFilterRuleExpression) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o PacketFilterRuleExpressionOutput) SourceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PacketFilterRuleExpression) *string { return v.SourceNetwork }).(pulumi.StringPtrOutput)
}

func (o PacketFilterRuleExpressionOutput) SourcePort() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PacketFilterRuleExpression) *string { return v.SourcePort }).(pulumi.StringPtrOutput)
}

type PacketFilterRuleExpressionArrayOutput struct { *pulumi.OutputState}

func (PacketFilterRuleExpressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PacketFilterRuleExpression)(nil)).Elem()
}

func (o PacketFilterRuleExpressionArrayOutput) ToPacketFilterRuleExpressionArrayOutput() PacketFilterRuleExpressionArrayOutput {
	return o
}

func (o PacketFilterRuleExpressionArrayOutput) ToPacketFilterRuleExpressionArrayOutputWithContext(ctx context.Context) PacketFilterRuleExpressionArrayOutput {
	return o
}

func (o PacketFilterRuleExpressionArrayOutput) Index(i pulumi.IntInput) PacketFilterRuleExpressionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) PacketFilterRuleExpression {
		return vs[0].([]PacketFilterRuleExpression)[vs[1].(int)]
	}).(PacketFilterRuleExpressionOutput)
}

type ProxyLBACMECertificate struct {
	AdditionalCertificates []ProxyLBACMECertificateAdditionalCertificate `pulumi:"additionalCertificates"`
	IntermediateCert *string `pulumi:"intermediateCert"`
	PrivateKey *string `pulumi:"privateKey"`
	ServerCert *string `pulumi:"serverCert"`
}

type ProxyLBACMECertificateInput interface {
	pulumi.Input

	ToProxyLBACMECertificateOutput() ProxyLBACMECertificateOutput
	ToProxyLBACMECertificateOutputWithContext(context.Context) ProxyLBACMECertificateOutput
}

type ProxyLBACMECertificateArgs struct {
	AdditionalCertificates ProxyLBACMECertificateAdditionalCertificateArrayInput `pulumi:"additionalCertificates"`
	IntermediateCert pulumi.StringPtrInput `pulumi:"intermediateCert"`
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	ServerCert pulumi.StringPtrInput `pulumi:"serverCert"`
}

func (ProxyLBACMECertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBACMECertificate)(nil)).Elem()
}

func (i ProxyLBACMECertificateArgs) ToProxyLBACMECertificateOutput() ProxyLBACMECertificateOutput {
	return i.ToProxyLBACMECertificateOutputWithContext(context.Background())
}

func (i ProxyLBACMECertificateArgs) ToProxyLBACMECertificateOutputWithContext(ctx context.Context) ProxyLBACMECertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBACMECertificateOutput)
}

type ProxyLBACMECertificateArrayInput interface {
	pulumi.Input

	ToProxyLBACMECertificateArrayOutput() ProxyLBACMECertificateArrayOutput
	ToProxyLBACMECertificateArrayOutputWithContext(context.Context) ProxyLBACMECertificateArrayOutput
}

type ProxyLBACMECertificateArray []ProxyLBACMECertificateInput

func (ProxyLBACMECertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyLBACMECertificate)(nil)).Elem()
}

func (i ProxyLBACMECertificateArray) ToProxyLBACMECertificateArrayOutput() ProxyLBACMECertificateArrayOutput {
	return i.ToProxyLBACMECertificateArrayOutputWithContext(context.Background())
}

func (i ProxyLBACMECertificateArray) ToProxyLBACMECertificateArrayOutputWithContext(ctx context.Context) ProxyLBACMECertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBACMECertificateArrayOutput)
}

type ProxyLBACMECertificateOutput struct { *pulumi.OutputState }

func (ProxyLBACMECertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBACMECertificate)(nil)).Elem()
}

func (o ProxyLBACMECertificateOutput) ToProxyLBACMECertificateOutput() ProxyLBACMECertificateOutput {
	return o
}

func (o ProxyLBACMECertificateOutput) ToProxyLBACMECertificateOutputWithContext(ctx context.Context) ProxyLBACMECertificateOutput {
	return o
}

func (o ProxyLBACMECertificateOutput) AdditionalCertificates() ProxyLBACMECertificateAdditionalCertificateArrayOutput {
	return o.ApplyT(func (v ProxyLBACMECertificate) []ProxyLBACMECertificateAdditionalCertificate { return v.AdditionalCertificates }).(ProxyLBACMECertificateAdditionalCertificateArrayOutput)
}

func (o ProxyLBACMECertificateOutput) IntermediateCert() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBACMECertificate) *string { return v.IntermediateCert }).(pulumi.StringPtrOutput)
}

func (o ProxyLBACMECertificateOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBACMECertificate) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o ProxyLBACMECertificateOutput) ServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBACMECertificate) *string { return v.ServerCert }).(pulumi.StringPtrOutput)
}

type ProxyLBACMECertificateArrayOutput struct { *pulumi.OutputState}

func (ProxyLBACMECertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyLBACMECertificate)(nil)).Elem()
}

func (o ProxyLBACMECertificateArrayOutput) ToProxyLBACMECertificateArrayOutput() ProxyLBACMECertificateArrayOutput {
	return o
}

func (o ProxyLBACMECertificateArrayOutput) ToProxyLBACMECertificateArrayOutputWithContext(ctx context.Context) ProxyLBACMECertificateArrayOutput {
	return o
}

func (o ProxyLBACMECertificateArrayOutput) Index(i pulumi.IntInput) ProxyLBACMECertificateOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ProxyLBACMECertificate {
		return vs[0].([]ProxyLBACMECertificate)[vs[1].(int)]
	}).(ProxyLBACMECertificateOutput)
}

type ProxyLBACMECertificateAdditionalCertificate struct {
	IntermediateCert *string `pulumi:"intermediateCert"`
	PrivateKey *string `pulumi:"privateKey"`
	ServerCert *string `pulumi:"serverCert"`
}

type ProxyLBACMECertificateAdditionalCertificateInput interface {
	pulumi.Input

	ToProxyLBACMECertificateAdditionalCertificateOutput() ProxyLBACMECertificateAdditionalCertificateOutput
	ToProxyLBACMECertificateAdditionalCertificateOutputWithContext(context.Context) ProxyLBACMECertificateAdditionalCertificateOutput
}

type ProxyLBACMECertificateAdditionalCertificateArgs struct {
	IntermediateCert pulumi.StringPtrInput `pulumi:"intermediateCert"`
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	ServerCert pulumi.StringPtrInput `pulumi:"serverCert"`
}

func (ProxyLBACMECertificateAdditionalCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBACMECertificateAdditionalCertificate)(nil)).Elem()
}

func (i ProxyLBACMECertificateAdditionalCertificateArgs) ToProxyLBACMECertificateAdditionalCertificateOutput() ProxyLBACMECertificateAdditionalCertificateOutput {
	return i.ToProxyLBACMECertificateAdditionalCertificateOutputWithContext(context.Background())
}

func (i ProxyLBACMECertificateAdditionalCertificateArgs) ToProxyLBACMECertificateAdditionalCertificateOutputWithContext(ctx context.Context) ProxyLBACMECertificateAdditionalCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBACMECertificateAdditionalCertificateOutput)
}

type ProxyLBACMECertificateAdditionalCertificateArrayInput interface {
	pulumi.Input

	ToProxyLBACMECertificateAdditionalCertificateArrayOutput() ProxyLBACMECertificateAdditionalCertificateArrayOutput
	ToProxyLBACMECertificateAdditionalCertificateArrayOutputWithContext(context.Context) ProxyLBACMECertificateAdditionalCertificateArrayOutput
}

type ProxyLBACMECertificateAdditionalCertificateArray []ProxyLBACMECertificateAdditionalCertificateInput

func (ProxyLBACMECertificateAdditionalCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyLBACMECertificateAdditionalCertificate)(nil)).Elem()
}

func (i ProxyLBACMECertificateAdditionalCertificateArray) ToProxyLBACMECertificateAdditionalCertificateArrayOutput() ProxyLBACMECertificateAdditionalCertificateArrayOutput {
	return i.ToProxyLBACMECertificateAdditionalCertificateArrayOutputWithContext(context.Background())
}

func (i ProxyLBACMECertificateAdditionalCertificateArray) ToProxyLBACMECertificateAdditionalCertificateArrayOutputWithContext(ctx context.Context) ProxyLBACMECertificateAdditionalCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBACMECertificateAdditionalCertificateArrayOutput)
}

type ProxyLBACMECertificateAdditionalCertificateOutput struct { *pulumi.OutputState }

func (ProxyLBACMECertificateAdditionalCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBACMECertificateAdditionalCertificate)(nil)).Elem()
}

func (o ProxyLBACMECertificateAdditionalCertificateOutput) ToProxyLBACMECertificateAdditionalCertificateOutput() ProxyLBACMECertificateAdditionalCertificateOutput {
	return o
}

func (o ProxyLBACMECertificateAdditionalCertificateOutput) ToProxyLBACMECertificateAdditionalCertificateOutputWithContext(ctx context.Context) ProxyLBACMECertificateAdditionalCertificateOutput {
	return o
}

func (o ProxyLBACMECertificateAdditionalCertificateOutput) IntermediateCert() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBACMECertificateAdditionalCertificate) *string { return v.IntermediateCert }).(pulumi.StringPtrOutput)
}

func (o ProxyLBACMECertificateAdditionalCertificateOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBACMECertificateAdditionalCertificate) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o ProxyLBACMECertificateAdditionalCertificateOutput) ServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBACMECertificateAdditionalCertificate) *string { return v.ServerCert }).(pulumi.StringPtrOutput)
}

type ProxyLBACMECertificateAdditionalCertificateArrayOutput struct { *pulumi.OutputState}

func (ProxyLBACMECertificateAdditionalCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyLBACMECertificateAdditionalCertificate)(nil)).Elem()
}

func (o ProxyLBACMECertificateAdditionalCertificateArrayOutput) ToProxyLBACMECertificateAdditionalCertificateArrayOutput() ProxyLBACMECertificateAdditionalCertificateArrayOutput {
	return o
}

func (o ProxyLBACMECertificateAdditionalCertificateArrayOutput) ToProxyLBACMECertificateAdditionalCertificateArrayOutputWithContext(ctx context.Context) ProxyLBACMECertificateAdditionalCertificateArrayOutput {
	return o
}

func (o ProxyLBACMECertificateAdditionalCertificateArrayOutput) Index(i pulumi.IntInput) ProxyLBACMECertificateAdditionalCertificateOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ProxyLBACMECertificateAdditionalCertificate {
		return vs[0].([]ProxyLBACMECertificateAdditionalCertificate)[vs[1].(int)]
	}).(ProxyLBACMECertificateAdditionalCertificateOutput)
}

type ProxyLBBindPort struct {
	Port *int `pulumi:"port"`
	ProxyMode string `pulumi:"proxyMode"`
	RedirectToHttps *bool `pulumi:"redirectToHttps"`
	ResponseHeaders []ProxyLBBindPortResponseHeader `pulumi:"responseHeaders"`
	SupportHttp2 *bool `pulumi:"supportHttp2"`
}

type ProxyLBBindPortInput interface {
	pulumi.Input

	ToProxyLBBindPortOutput() ProxyLBBindPortOutput
	ToProxyLBBindPortOutputWithContext(context.Context) ProxyLBBindPortOutput
}

type ProxyLBBindPortArgs struct {
	Port pulumi.IntPtrInput `pulumi:"port"`
	ProxyMode pulumi.StringInput `pulumi:"proxyMode"`
	RedirectToHttps pulumi.BoolPtrInput `pulumi:"redirectToHttps"`
	ResponseHeaders ProxyLBBindPortResponseHeaderArrayInput `pulumi:"responseHeaders"`
	SupportHttp2 pulumi.BoolPtrInput `pulumi:"supportHttp2"`
}

func (ProxyLBBindPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBBindPort)(nil)).Elem()
}

func (i ProxyLBBindPortArgs) ToProxyLBBindPortOutput() ProxyLBBindPortOutput {
	return i.ToProxyLBBindPortOutputWithContext(context.Background())
}

func (i ProxyLBBindPortArgs) ToProxyLBBindPortOutputWithContext(ctx context.Context) ProxyLBBindPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBBindPortOutput)
}

type ProxyLBBindPortArrayInput interface {
	pulumi.Input

	ToProxyLBBindPortArrayOutput() ProxyLBBindPortArrayOutput
	ToProxyLBBindPortArrayOutputWithContext(context.Context) ProxyLBBindPortArrayOutput
}

type ProxyLBBindPortArray []ProxyLBBindPortInput

func (ProxyLBBindPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyLBBindPort)(nil)).Elem()
}

func (i ProxyLBBindPortArray) ToProxyLBBindPortArrayOutput() ProxyLBBindPortArrayOutput {
	return i.ToProxyLBBindPortArrayOutputWithContext(context.Background())
}

func (i ProxyLBBindPortArray) ToProxyLBBindPortArrayOutputWithContext(ctx context.Context) ProxyLBBindPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBBindPortArrayOutput)
}

type ProxyLBBindPortOutput struct { *pulumi.OutputState }

func (ProxyLBBindPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBBindPort)(nil)).Elem()
}

func (o ProxyLBBindPortOutput) ToProxyLBBindPortOutput() ProxyLBBindPortOutput {
	return o
}

func (o ProxyLBBindPortOutput) ToProxyLBBindPortOutputWithContext(ctx context.Context) ProxyLBBindPortOutput {
	return o
}

func (o ProxyLBBindPortOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ProxyLBBindPort) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ProxyLBBindPortOutput) ProxyMode() pulumi.StringOutput {
	return o.ApplyT(func (v ProxyLBBindPort) string { return v.ProxyMode }).(pulumi.StringOutput)
}

func (o ProxyLBBindPortOutput) RedirectToHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ProxyLBBindPort) *bool { return v.RedirectToHttps }).(pulumi.BoolPtrOutput)
}

func (o ProxyLBBindPortOutput) ResponseHeaders() ProxyLBBindPortResponseHeaderArrayOutput {
	return o.ApplyT(func (v ProxyLBBindPort) []ProxyLBBindPortResponseHeader { return v.ResponseHeaders }).(ProxyLBBindPortResponseHeaderArrayOutput)
}

func (o ProxyLBBindPortOutput) SupportHttp2() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ProxyLBBindPort) *bool { return v.SupportHttp2 }).(pulumi.BoolPtrOutput)
}

type ProxyLBBindPortArrayOutput struct { *pulumi.OutputState}

func (ProxyLBBindPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyLBBindPort)(nil)).Elem()
}

func (o ProxyLBBindPortArrayOutput) ToProxyLBBindPortArrayOutput() ProxyLBBindPortArrayOutput {
	return o
}

func (o ProxyLBBindPortArrayOutput) ToProxyLBBindPortArrayOutputWithContext(ctx context.Context) ProxyLBBindPortArrayOutput {
	return o
}

func (o ProxyLBBindPortArrayOutput) Index(i pulumi.IntInput) ProxyLBBindPortOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ProxyLBBindPort {
		return vs[0].([]ProxyLBBindPort)[vs[1].(int)]
	}).(ProxyLBBindPortOutput)
}

type ProxyLBBindPortResponseHeader struct {
	Header string `pulumi:"header"`
	Value string `pulumi:"value"`
}

type ProxyLBBindPortResponseHeaderInput interface {
	pulumi.Input

	ToProxyLBBindPortResponseHeaderOutput() ProxyLBBindPortResponseHeaderOutput
	ToProxyLBBindPortResponseHeaderOutputWithContext(context.Context) ProxyLBBindPortResponseHeaderOutput
}

type ProxyLBBindPortResponseHeaderArgs struct {
	Header pulumi.StringInput `pulumi:"header"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ProxyLBBindPortResponseHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBBindPortResponseHeader)(nil)).Elem()
}

func (i ProxyLBBindPortResponseHeaderArgs) ToProxyLBBindPortResponseHeaderOutput() ProxyLBBindPortResponseHeaderOutput {
	return i.ToProxyLBBindPortResponseHeaderOutputWithContext(context.Background())
}

func (i ProxyLBBindPortResponseHeaderArgs) ToProxyLBBindPortResponseHeaderOutputWithContext(ctx context.Context) ProxyLBBindPortResponseHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBBindPortResponseHeaderOutput)
}

type ProxyLBBindPortResponseHeaderArrayInput interface {
	pulumi.Input

	ToProxyLBBindPortResponseHeaderArrayOutput() ProxyLBBindPortResponseHeaderArrayOutput
	ToProxyLBBindPortResponseHeaderArrayOutputWithContext(context.Context) ProxyLBBindPortResponseHeaderArrayOutput
}

type ProxyLBBindPortResponseHeaderArray []ProxyLBBindPortResponseHeaderInput

func (ProxyLBBindPortResponseHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyLBBindPortResponseHeader)(nil)).Elem()
}

func (i ProxyLBBindPortResponseHeaderArray) ToProxyLBBindPortResponseHeaderArrayOutput() ProxyLBBindPortResponseHeaderArrayOutput {
	return i.ToProxyLBBindPortResponseHeaderArrayOutputWithContext(context.Background())
}

func (i ProxyLBBindPortResponseHeaderArray) ToProxyLBBindPortResponseHeaderArrayOutputWithContext(ctx context.Context) ProxyLBBindPortResponseHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBBindPortResponseHeaderArrayOutput)
}

type ProxyLBBindPortResponseHeaderOutput struct { *pulumi.OutputState }

func (ProxyLBBindPortResponseHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBBindPortResponseHeader)(nil)).Elem()
}

func (o ProxyLBBindPortResponseHeaderOutput) ToProxyLBBindPortResponseHeaderOutput() ProxyLBBindPortResponseHeaderOutput {
	return o
}

func (o ProxyLBBindPortResponseHeaderOutput) ToProxyLBBindPortResponseHeaderOutputWithContext(ctx context.Context) ProxyLBBindPortResponseHeaderOutput {
	return o
}

func (o ProxyLBBindPortResponseHeaderOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func (v ProxyLBBindPortResponseHeader) string { return v.Header }).(pulumi.StringOutput)
}

func (o ProxyLBBindPortResponseHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v ProxyLBBindPortResponseHeader) string { return v.Value }).(pulumi.StringOutput)
}

type ProxyLBBindPortResponseHeaderArrayOutput struct { *pulumi.OutputState}

func (ProxyLBBindPortResponseHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyLBBindPortResponseHeader)(nil)).Elem()
}

func (o ProxyLBBindPortResponseHeaderArrayOutput) ToProxyLBBindPortResponseHeaderArrayOutput() ProxyLBBindPortResponseHeaderArrayOutput {
	return o
}

func (o ProxyLBBindPortResponseHeaderArrayOutput) ToProxyLBBindPortResponseHeaderArrayOutputWithContext(ctx context.Context) ProxyLBBindPortResponseHeaderArrayOutput {
	return o
}

func (o ProxyLBBindPortResponseHeaderArrayOutput) Index(i pulumi.IntInput) ProxyLBBindPortResponseHeaderOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ProxyLBBindPortResponseHeader {
		return vs[0].([]ProxyLBBindPortResponseHeader)[vs[1].(int)]
	}).(ProxyLBBindPortResponseHeaderOutput)
}

type ProxyLBCertificate struct {
	AdditionalCertificates []ProxyLBCertificateAdditionalCertificate `pulumi:"additionalCertificates"`
	IntermediateCert *string `pulumi:"intermediateCert"`
	PrivateKey *string `pulumi:"privateKey"`
	ServerCert *string `pulumi:"serverCert"`
}

type ProxyLBCertificateInput interface {
	pulumi.Input

	ToProxyLBCertificateOutput() ProxyLBCertificateOutput
	ToProxyLBCertificateOutputWithContext(context.Context) ProxyLBCertificateOutput
}

type ProxyLBCertificateArgs struct {
	AdditionalCertificates ProxyLBCertificateAdditionalCertificateArrayInput `pulumi:"additionalCertificates"`
	IntermediateCert pulumi.StringPtrInput `pulumi:"intermediateCert"`
	PrivateKey pulumi.StringPtrInput `pulumi:"privateKey"`
	ServerCert pulumi.StringPtrInput `pulumi:"serverCert"`
}

func (ProxyLBCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBCertificate)(nil)).Elem()
}

func (i ProxyLBCertificateArgs) ToProxyLBCertificateOutput() ProxyLBCertificateOutput {
	return i.ToProxyLBCertificateOutputWithContext(context.Background())
}

func (i ProxyLBCertificateArgs) ToProxyLBCertificateOutputWithContext(ctx context.Context) ProxyLBCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBCertificateOutput)
}

func (i ProxyLBCertificateArgs) ToProxyLBCertificatePtrOutput() ProxyLBCertificatePtrOutput {
	return i.ToProxyLBCertificatePtrOutputWithContext(context.Background())
}

func (i ProxyLBCertificateArgs) ToProxyLBCertificatePtrOutputWithContext(ctx context.Context) ProxyLBCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBCertificateOutput).ToProxyLBCertificatePtrOutputWithContext(ctx)
}

type ProxyLBCertificatePtrInput interface {
	pulumi.Input

	ToProxyLBCertificatePtrOutput() ProxyLBCertificatePtrOutput
	ToProxyLBCertificatePtrOutputWithContext(context.Context) ProxyLBCertificatePtrOutput
}

type proxyLBCertificatePtrType ProxyLBCertificateArgs

func ProxyLBCertificatePtr(v *ProxyLBCertificateArgs) ProxyLBCertificatePtrInput {	return (*proxyLBCertificatePtrType)(v)
}

func (*proxyLBCertificatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyLBCertificate)(nil)).Elem()
}

func (i *proxyLBCertificatePtrType) ToProxyLBCertificatePtrOutput() ProxyLBCertificatePtrOutput {
	return i.ToProxyLBCertificatePtrOutputWithContext(context.Background())
}

func (i *proxyLBCertificatePtrType) ToProxyLBCertificatePtrOutputWithContext(ctx context.Context) ProxyLBCertificatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBCertificatePtrOutput)
}

type ProxyLBCertificateOutput struct { *pulumi.OutputState }

func (ProxyLBCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBCertificate)(nil)).Elem()
}

func (o ProxyLBCertificateOutput) ToProxyLBCertificateOutput() ProxyLBCertificateOutput {
	return o
}

func (o ProxyLBCertificateOutput) ToProxyLBCertificateOutputWithContext(ctx context.Context) ProxyLBCertificateOutput {
	return o
}

func (o ProxyLBCertificateOutput) ToProxyLBCertificatePtrOutput() ProxyLBCertificatePtrOutput {
	return o.ToProxyLBCertificatePtrOutputWithContext(context.Background())
}

func (o ProxyLBCertificateOutput) ToProxyLBCertificatePtrOutputWithContext(ctx context.Context) ProxyLBCertificatePtrOutput {
	return o.ApplyT(func(v ProxyLBCertificate) *ProxyLBCertificate {
		return &v
	}).(ProxyLBCertificatePtrOutput)
}
func (o ProxyLBCertificateOutput) AdditionalCertificates() ProxyLBCertificateAdditionalCertificateArrayOutput {
	return o.ApplyT(func (v ProxyLBCertificate) []ProxyLBCertificateAdditionalCertificate { return v.AdditionalCertificates }).(ProxyLBCertificateAdditionalCertificateArrayOutput)
}

func (o ProxyLBCertificateOutput) IntermediateCert() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBCertificate) *string { return v.IntermediateCert }).(pulumi.StringPtrOutput)
}

func (o ProxyLBCertificateOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBCertificate) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o ProxyLBCertificateOutput) ServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBCertificate) *string { return v.ServerCert }).(pulumi.StringPtrOutput)
}

type ProxyLBCertificatePtrOutput struct { *pulumi.OutputState}

func (ProxyLBCertificatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyLBCertificate)(nil)).Elem()
}

func (o ProxyLBCertificatePtrOutput) ToProxyLBCertificatePtrOutput() ProxyLBCertificatePtrOutput {
	return o
}

func (o ProxyLBCertificatePtrOutput) ToProxyLBCertificatePtrOutputWithContext(ctx context.Context) ProxyLBCertificatePtrOutput {
	return o
}

func (o ProxyLBCertificatePtrOutput) Elem() ProxyLBCertificateOutput {
	return o.ApplyT(func (v *ProxyLBCertificate) ProxyLBCertificate { return *v }).(ProxyLBCertificateOutput)
}

func (o ProxyLBCertificatePtrOutput) AdditionalCertificates() ProxyLBCertificateAdditionalCertificateArrayOutput {
	return o.ApplyT(func (v ProxyLBCertificate) []ProxyLBCertificateAdditionalCertificate { return v.AdditionalCertificates }).(ProxyLBCertificateAdditionalCertificateArrayOutput)
}

func (o ProxyLBCertificatePtrOutput) IntermediateCert() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBCertificate) *string { return v.IntermediateCert }).(pulumi.StringPtrOutput)
}

func (o ProxyLBCertificatePtrOutput) PrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBCertificate) *string { return v.PrivateKey }).(pulumi.StringPtrOutput)
}

func (o ProxyLBCertificatePtrOutput) ServerCert() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBCertificate) *string { return v.ServerCert }).(pulumi.StringPtrOutput)
}

type ProxyLBCertificateAdditionalCertificate struct {
	IntermediateCert *string `pulumi:"intermediateCert"`
	PrivateKey string `pulumi:"privateKey"`
	ServerCert string `pulumi:"serverCert"`
}

type ProxyLBCertificateAdditionalCertificateInput interface {
	pulumi.Input

	ToProxyLBCertificateAdditionalCertificateOutput() ProxyLBCertificateAdditionalCertificateOutput
	ToProxyLBCertificateAdditionalCertificateOutputWithContext(context.Context) ProxyLBCertificateAdditionalCertificateOutput
}

type ProxyLBCertificateAdditionalCertificateArgs struct {
	IntermediateCert pulumi.StringPtrInput `pulumi:"intermediateCert"`
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
	ServerCert pulumi.StringInput `pulumi:"serverCert"`
}

func (ProxyLBCertificateAdditionalCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBCertificateAdditionalCertificate)(nil)).Elem()
}

func (i ProxyLBCertificateAdditionalCertificateArgs) ToProxyLBCertificateAdditionalCertificateOutput() ProxyLBCertificateAdditionalCertificateOutput {
	return i.ToProxyLBCertificateAdditionalCertificateOutputWithContext(context.Background())
}

func (i ProxyLBCertificateAdditionalCertificateArgs) ToProxyLBCertificateAdditionalCertificateOutputWithContext(ctx context.Context) ProxyLBCertificateAdditionalCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBCertificateAdditionalCertificateOutput)
}

type ProxyLBCertificateAdditionalCertificateArrayInput interface {
	pulumi.Input

	ToProxyLBCertificateAdditionalCertificateArrayOutput() ProxyLBCertificateAdditionalCertificateArrayOutput
	ToProxyLBCertificateAdditionalCertificateArrayOutputWithContext(context.Context) ProxyLBCertificateAdditionalCertificateArrayOutput
}

type ProxyLBCertificateAdditionalCertificateArray []ProxyLBCertificateAdditionalCertificateInput

func (ProxyLBCertificateAdditionalCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyLBCertificateAdditionalCertificate)(nil)).Elem()
}

func (i ProxyLBCertificateAdditionalCertificateArray) ToProxyLBCertificateAdditionalCertificateArrayOutput() ProxyLBCertificateAdditionalCertificateArrayOutput {
	return i.ToProxyLBCertificateAdditionalCertificateArrayOutputWithContext(context.Background())
}

func (i ProxyLBCertificateAdditionalCertificateArray) ToProxyLBCertificateAdditionalCertificateArrayOutputWithContext(ctx context.Context) ProxyLBCertificateAdditionalCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBCertificateAdditionalCertificateArrayOutput)
}

type ProxyLBCertificateAdditionalCertificateOutput struct { *pulumi.OutputState }

func (ProxyLBCertificateAdditionalCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBCertificateAdditionalCertificate)(nil)).Elem()
}

func (o ProxyLBCertificateAdditionalCertificateOutput) ToProxyLBCertificateAdditionalCertificateOutput() ProxyLBCertificateAdditionalCertificateOutput {
	return o
}

func (o ProxyLBCertificateAdditionalCertificateOutput) ToProxyLBCertificateAdditionalCertificateOutputWithContext(ctx context.Context) ProxyLBCertificateAdditionalCertificateOutput {
	return o
}

func (o ProxyLBCertificateAdditionalCertificateOutput) IntermediateCert() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBCertificateAdditionalCertificate) *string { return v.IntermediateCert }).(pulumi.StringPtrOutput)
}

func (o ProxyLBCertificateAdditionalCertificateOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func (v ProxyLBCertificateAdditionalCertificate) string { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o ProxyLBCertificateAdditionalCertificateOutput) ServerCert() pulumi.StringOutput {
	return o.ApplyT(func (v ProxyLBCertificateAdditionalCertificate) string { return v.ServerCert }).(pulumi.StringOutput)
}

type ProxyLBCertificateAdditionalCertificateArrayOutput struct { *pulumi.OutputState}

func (ProxyLBCertificateAdditionalCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyLBCertificateAdditionalCertificate)(nil)).Elem()
}

func (o ProxyLBCertificateAdditionalCertificateArrayOutput) ToProxyLBCertificateAdditionalCertificateArrayOutput() ProxyLBCertificateAdditionalCertificateArrayOutput {
	return o
}

func (o ProxyLBCertificateAdditionalCertificateArrayOutput) ToProxyLBCertificateAdditionalCertificateArrayOutputWithContext(ctx context.Context) ProxyLBCertificateAdditionalCertificateArrayOutput {
	return o
}

func (o ProxyLBCertificateAdditionalCertificateArrayOutput) Index(i pulumi.IntInput) ProxyLBCertificateAdditionalCertificateOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ProxyLBCertificateAdditionalCertificate {
		return vs[0].([]ProxyLBCertificateAdditionalCertificate)[vs[1].(int)]
	}).(ProxyLBCertificateAdditionalCertificateOutput)
}

type ProxyLBHealthCheck struct {
	DelayLoop *int `pulumi:"delayLoop"`
	HostHeader *string `pulumi:"hostHeader"`
	Path *string `pulumi:"path"`
	Port *int `pulumi:"port"`
	Protocol string `pulumi:"protocol"`
}

type ProxyLBHealthCheckInput interface {
	pulumi.Input

	ToProxyLBHealthCheckOutput() ProxyLBHealthCheckOutput
	ToProxyLBHealthCheckOutputWithContext(context.Context) ProxyLBHealthCheckOutput
}

type ProxyLBHealthCheckArgs struct {
	DelayLoop pulumi.IntPtrInput `pulumi:"delayLoop"`
	HostHeader pulumi.StringPtrInput `pulumi:"hostHeader"`
	Path pulumi.StringPtrInput `pulumi:"path"`
	Port pulumi.IntPtrInput `pulumi:"port"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (ProxyLBHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBHealthCheck)(nil)).Elem()
}

func (i ProxyLBHealthCheckArgs) ToProxyLBHealthCheckOutput() ProxyLBHealthCheckOutput {
	return i.ToProxyLBHealthCheckOutputWithContext(context.Background())
}

func (i ProxyLBHealthCheckArgs) ToProxyLBHealthCheckOutputWithContext(ctx context.Context) ProxyLBHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBHealthCheckOutput)
}

func (i ProxyLBHealthCheckArgs) ToProxyLBHealthCheckPtrOutput() ProxyLBHealthCheckPtrOutput {
	return i.ToProxyLBHealthCheckPtrOutputWithContext(context.Background())
}

func (i ProxyLBHealthCheckArgs) ToProxyLBHealthCheckPtrOutputWithContext(ctx context.Context) ProxyLBHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBHealthCheckOutput).ToProxyLBHealthCheckPtrOutputWithContext(ctx)
}

type ProxyLBHealthCheckPtrInput interface {
	pulumi.Input

	ToProxyLBHealthCheckPtrOutput() ProxyLBHealthCheckPtrOutput
	ToProxyLBHealthCheckPtrOutputWithContext(context.Context) ProxyLBHealthCheckPtrOutput
}

type proxyLBHealthCheckPtrType ProxyLBHealthCheckArgs

func ProxyLBHealthCheckPtr(v *ProxyLBHealthCheckArgs) ProxyLBHealthCheckPtrInput {	return (*proxyLBHealthCheckPtrType)(v)
}

func (*proxyLBHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyLBHealthCheck)(nil)).Elem()
}

func (i *proxyLBHealthCheckPtrType) ToProxyLBHealthCheckPtrOutput() ProxyLBHealthCheckPtrOutput {
	return i.ToProxyLBHealthCheckPtrOutputWithContext(context.Background())
}

func (i *proxyLBHealthCheckPtrType) ToProxyLBHealthCheckPtrOutputWithContext(ctx context.Context) ProxyLBHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBHealthCheckPtrOutput)
}

type ProxyLBHealthCheckOutput struct { *pulumi.OutputState }

func (ProxyLBHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBHealthCheck)(nil)).Elem()
}

func (o ProxyLBHealthCheckOutput) ToProxyLBHealthCheckOutput() ProxyLBHealthCheckOutput {
	return o
}

func (o ProxyLBHealthCheckOutput) ToProxyLBHealthCheckOutputWithContext(ctx context.Context) ProxyLBHealthCheckOutput {
	return o
}

func (o ProxyLBHealthCheckOutput) ToProxyLBHealthCheckPtrOutput() ProxyLBHealthCheckPtrOutput {
	return o.ToProxyLBHealthCheckPtrOutputWithContext(context.Background())
}

func (o ProxyLBHealthCheckOutput) ToProxyLBHealthCheckPtrOutputWithContext(ctx context.Context) ProxyLBHealthCheckPtrOutput {
	return o.ApplyT(func(v ProxyLBHealthCheck) *ProxyLBHealthCheck {
		return &v
	}).(ProxyLBHealthCheckPtrOutput)
}
func (o ProxyLBHealthCheckOutput) DelayLoop() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ProxyLBHealthCheck) *int { return v.DelayLoop }).(pulumi.IntPtrOutput)
}

func (o ProxyLBHealthCheckOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBHealthCheck) *string { return v.HostHeader }).(pulumi.StringPtrOutput)
}

func (o ProxyLBHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o ProxyLBHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ProxyLBHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ProxyLBHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v ProxyLBHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

type ProxyLBHealthCheckPtrOutput struct { *pulumi.OutputState}

func (ProxyLBHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyLBHealthCheck)(nil)).Elem()
}

func (o ProxyLBHealthCheckPtrOutput) ToProxyLBHealthCheckPtrOutput() ProxyLBHealthCheckPtrOutput {
	return o
}

func (o ProxyLBHealthCheckPtrOutput) ToProxyLBHealthCheckPtrOutputWithContext(ctx context.Context) ProxyLBHealthCheckPtrOutput {
	return o
}

func (o ProxyLBHealthCheckPtrOutput) Elem() ProxyLBHealthCheckOutput {
	return o.ApplyT(func (v *ProxyLBHealthCheck) ProxyLBHealthCheck { return *v }).(ProxyLBHealthCheckOutput)
}

func (o ProxyLBHealthCheckPtrOutput) DelayLoop() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ProxyLBHealthCheck) *int { return v.DelayLoop }).(pulumi.IntPtrOutput)
}

func (o ProxyLBHealthCheckPtrOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBHealthCheck) *string { return v.HostHeader }).(pulumi.StringPtrOutput)
}

func (o ProxyLBHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o ProxyLBHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ProxyLBHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ProxyLBHealthCheckPtrOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v ProxyLBHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

type ProxyLBRule struct {
	Group *string `pulumi:"group"`
	Host *string `pulumi:"host"`
	Path *string `pulumi:"path"`
}

type ProxyLBRuleInput interface {
	pulumi.Input

	ToProxyLBRuleOutput() ProxyLBRuleOutput
	ToProxyLBRuleOutputWithContext(context.Context) ProxyLBRuleOutput
}

type ProxyLBRuleArgs struct {
	Group pulumi.StringPtrInput `pulumi:"group"`
	Host pulumi.StringPtrInput `pulumi:"host"`
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (ProxyLBRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBRule)(nil)).Elem()
}

func (i ProxyLBRuleArgs) ToProxyLBRuleOutput() ProxyLBRuleOutput {
	return i.ToProxyLBRuleOutputWithContext(context.Background())
}

func (i ProxyLBRuleArgs) ToProxyLBRuleOutputWithContext(ctx context.Context) ProxyLBRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBRuleOutput)
}

type ProxyLBRuleArrayInput interface {
	pulumi.Input

	ToProxyLBRuleArrayOutput() ProxyLBRuleArrayOutput
	ToProxyLBRuleArrayOutputWithContext(context.Context) ProxyLBRuleArrayOutput
}

type ProxyLBRuleArray []ProxyLBRuleInput

func (ProxyLBRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyLBRule)(nil)).Elem()
}

func (i ProxyLBRuleArray) ToProxyLBRuleArrayOutput() ProxyLBRuleArrayOutput {
	return i.ToProxyLBRuleArrayOutputWithContext(context.Background())
}

func (i ProxyLBRuleArray) ToProxyLBRuleArrayOutputWithContext(ctx context.Context) ProxyLBRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBRuleArrayOutput)
}

type ProxyLBRuleOutput struct { *pulumi.OutputState }

func (ProxyLBRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBRule)(nil)).Elem()
}

func (o ProxyLBRuleOutput) ToProxyLBRuleOutput() ProxyLBRuleOutput {
	return o
}

func (o ProxyLBRuleOutput) ToProxyLBRuleOutputWithContext(ctx context.Context) ProxyLBRuleOutput {
	return o
}

func (o ProxyLBRuleOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBRule) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o ProxyLBRuleOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBRule) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o ProxyLBRuleOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBRule) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ProxyLBRuleArrayOutput struct { *pulumi.OutputState}

func (ProxyLBRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyLBRule)(nil)).Elem()
}

func (o ProxyLBRuleArrayOutput) ToProxyLBRuleArrayOutput() ProxyLBRuleArrayOutput {
	return o
}

func (o ProxyLBRuleArrayOutput) ToProxyLBRuleArrayOutputWithContext(ctx context.Context) ProxyLBRuleArrayOutput {
	return o
}

func (o ProxyLBRuleArrayOutput) Index(i pulumi.IntInput) ProxyLBRuleOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ProxyLBRule {
		return vs[0].([]ProxyLBRule)[vs[1].(int)]
	}).(ProxyLBRuleOutput)
}

type ProxyLBServer struct {
	Enabled *bool `pulumi:"enabled"`
	Group *string `pulumi:"group"`
	IpAddress string `pulumi:"ipAddress"`
	Port int `pulumi:"port"`
}

type ProxyLBServerInput interface {
	pulumi.Input

	ToProxyLBServerOutput() ProxyLBServerOutput
	ToProxyLBServerOutputWithContext(context.Context) ProxyLBServerOutput
}

type ProxyLBServerArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	Group pulumi.StringPtrInput `pulumi:"group"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	Port pulumi.IntInput `pulumi:"port"`
}

func (ProxyLBServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBServer)(nil)).Elem()
}

func (i ProxyLBServerArgs) ToProxyLBServerOutput() ProxyLBServerOutput {
	return i.ToProxyLBServerOutputWithContext(context.Background())
}

func (i ProxyLBServerArgs) ToProxyLBServerOutputWithContext(ctx context.Context) ProxyLBServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBServerOutput)
}

type ProxyLBServerArrayInput interface {
	pulumi.Input

	ToProxyLBServerArrayOutput() ProxyLBServerArrayOutput
	ToProxyLBServerArrayOutputWithContext(context.Context) ProxyLBServerArrayOutput
}

type ProxyLBServerArray []ProxyLBServerInput

func (ProxyLBServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyLBServer)(nil)).Elem()
}

func (i ProxyLBServerArray) ToProxyLBServerArrayOutput() ProxyLBServerArrayOutput {
	return i.ToProxyLBServerArrayOutputWithContext(context.Background())
}

func (i ProxyLBServerArray) ToProxyLBServerArrayOutputWithContext(ctx context.Context) ProxyLBServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBServerArrayOutput)
}

type ProxyLBServerOutput struct { *pulumi.OutputState }

func (ProxyLBServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBServer)(nil)).Elem()
}

func (o ProxyLBServerOutput) ToProxyLBServerOutput() ProxyLBServerOutput {
	return o
}

func (o ProxyLBServerOutput) ToProxyLBServerOutputWithContext(ctx context.Context) ProxyLBServerOutput {
	return o
}

func (o ProxyLBServerOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ProxyLBServer) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o ProxyLBServerOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ProxyLBServer) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o ProxyLBServerOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v ProxyLBServer) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o ProxyLBServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func (v ProxyLBServer) int { return v.Port }).(pulumi.IntOutput)
}

type ProxyLBServerArrayOutput struct { *pulumi.OutputState}

func (ProxyLBServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyLBServer)(nil)).Elem()
}

func (o ProxyLBServerArrayOutput) ToProxyLBServerArrayOutput() ProxyLBServerArrayOutput {
	return o
}

func (o ProxyLBServerArrayOutput) ToProxyLBServerArrayOutputWithContext(ctx context.Context) ProxyLBServerArrayOutput {
	return o
}

func (o ProxyLBServerArrayOutput) Index(i pulumi.IntInput) ProxyLBServerOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ProxyLBServer {
		return vs[0].([]ProxyLBServer)[vs[1].(int)]
	}).(ProxyLBServerOutput)
}

type ProxyLBSorryServer struct {
	IpAddress string `pulumi:"ipAddress"`
	Port *int `pulumi:"port"`
}

type ProxyLBSorryServerInput interface {
	pulumi.Input

	ToProxyLBSorryServerOutput() ProxyLBSorryServerOutput
	ToProxyLBSorryServerOutputWithContext(context.Context) ProxyLBSorryServerOutput
}

type ProxyLBSorryServerArgs struct {
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ProxyLBSorryServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBSorryServer)(nil)).Elem()
}

func (i ProxyLBSorryServerArgs) ToProxyLBSorryServerOutput() ProxyLBSorryServerOutput {
	return i.ToProxyLBSorryServerOutputWithContext(context.Background())
}

func (i ProxyLBSorryServerArgs) ToProxyLBSorryServerOutputWithContext(ctx context.Context) ProxyLBSorryServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBSorryServerOutput)
}

func (i ProxyLBSorryServerArgs) ToProxyLBSorryServerPtrOutput() ProxyLBSorryServerPtrOutput {
	return i.ToProxyLBSorryServerPtrOutputWithContext(context.Background())
}

func (i ProxyLBSorryServerArgs) ToProxyLBSorryServerPtrOutputWithContext(ctx context.Context) ProxyLBSorryServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBSorryServerOutput).ToProxyLBSorryServerPtrOutputWithContext(ctx)
}

type ProxyLBSorryServerPtrInput interface {
	pulumi.Input

	ToProxyLBSorryServerPtrOutput() ProxyLBSorryServerPtrOutput
	ToProxyLBSorryServerPtrOutputWithContext(context.Context) ProxyLBSorryServerPtrOutput
}

type proxyLBSorryServerPtrType ProxyLBSorryServerArgs

func ProxyLBSorryServerPtr(v *ProxyLBSorryServerArgs) ProxyLBSorryServerPtrInput {	return (*proxyLBSorryServerPtrType)(v)
}

func (*proxyLBSorryServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyLBSorryServer)(nil)).Elem()
}

func (i *proxyLBSorryServerPtrType) ToProxyLBSorryServerPtrOutput() ProxyLBSorryServerPtrOutput {
	return i.ToProxyLBSorryServerPtrOutputWithContext(context.Background())
}

func (i *proxyLBSorryServerPtrType) ToProxyLBSorryServerPtrOutputWithContext(ctx context.Context) ProxyLBSorryServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyLBSorryServerPtrOutput)
}

type ProxyLBSorryServerOutput struct { *pulumi.OutputState }

func (ProxyLBSorryServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyLBSorryServer)(nil)).Elem()
}

func (o ProxyLBSorryServerOutput) ToProxyLBSorryServerOutput() ProxyLBSorryServerOutput {
	return o
}

func (o ProxyLBSorryServerOutput) ToProxyLBSorryServerOutputWithContext(ctx context.Context) ProxyLBSorryServerOutput {
	return o
}

func (o ProxyLBSorryServerOutput) ToProxyLBSorryServerPtrOutput() ProxyLBSorryServerPtrOutput {
	return o.ToProxyLBSorryServerPtrOutputWithContext(context.Background())
}

func (o ProxyLBSorryServerOutput) ToProxyLBSorryServerPtrOutputWithContext(ctx context.Context) ProxyLBSorryServerPtrOutput {
	return o.ApplyT(func(v ProxyLBSorryServer) *ProxyLBSorryServer {
		return &v
	}).(ProxyLBSorryServerPtrOutput)
}
func (o ProxyLBSorryServerOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v ProxyLBSorryServer) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o ProxyLBSorryServerOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ProxyLBSorryServer) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ProxyLBSorryServerPtrOutput struct { *pulumi.OutputState}

func (ProxyLBSorryServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyLBSorryServer)(nil)).Elem()
}

func (o ProxyLBSorryServerPtrOutput) ToProxyLBSorryServerPtrOutput() ProxyLBSorryServerPtrOutput {
	return o
}

func (o ProxyLBSorryServerPtrOutput) ToProxyLBSorryServerPtrOutputWithContext(ctx context.Context) ProxyLBSorryServerPtrOutput {
	return o
}

func (o ProxyLBSorryServerPtrOutput) Elem() ProxyLBSorryServerOutput {
	return o.ApplyT(func (v *ProxyLBSorryServer) ProxyLBSorryServer { return *v }).(ProxyLBSorryServerOutput)
}

func (o ProxyLBSorryServerPtrOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v ProxyLBSorryServer) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o ProxyLBSorryServerPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ProxyLBSorryServer) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ServerDiskEditParameter struct {
	ChangePartitionUuid *bool `pulumi:"changePartitionUuid"`
	DisablePwAuth *bool `pulumi:"disablePwAuth"`
	EnableDhcp *bool `pulumi:"enableDhcp"`
	Gateway *string `pulumi:"gateway"`
	Hostname *string `pulumi:"hostname"`
	IpAddress *string `pulumi:"ipAddress"`
	Netmask *int `pulumi:"netmask"`
	NoteIds []string `pulumi:"noteIds"`
	Notes []ServerDiskEditParameterNote `pulumi:"notes"`
	Password *string `pulumi:"password"`
	SshKeyIds []string `pulumi:"sshKeyIds"`
}

type ServerDiskEditParameterInput interface {
	pulumi.Input

	ToServerDiskEditParameterOutput() ServerDiskEditParameterOutput
	ToServerDiskEditParameterOutputWithContext(context.Context) ServerDiskEditParameterOutput
}

type ServerDiskEditParameterArgs struct {
	ChangePartitionUuid pulumi.BoolPtrInput `pulumi:"changePartitionUuid"`
	DisablePwAuth pulumi.BoolPtrInput `pulumi:"disablePwAuth"`
	EnableDhcp pulumi.BoolPtrInput `pulumi:"enableDhcp"`
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	IpAddress pulumi.StringPtrInput `pulumi:"ipAddress"`
	Netmask pulumi.IntPtrInput `pulumi:"netmask"`
	NoteIds pulumi.StringArrayInput `pulumi:"noteIds"`
	Notes ServerDiskEditParameterNoteArrayInput `pulumi:"notes"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	SshKeyIds pulumi.StringArrayInput `pulumi:"sshKeyIds"`
}

func (ServerDiskEditParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerDiskEditParameter)(nil)).Elem()
}

func (i ServerDiskEditParameterArgs) ToServerDiskEditParameterOutput() ServerDiskEditParameterOutput {
	return i.ToServerDiskEditParameterOutputWithContext(context.Background())
}

func (i ServerDiskEditParameterArgs) ToServerDiskEditParameterOutputWithContext(ctx context.Context) ServerDiskEditParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerDiskEditParameterOutput)
}

func (i ServerDiskEditParameterArgs) ToServerDiskEditParameterPtrOutput() ServerDiskEditParameterPtrOutput {
	return i.ToServerDiskEditParameterPtrOutputWithContext(context.Background())
}

func (i ServerDiskEditParameterArgs) ToServerDiskEditParameterPtrOutputWithContext(ctx context.Context) ServerDiskEditParameterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerDiskEditParameterOutput).ToServerDiskEditParameterPtrOutputWithContext(ctx)
}

type ServerDiskEditParameterPtrInput interface {
	pulumi.Input

	ToServerDiskEditParameterPtrOutput() ServerDiskEditParameterPtrOutput
	ToServerDiskEditParameterPtrOutputWithContext(context.Context) ServerDiskEditParameterPtrOutput
}

type serverDiskEditParameterPtrType ServerDiskEditParameterArgs

func ServerDiskEditParameterPtr(v *ServerDiskEditParameterArgs) ServerDiskEditParameterPtrInput {	return (*serverDiskEditParameterPtrType)(v)
}

func (*serverDiskEditParameterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerDiskEditParameter)(nil)).Elem()
}

func (i *serverDiskEditParameterPtrType) ToServerDiskEditParameterPtrOutput() ServerDiskEditParameterPtrOutput {
	return i.ToServerDiskEditParameterPtrOutputWithContext(context.Background())
}

func (i *serverDiskEditParameterPtrType) ToServerDiskEditParameterPtrOutputWithContext(ctx context.Context) ServerDiskEditParameterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerDiskEditParameterPtrOutput)
}

type ServerDiskEditParameterOutput struct { *pulumi.OutputState }

func (ServerDiskEditParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerDiskEditParameter)(nil)).Elem()
}

func (o ServerDiskEditParameterOutput) ToServerDiskEditParameterOutput() ServerDiskEditParameterOutput {
	return o
}

func (o ServerDiskEditParameterOutput) ToServerDiskEditParameterOutputWithContext(ctx context.Context) ServerDiskEditParameterOutput {
	return o
}

func (o ServerDiskEditParameterOutput) ToServerDiskEditParameterPtrOutput() ServerDiskEditParameterPtrOutput {
	return o.ToServerDiskEditParameterPtrOutputWithContext(context.Background())
}

func (o ServerDiskEditParameterOutput) ToServerDiskEditParameterPtrOutputWithContext(ctx context.Context) ServerDiskEditParameterPtrOutput {
	return o.ApplyT(func(v ServerDiskEditParameter) *ServerDiskEditParameter {
		return &v
	}).(ServerDiskEditParameterPtrOutput)
}
func (o ServerDiskEditParameterOutput) ChangePartitionUuid() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *bool { return v.ChangePartitionUuid }).(pulumi.BoolPtrOutput)
}

func (o ServerDiskEditParameterOutput) DisablePwAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *bool { return v.DisablePwAuth }).(pulumi.BoolPtrOutput)
}

func (o ServerDiskEditParameterOutput) EnableDhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *bool { return v.EnableDhcp }).(pulumi.BoolPtrOutput)
}

func (o ServerDiskEditParameterOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o ServerDiskEditParameterOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o ServerDiskEditParameterOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o ServerDiskEditParameterOutput) Netmask() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *int { return v.Netmask }).(pulumi.IntPtrOutput)
}

func (o ServerDiskEditParameterOutput) NoteIds() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) []string { return v.NoteIds }).(pulumi.StringArrayOutput)
}

func (o ServerDiskEditParameterOutput) Notes() ServerDiskEditParameterNoteArrayOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) []ServerDiskEditParameterNote { return v.Notes }).(ServerDiskEditParameterNoteArrayOutput)
}

func (o ServerDiskEditParameterOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ServerDiskEditParameterOutput) SshKeyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) []string { return v.SshKeyIds }).(pulumi.StringArrayOutput)
}

type ServerDiskEditParameterPtrOutput struct { *pulumi.OutputState}

func (ServerDiskEditParameterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerDiskEditParameter)(nil)).Elem()
}

func (o ServerDiskEditParameterPtrOutput) ToServerDiskEditParameterPtrOutput() ServerDiskEditParameterPtrOutput {
	return o
}

func (o ServerDiskEditParameterPtrOutput) ToServerDiskEditParameterPtrOutputWithContext(ctx context.Context) ServerDiskEditParameterPtrOutput {
	return o
}

func (o ServerDiskEditParameterPtrOutput) Elem() ServerDiskEditParameterOutput {
	return o.ApplyT(func (v *ServerDiskEditParameter) ServerDiskEditParameter { return *v }).(ServerDiskEditParameterOutput)
}

func (o ServerDiskEditParameterPtrOutput) ChangePartitionUuid() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *bool { return v.ChangePartitionUuid }).(pulumi.BoolPtrOutput)
}

func (o ServerDiskEditParameterPtrOutput) DisablePwAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *bool { return v.DisablePwAuth }).(pulumi.BoolPtrOutput)
}

func (o ServerDiskEditParameterPtrOutput) EnableDhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *bool { return v.EnableDhcp }).(pulumi.BoolPtrOutput)
}

func (o ServerDiskEditParameterPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

func (o ServerDiskEditParameterPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

func (o ServerDiskEditParameterPtrOutput) IpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *string { return v.IpAddress }).(pulumi.StringPtrOutput)
}

func (o ServerDiskEditParameterPtrOutput) Netmask() pulumi.IntPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *int { return v.Netmask }).(pulumi.IntPtrOutput)
}

func (o ServerDiskEditParameterPtrOutput) NoteIds() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) []string { return v.NoteIds }).(pulumi.StringArrayOutput)
}

func (o ServerDiskEditParameterPtrOutput) Notes() ServerDiskEditParameterNoteArrayOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) []ServerDiskEditParameterNote { return v.Notes }).(ServerDiskEditParameterNoteArrayOutput)
}

func (o ServerDiskEditParameterPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ServerDiskEditParameterPtrOutput) SshKeyIds() pulumi.StringArrayOutput {
	return o.ApplyT(func (v ServerDiskEditParameter) []string { return v.SshKeyIds }).(pulumi.StringArrayOutput)
}

type ServerDiskEditParameterNote struct {
	ApiKeyId *string `pulumi:"apiKeyId"`
	Id string `pulumi:"id"`
	Variables map[string]string `pulumi:"variables"`
}

type ServerDiskEditParameterNoteInput interface {
	pulumi.Input

	ToServerDiskEditParameterNoteOutput() ServerDiskEditParameterNoteOutput
	ToServerDiskEditParameterNoteOutputWithContext(context.Context) ServerDiskEditParameterNoteOutput
}

type ServerDiskEditParameterNoteArgs struct {
	ApiKeyId pulumi.StringPtrInput `pulumi:"apiKeyId"`
	Id pulumi.StringInput `pulumi:"id"`
	Variables pulumi.StringMapInput `pulumi:"variables"`
}

func (ServerDiskEditParameterNoteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerDiskEditParameterNote)(nil)).Elem()
}

func (i ServerDiskEditParameterNoteArgs) ToServerDiskEditParameterNoteOutput() ServerDiskEditParameterNoteOutput {
	return i.ToServerDiskEditParameterNoteOutputWithContext(context.Background())
}

func (i ServerDiskEditParameterNoteArgs) ToServerDiskEditParameterNoteOutputWithContext(ctx context.Context) ServerDiskEditParameterNoteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerDiskEditParameterNoteOutput)
}

type ServerDiskEditParameterNoteArrayInput interface {
	pulumi.Input

	ToServerDiskEditParameterNoteArrayOutput() ServerDiskEditParameterNoteArrayOutput
	ToServerDiskEditParameterNoteArrayOutputWithContext(context.Context) ServerDiskEditParameterNoteArrayOutput
}

type ServerDiskEditParameterNoteArray []ServerDiskEditParameterNoteInput

func (ServerDiskEditParameterNoteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerDiskEditParameterNote)(nil)).Elem()
}

func (i ServerDiskEditParameterNoteArray) ToServerDiskEditParameterNoteArrayOutput() ServerDiskEditParameterNoteArrayOutput {
	return i.ToServerDiskEditParameterNoteArrayOutputWithContext(context.Background())
}

func (i ServerDiskEditParameterNoteArray) ToServerDiskEditParameterNoteArrayOutputWithContext(ctx context.Context) ServerDiskEditParameterNoteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerDiskEditParameterNoteArrayOutput)
}

type ServerDiskEditParameterNoteOutput struct { *pulumi.OutputState }

func (ServerDiskEditParameterNoteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerDiskEditParameterNote)(nil)).Elem()
}

func (o ServerDiskEditParameterNoteOutput) ToServerDiskEditParameterNoteOutput() ServerDiskEditParameterNoteOutput {
	return o
}

func (o ServerDiskEditParameterNoteOutput) ToServerDiskEditParameterNoteOutputWithContext(ctx context.Context) ServerDiskEditParameterNoteOutput {
	return o
}

func (o ServerDiskEditParameterNoteOutput) ApiKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerDiskEditParameterNote) *string { return v.ApiKeyId }).(pulumi.StringPtrOutput)
}

func (o ServerDiskEditParameterNoteOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func (v ServerDiskEditParameterNote) string { return v.Id }).(pulumi.StringOutput)
}

func (o ServerDiskEditParameterNoteOutput) Variables() pulumi.StringMapOutput {
	return o.ApplyT(func (v ServerDiskEditParameterNote) map[string]string { return v.Variables }).(pulumi.StringMapOutput)
}

type ServerDiskEditParameterNoteArrayOutput struct { *pulumi.OutputState}

func (ServerDiskEditParameterNoteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerDiskEditParameterNote)(nil)).Elem()
}

func (o ServerDiskEditParameterNoteArrayOutput) ToServerDiskEditParameterNoteArrayOutput() ServerDiskEditParameterNoteArrayOutput {
	return o
}

func (o ServerDiskEditParameterNoteArrayOutput) ToServerDiskEditParameterNoteArrayOutputWithContext(ctx context.Context) ServerDiskEditParameterNoteArrayOutput {
	return o
}

func (o ServerDiskEditParameterNoteArrayOutput) Index(i pulumi.IntInput) ServerDiskEditParameterNoteOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ServerDiskEditParameterNote {
		return vs[0].([]ServerDiskEditParameterNote)[vs[1].(int)]
	}).(ServerDiskEditParameterNoteOutput)
}

type ServerNetworkInterface struct {
	MacAddress *string `pulumi:"macAddress"`
	PacketFilterId *string `pulumi:"packetFilterId"`
	Upstream string `pulumi:"upstream"`
	UserIpAddress *string `pulumi:"userIpAddress"`
}

type ServerNetworkInterfaceInput interface {
	pulumi.Input

	ToServerNetworkInterfaceOutput() ServerNetworkInterfaceOutput
	ToServerNetworkInterfaceOutputWithContext(context.Context) ServerNetworkInterfaceOutput
}

type ServerNetworkInterfaceArgs struct {
	MacAddress pulumi.StringPtrInput `pulumi:"macAddress"`
	PacketFilterId pulumi.StringPtrInput `pulumi:"packetFilterId"`
	Upstream pulumi.StringInput `pulumi:"upstream"`
	UserIpAddress pulumi.StringPtrInput `pulumi:"userIpAddress"`
}

func (ServerNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkInterface)(nil)).Elem()
}

func (i ServerNetworkInterfaceArgs) ToServerNetworkInterfaceOutput() ServerNetworkInterfaceOutput {
	return i.ToServerNetworkInterfaceOutputWithContext(context.Background())
}

func (i ServerNetworkInterfaceArgs) ToServerNetworkInterfaceOutputWithContext(ctx context.Context) ServerNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkInterfaceOutput)
}

type ServerNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToServerNetworkInterfaceArrayOutput() ServerNetworkInterfaceArrayOutput
	ToServerNetworkInterfaceArrayOutputWithContext(context.Context) ServerNetworkInterfaceArrayOutput
}

type ServerNetworkInterfaceArray []ServerNetworkInterfaceInput

func (ServerNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetworkInterface)(nil)).Elem()
}

func (i ServerNetworkInterfaceArray) ToServerNetworkInterfaceArrayOutput() ServerNetworkInterfaceArrayOutput {
	return i.ToServerNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i ServerNetworkInterfaceArray) ToServerNetworkInterfaceArrayOutputWithContext(ctx context.Context) ServerNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkInterfaceArrayOutput)
}

type ServerNetworkInterfaceOutput struct { *pulumi.OutputState }

func (ServerNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkInterface)(nil)).Elem()
}

func (o ServerNetworkInterfaceOutput) ToServerNetworkInterfaceOutput() ServerNetworkInterfaceOutput {
	return o
}

func (o ServerNetworkInterfaceOutput) ToServerNetworkInterfaceOutputWithContext(ctx context.Context) ServerNetworkInterfaceOutput {
	return o
}

func (o ServerNetworkInterfaceOutput) MacAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerNetworkInterface) *string { return v.MacAddress }).(pulumi.StringPtrOutput)
}

func (o ServerNetworkInterfaceOutput) PacketFilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerNetworkInterface) *string { return v.PacketFilterId }).(pulumi.StringPtrOutput)
}

func (o ServerNetworkInterfaceOutput) Upstream() pulumi.StringOutput {
	return o.ApplyT(func (v ServerNetworkInterface) string { return v.Upstream }).(pulumi.StringOutput)
}

func (o ServerNetworkInterfaceOutput) UserIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func (v ServerNetworkInterface) *string { return v.UserIpAddress }).(pulumi.StringPtrOutput)
}

type ServerNetworkInterfaceArrayOutput struct { *pulumi.OutputState}

func (ServerNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetworkInterface)(nil)).Elem()
}

func (o ServerNetworkInterfaceArrayOutput) ToServerNetworkInterfaceArrayOutput() ServerNetworkInterfaceArrayOutput {
	return o
}

func (o ServerNetworkInterfaceArrayOutput) ToServerNetworkInterfaceArrayOutputWithContext(ctx context.Context) ServerNetworkInterfaceArrayOutput {
	return o
}

func (o ServerNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) ServerNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) ServerNetworkInterface {
		return vs[0].([]ServerNetworkInterface)[vs[1].(int)]
	}).(ServerNetworkInterfaceOutput)
}

type SimpleMonitorHealthCheck struct {
	Community *string `pulumi:"community"`
	ExcepctedData *string `pulumi:"excepctedData"`
	HostHeader *string `pulumi:"hostHeader"`
	Oid *string `pulumi:"oid"`
	Password *string `pulumi:"password"`
	Path *string `pulumi:"path"`
	Port *int `pulumi:"port"`
	Protocol string `pulumi:"protocol"`
	Qname *string `pulumi:"qname"`
	RemainingDays *int `pulumi:"remainingDays"`
	Sni *bool `pulumi:"sni"`
	SnmpVersion *string `pulumi:"snmpVersion"`
	Status *int `pulumi:"status"`
	Username *string `pulumi:"username"`
}

type SimpleMonitorHealthCheckInput interface {
	pulumi.Input

	ToSimpleMonitorHealthCheckOutput() SimpleMonitorHealthCheckOutput
	ToSimpleMonitorHealthCheckOutputWithContext(context.Context) SimpleMonitorHealthCheckOutput
}

type SimpleMonitorHealthCheckArgs struct {
	Community pulumi.StringPtrInput `pulumi:"community"`
	ExcepctedData pulumi.StringPtrInput `pulumi:"excepctedData"`
	HostHeader pulumi.StringPtrInput `pulumi:"hostHeader"`
	Oid pulumi.StringPtrInput `pulumi:"oid"`
	Password pulumi.StringPtrInput `pulumi:"password"`
	Path pulumi.StringPtrInput `pulumi:"path"`
	Port pulumi.IntPtrInput `pulumi:"port"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	Qname pulumi.StringPtrInput `pulumi:"qname"`
	RemainingDays pulumi.IntPtrInput `pulumi:"remainingDays"`
	Sni pulumi.BoolPtrInput `pulumi:"sni"`
	SnmpVersion pulumi.StringPtrInput `pulumi:"snmpVersion"`
	Status pulumi.IntPtrInput `pulumi:"status"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (SimpleMonitorHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleMonitorHealthCheck)(nil)).Elem()
}

func (i SimpleMonitorHealthCheckArgs) ToSimpleMonitorHealthCheckOutput() SimpleMonitorHealthCheckOutput {
	return i.ToSimpleMonitorHealthCheckOutputWithContext(context.Background())
}

func (i SimpleMonitorHealthCheckArgs) ToSimpleMonitorHealthCheckOutputWithContext(ctx context.Context) SimpleMonitorHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleMonitorHealthCheckOutput)
}

func (i SimpleMonitorHealthCheckArgs) ToSimpleMonitorHealthCheckPtrOutput() SimpleMonitorHealthCheckPtrOutput {
	return i.ToSimpleMonitorHealthCheckPtrOutputWithContext(context.Background())
}

func (i SimpleMonitorHealthCheckArgs) ToSimpleMonitorHealthCheckPtrOutputWithContext(ctx context.Context) SimpleMonitorHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleMonitorHealthCheckOutput).ToSimpleMonitorHealthCheckPtrOutputWithContext(ctx)
}

type SimpleMonitorHealthCheckPtrInput interface {
	pulumi.Input

	ToSimpleMonitorHealthCheckPtrOutput() SimpleMonitorHealthCheckPtrOutput
	ToSimpleMonitorHealthCheckPtrOutputWithContext(context.Context) SimpleMonitorHealthCheckPtrOutput
}

type simpleMonitorHealthCheckPtrType SimpleMonitorHealthCheckArgs

func SimpleMonitorHealthCheckPtr(v *SimpleMonitorHealthCheckArgs) SimpleMonitorHealthCheckPtrInput {	return (*simpleMonitorHealthCheckPtrType)(v)
}

func (*simpleMonitorHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleMonitorHealthCheck)(nil)).Elem()
}

func (i *simpleMonitorHealthCheckPtrType) ToSimpleMonitorHealthCheckPtrOutput() SimpleMonitorHealthCheckPtrOutput {
	return i.ToSimpleMonitorHealthCheckPtrOutputWithContext(context.Background())
}

func (i *simpleMonitorHealthCheckPtrType) ToSimpleMonitorHealthCheckPtrOutputWithContext(ctx context.Context) SimpleMonitorHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SimpleMonitorHealthCheckPtrOutput)
}

type SimpleMonitorHealthCheckOutput struct { *pulumi.OutputState }

func (SimpleMonitorHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SimpleMonitorHealthCheck)(nil)).Elem()
}

func (o SimpleMonitorHealthCheckOutput) ToSimpleMonitorHealthCheckOutput() SimpleMonitorHealthCheckOutput {
	return o
}

func (o SimpleMonitorHealthCheckOutput) ToSimpleMonitorHealthCheckOutputWithContext(ctx context.Context) SimpleMonitorHealthCheckOutput {
	return o
}

func (o SimpleMonitorHealthCheckOutput) ToSimpleMonitorHealthCheckPtrOutput() SimpleMonitorHealthCheckPtrOutput {
	return o.ToSimpleMonitorHealthCheckPtrOutputWithContext(context.Background())
}

func (o SimpleMonitorHealthCheckOutput) ToSimpleMonitorHealthCheckPtrOutputWithContext(ctx context.Context) SimpleMonitorHealthCheckPtrOutput {
	return o.ApplyT(func(v SimpleMonitorHealthCheck) *SimpleMonitorHealthCheck {
		return &v
	}).(SimpleMonitorHealthCheckPtrOutput)
}
func (o SimpleMonitorHealthCheckOutput) Community() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.Community }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckOutput) ExcepctedData() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.ExcepctedData }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.HostHeader }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckOutput) Oid() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.Oid }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o SimpleMonitorHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o SimpleMonitorHealthCheckOutput) Qname() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.Qname }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckOutput) RemainingDays() pulumi.IntPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *int { return v.RemainingDays }).(pulumi.IntPtrOutput)
}

func (o SimpleMonitorHealthCheckOutput) Sni() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *bool { return v.Sni }).(pulumi.BoolPtrOutput)
}

func (o SimpleMonitorHealthCheckOutput) SnmpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.SnmpVersion }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *int { return v.Status }).(pulumi.IntPtrOutput)
}

func (o SimpleMonitorHealthCheckOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type SimpleMonitorHealthCheckPtrOutput struct { *pulumi.OutputState}

func (SimpleMonitorHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SimpleMonitorHealthCheck)(nil)).Elem()
}

func (o SimpleMonitorHealthCheckPtrOutput) ToSimpleMonitorHealthCheckPtrOutput() SimpleMonitorHealthCheckPtrOutput {
	return o
}

func (o SimpleMonitorHealthCheckPtrOutput) ToSimpleMonitorHealthCheckPtrOutputWithContext(ctx context.Context) SimpleMonitorHealthCheckPtrOutput {
	return o
}

func (o SimpleMonitorHealthCheckPtrOutput) Elem() SimpleMonitorHealthCheckOutput {
	return o.ApplyT(func (v *SimpleMonitorHealthCheck) SimpleMonitorHealthCheck { return *v }).(SimpleMonitorHealthCheckOutput)
}

func (o SimpleMonitorHealthCheckPtrOutput) Community() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.Community }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckPtrOutput) ExcepctedData() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.ExcepctedData }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckPtrOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.HostHeader }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckPtrOutput) Oid() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.Oid }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o SimpleMonitorHealthCheckPtrOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o SimpleMonitorHealthCheckPtrOutput) Qname() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.Qname }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckPtrOutput) RemainingDays() pulumi.IntPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *int { return v.RemainingDays }).(pulumi.IntPtrOutput)
}

func (o SimpleMonitorHealthCheckPtrOutput) Sni() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *bool { return v.Sni }).(pulumi.BoolPtrOutput)
}

func (o SimpleMonitorHealthCheckPtrOutput) SnmpVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.SnmpVersion }).(pulumi.StringPtrOutput)
}

func (o SimpleMonitorHealthCheckPtrOutput) Status() pulumi.IntPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *int { return v.Status }).(pulumi.IntPtrOutput)
}

func (o SimpleMonitorHealthCheckPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func (v SimpleMonitorHealthCheck) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type VPCRouterDhcpServer struct {
	DnsServers []string `pulumi:"dnsServers"`
	InterfaceIndex int `pulumi:"interfaceIndex"`
	RangeStart string `pulumi:"rangeStart"`
	RangeStop string `pulumi:"rangeStop"`
}

type VPCRouterDhcpServerInput interface {
	pulumi.Input

	ToVPCRouterDhcpServerOutput() VPCRouterDhcpServerOutput
	ToVPCRouterDhcpServerOutputWithContext(context.Context) VPCRouterDhcpServerOutput
}

type VPCRouterDhcpServerArgs struct {
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	InterfaceIndex pulumi.IntInput `pulumi:"interfaceIndex"`
	RangeStart pulumi.StringInput `pulumi:"rangeStart"`
	RangeStop pulumi.StringInput `pulumi:"rangeStop"`
}

func (VPCRouterDhcpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterDhcpServer)(nil)).Elem()
}

func (i VPCRouterDhcpServerArgs) ToVPCRouterDhcpServerOutput() VPCRouterDhcpServerOutput {
	return i.ToVPCRouterDhcpServerOutputWithContext(context.Background())
}

func (i VPCRouterDhcpServerArgs) ToVPCRouterDhcpServerOutputWithContext(ctx context.Context) VPCRouterDhcpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterDhcpServerOutput)
}

type VPCRouterDhcpServerArrayInput interface {
	pulumi.Input

	ToVPCRouterDhcpServerArrayOutput() VPCRouterDhcpServerArrayOutput
	ToVPCRouterDhcpServerArrayOutputWithContext(context.Context) VPCRouterDhcpServerArrayOutput
}

type VPCRouterDhcpServerArray []VPCRouterDhcpServerInput

func (VPCRouterDhcpServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterDhcpServer)(nil)).Elem()
}

func (i VPCRouterDhcpServerArray) ToVPCRouterDhcpServerArrayOutput() VPCRouterDhcpServerArrayOutput {
	return i.ToVPCRouterDhcpServerArrayOutputWithContext(context.Background())
}

func (i VPCRouterDhcpServerArray) ToVPCRouterDhcpServerArrayOutputWithContext(ctx context.Context) VPCRouterDhcpServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterDhcpServerArrayOutput)
}

type VPCRouterDhcpServerOutput struct { *pulumi.OutputState }

func (VPCRouterDhcpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterDhcpServer)(nil)).Elem()
}

func (o VPCRouterDhcpServerOutput) ToVPCRouterDhcpServerOutput() VPCRouterDhcpServerOutput {
	return o
}

func (o VPCRouterDhcpServerOutput) ToVPCRouterDhcpServerOutputWithContext(ctx context.Context) VPCRouterDhcpServerOutput {
	return o
}

func (o VPCRouterDhcpServerOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func (v VPCRouterDhcpServer) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

func (o VPCRouterDhcpServerOutput) InterfaceIndex() pulumi.IntOutput {
	return o.ApplyT(func (v VPCRouterDhcpServer) int { return v.InterfaceIndex }).(pulumi.IntOutput)
}

func (o VPCRouterDhcpServerOutput) RangeStart() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterDhcpServer) string { return v.RangeStart }).(pulumi.StringOutput)
}

func (o VPCRouterDhcpServerOutput) RangeStop() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterDhcpServer) string { return v.RangeStop }).(pulumi.StringOutput)
}

type VPCRouterDhcpServerArrayOutput struct { *pulumi.OutputState}

func (VPCRouterDhcpServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterDhcpServer)(nil)).Elem()
}

func (o VPCRouterDhcpServerArrayOutput) ToVPCRouterDhcpServerArrayOutput() VPCRouterDhcpServerArrayOutput {
	return o
}

func (o VPCRouterDhcpServerArrayOutput) ToVPCRouterDhcpServerArrayOutputWithContext(ctx context.Context) VPCRouterDhcpServerArrayOutput {
	return o
}

func (o VPCRouterDhcpServerArrayOutput) Index(i pulumi.IntInput) VPCRouterDhcpServerOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) VPCRouterDhcpServer {
		return vs[0].([]VPCRouterDhcpServer)[vs[1].(int)]
	}).(VPCRouterDhcpServerOutput)
}

type VPCRouterDhcpStaticMapping struct {
	IpAddress string `pulumi:"ipAddress"`
	MacAddress string `pulumi:"macAddress"`
}

type VPCRouterDhcpStaticMappingInput interface {
	pulumi.Input

	ToVPCRouterDhcpStaticMappingOutput() VPCRouterDhcpStaticMappingOutput
	ToVPCRouterDhcpStaticMappingOutputWithContext(context.Context) VPCRouterDhcpStaticMappingOutput
}

type VPCRouterDhcpStaticMappingArgs struct {
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
}

func (VPCRouterDhcpStaticMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterDhcpStaticMapping)(nil)).Elem()
}

func (i VPCRouterDhcpStaticMappingArgs) ToVPCRouterDhcpStaticMappingOutput() VPCRouterDhcpStaticMappingOutput {
	return i.ToVPCRouterDhcpStaticMappingOutputWithContext(context.Background())
}

func (i VPCRouterDhcpStaticMappingArgs) ToVPCRouterDhcpStaticMappingOutputWithContext(ctx context.Context) VPCRouterDhcpStaticMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterDhcpStaticMappingOutput)
}

type VPCRouterDhcpStaticMappingArrayInput interface {
	pulumi.Input

	ToVPCRouterDhcpStaticMappingArrayOutput() VPCRouterDhcpStaticMappingArrayOutput
	ToVPCRouterDhcpStaticMappingArrayOutputWithContext(context.Context) VPCRouterDhcpStaticMappingArrayOutput
}

type VPCRouterDhcpStaticMappingArray []VPCRouterDhcpStaticMappingInput

func (VPCRouterDhcpStaticMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterDhcpStaticMapping)(nil)).Elem()
}

func (i VPCRouterDhcpStaticMappingArray) ToVPCRouterDhcpStaticMappingArrayOutput() VPCRouterDhcpStaticMappingArrayOutput {
	return i.ToVPCRouterDhcpStaticMappingArrayOutputWithContext(context.Background())
}

func (i VPCRouterDhcpStaticMappingArray) ToVPCRouterDhcpStaticMappingArrayOutputWithContext(ctx context.Context) VPCRouterDhcpStaticMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterDhcpStaticMappingArrayOutput)
}

type VPCRouterDhcpStaticMappingOutput struct { *pulumi.OutputState }

func (VPCRouterDhcpStaticMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterDhcpStaticMapping)(nil)).Elem()
}

func (o VPCRouterDhcpStaticMappingOutput) ToVPCRouterDhcpStaticMappingOutput() VPCRouterDhcpStaticMappingOutput {
	return o
}

func (o VPCRouterDhcpStaticMappingOutput) ToVPCRouterDhcpStaticMappingOutputWithContext(ctx context.Context) VPCRouterDhcpStaticMappingOutput {
	return o
}

func (o VPCRouterDhcpStaticMappingOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterDhcpStaticMapping) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o VPCRouterDhcpStaticMappingOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterDhcpStaticMapping) string { return v.MacAddress }).(pulumi.StringOutput)
}

type VPCRouterDhcpStaticMappingArrayOutput struct { *pulumi.OutputState}

func (VPCRouterDhcpStaticMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterDhcpStaticMapping)(nil)).Elem()
}

func (o VPCRouterDhcpStaticMappingArrayOutput) ToVPCRouterDhcpStaticMappingArrayOutput() VPCRouterDhcpStaticMappingArrayOutput {
	return o
}

func (o VPCRouterDhcpStaticMappingArrayOutput) ToVPCRouterDhcpStaticMappingArrayOutputWithContext(ctx context.Context) VPCRouterDhcpStaticMappingArrayOutput {
	return o
}

func (o VPCRouterDhcpStaticMappingArrayOutput) Index(i pulumi.IntInput) VPCRouterDhcpStaticMappingOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) VPCRouterDhcpStaticMapping {
		return vs[0].([]VPCRouterDhcpStaticMapping)[vs[1].(int)]
	}).(VPCRouterDhcpStaticMappingOutput)
}

type VPCRouterFirewall struct {
	Direction string `pulumi:"direction"`
	Expressions []VPCRouterFirewallExpression `pulumi:"expressions"`
	InterfaceIndex *int `pulumi:"interfaceIndex"`
}

type VPCRouterFirewallInput interface {
	pulumi.Input

	ToVPCRouterFirewallOutput() VPCRouterFirewallOutput
	ToVPCRouterFirewallOutputWithContext(context.Context) VPCRouterFirewallOutput
}

type VPCRouterFirewallArgs struct {
	Direction pulumi.StringInput `pulumi:"direction"`
	Expressions VPCRouterFirewallExpressionArrayInput `pulumi:"expressions"`
	InterfaceIndex pulumi.IntPtrInput `pulumi:"interfaceIndex"`
}

func (VPCRouterFirewallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterFirewall)(nil)).Elem()
}

func (i VPCRouterFirewallArgs) ToVPCRouterFirewallOutput() VPCRouterFirewallOutput {
	return i.ToVPCRouterFirewallOutputWithContext(context.Background())
}

func (i VPCRouterFirewallArgs) ToVPCRouterFirewallOutputWithContext(ctx context.Context) VPCRouterFirewallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterFirewallOutput)
}

type VPCRouterFirewallArrayInput interface {
	pulumi.Input

	ToVPCRouterFirewallArrayOutput() VPCRouterFirewallArrayOutput
	ToVPCRouterFirewallArrayOutputWithContext(context.Context) VPCRouterFirewallArrayOutput
}

type VPCRouterFirewallArray []VPCRouterFirewallInput

func (VPCRouterFirewallArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterFirewall)(nil)).Elem()
}

func (i VPCRouterFirewallArray) ToVPCRouterFirewallArrayOutput() VPCRouterFirewallArrayOutput {
	return i.ToVPCRouterFirewallArrayOutputWithContext(context.Background())
}

func (i VPCRouterFirewallArray) ToVPCRouterFirewallArrayOutputWithContext(ctx context.Context) VPCRouterFirewallArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterFirewallArrayOutput)
}

type VPCRouterFirewallOutput struct { *pulumi.OutputState }

func (VPCRouterFirewallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterFirewall)(nil)).Elem()
}

func (o VPCRouterFirewallOutput) ToVPCRouterFirewallOutput() VPCRouterFirewallOutput {
	return o
}

func (o VPCRouterFirewallOutput) ToVPCRouterFirewallOutputWithContext(ctx context.Context) VPCRouterFirewallOutput {
	return o
}

func (o VPCRouterFirewallOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterFirewall) string { return v.Direction }).(pulumi.StringOutput)
}

func (o VPCRouterFirewallOutput) Expressions() VPCRouterFirewallExpressionArrayOutput {
	return o.ApplyT(func (v VPCRouterFirewall) []VPCRouterFirewallExpression { return v.Expressions }).(VPCRouterFirewallExpressionArrayOutput)
}

func (o VPCRouterFirewallOutput) InterfaceIndex() pulumi.IntPtrOutput {
	return o.ApplyT(func (v VPCRouterFirewall) *int { return v.InterfaceIndex }).(pulumi.IntPtrOutput)
}

type VPCRouterFirewallArrayOutput struct { *pulumi.OutputState}

func (VPCRouterFirewallArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterFirewall)(nil)).Elem()
}

func (o VPCRouterFirewallArrayOutput) ToVPCRouterFirewallArrayOutput() VPCRouterFirewallArrayOutput {
	return o
}

func (o VPCRouterFirewallArrayOutput) ToVPCRouterFirewallArrayOutputWithContext(ctx context.Context) VPCRouterFirewallArrayOutput {
	return o
}

func (o VPCRouterFirewallArrayOutput) Index(i pulumi.IntInput) VPCRouterFirewallOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) VPCRouterFirewall {
		return vs[0].([]VPCRouterFirewall)[vs[1].(int)]
	}).(VPCRouterFirewallOutput)
}

type VPCRouterFirewallExpression struct {
	Allow bool `pulumi:"allow"`
	Description *string `pulumi:"description"`
	DestinationNetwork *string `pulumi:"destinationNetwork"`
	DestinationPort *string `pulumi:"destinationPort"`
	Logging *bool `pulumi:"logging"`
	Protocol string `pulumi:"protocol"`
	SourceNetwork *string `pulumi:"sourceNetwork"`
	SourcePort *string `pulumi:"sourcePort"`
}

type VPCRouterFirewallExpressionInput interface {
	pulumi.Input

	ToVPCRouterFirewallExpressionOutput() VPCRouterFirewallExpressionOutput
	ToVPCRouterFirewallExpressionOutputWithContext(context.Context) VPCRouterFirewallExpressionOutput
}

type VPCRouterFirewallExpressionArgs struct {
	Allow pulumi.BoolInput `pulumi:"allow"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	DestinationNetwork pulumi.StringPtrInput `pulumi:"destinationNetwork"`
	DestinationPort pulumi.StringPtrInput `pulumi:"destinationPort"`
	Logging pulumi.BoolPtrInput `pulumi:"logging"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	SourceNetwork pulumi.StringPtrInput `pulumi:"sourceNetwork"`
	SourcePort pulumi.StringPtrInput `pulumi:"sourcePort"`
}

func (VPCRouterFirewallExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterFirewallExpression)(nil)).Elem()
}

func (i VPCRouterFirewallExpressionArgs) ToVPCRouterFirewallExpressionOutput() VPCRouterFirewallExpressionOutput {
	return i.ToVPCRouterFirewallExpressionOutputWithContext(context.Background())
}

func (i VPCRouterFirewallExpressionArgs) ToVPCRouterFirewallExpressionOutputWithContext(ctx context.Context) VPCRouterFirewallExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterFirewallExpressionOutput)
}

type VPCRouterFirewallExpressionArrayInput interface {
	pulumi.Input

	ToVPCRouterFirewallExpressionArrayOutput() VPCRouterFirewallExpressionArrayOutput
	ToVPCRouterFirewallExpressionArrayOutputWithContext(context.Context) VPCRouterFirewallExpressionArrayOutput
}

type VPCRouterFirewallExpressionArray []VPCRouterFirewallExpressionInput

func (VPCRouterFirewallExpressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterFirewallExpression)(nil)).Elem()
}

func (i VPCRouterFirewallExpressionArray) ToVPCRouterFirewallExpressionArrayOutput() VPCRouterFirewallExpressionArrayOutput {
	return i.ToVPCRouterFirewallExpressionArrayOutputWithContext(context.Background())
}

func (i VPCRouterFirewallExpressionArray) ToVPCRouterFirewallExpressionArrayOutputWithContext(ctx context.Context) VPCRouterFirewallExpressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterFirewallExpressionArrayOutput)
}

type VPCRouterFirewallExpressionOutput struct { *pulumi.OutputState }

func (VPCRouterFirewallExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterFirewallExpression)(nil)).Elem()
}

func (o VPCRouterFirewallExpressionOutput) ToVPCRouterFirewallExpressionOutput() VPCRouterFirewallExpressionOutput {
	return o
}

func (o VPCRouterFirewallExpressionOutput) ToVPCRouterFirewallExpressionOutputWithContext(ctx context.Context) VPCRouterFirewallExpressionOutput {
	return o
}

func (o VPCRouterFirewallExpressionOutput) Allow() pulumi.BoolOutput {
	return o.ApplyT(func (v VPCRouterFirewallExpression) bool { return v.Allow }).(pulumi.BoolOutput)
}

func (o VPCRouterFirewallExpressionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v VPCRouterFirewallExpression) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o VPCRouterFirewallExpressionOutput) DestinationNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func (v VPCRouterFirewallExpression) *string { return v.DestinationNetwork }).(pulumi.StringPtrOutput)
}

func (o VPCRouterFirewallExpressionOutput) DestinationPort() pulumi.StringPtrOutput {
	return o.ApplyT(func (v VPCRouterFirewallExpression) *string { return v.DestinationPort }).(pulumi.StringPtrOutput)
}

func (o VPCRouterFirewallExpressionOutput) Logging() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v VPCRouterFirewallExpression) *bool { return v.Logging }).(pulumi.BoolPtrOutput)
}

func (o VPCRouterFirewallExpressionOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterFirewallExpression) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o VPCRouterFirewallExpressionOutput) SourceNetwork() pulumi.StringPtrOutput {
	return o.ApplyT(func (v VPCRouterFirewallExpression) *string { return v.SourceNetwork }).(pulumi.StringPtrOutput)
}

func (o VPCRouterFirewallExpressionOutput) SourcePort() pulumi.StringPtrOutput {
	return o.ApplyT(func (v VPCRouterFirewallExpression) *string { return v.SourcePort }).(pulumi.StringPtrOutput)
}

type VPCRouterFirewallExpressionArrayOutput struct { *pulumi.OutputState}

func (VPCRouterFirewallExpressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterFirewallExpression)(nil)).Elem()
}

func (o VPCRouterFirewallExpressionArrayOutput) ToVPCRouterFirewallExpressionArrayOutput() VPCRouterFirewallExpressionArrayOutput {
	return o
}

func (o VPCRouterFirewallExpressionArrayOutput) ToVPCRouterFirewallExpressionArrayOutputWithContext(ctx context.Context) VPCRouterFirewallExpressionArrayOutput {
	return o
}

func (o VPCRouterFirewallExpressionArrayOutput) Index(i pulumi.IntInput) VPCRouterFirewallExpressionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) VPCRouterFirewallExpression {
		return vs[0].([]VPCRouterFirewallExpression)[vs[1].(int)]
	}).(VPCRouterFirewallExpressionOutput)
}

type VPCRouterL2tp struct {
	PreSharedSecret string `pulumi:"preSharedSecret"`
	RangeStart string `pulumi:"rangeStart"`
	RangeStop string `pulumi:"rangeStop"`
}

type VPCRouterL2tpInput interface {
	pulumi.Input

	ToVPCRouterL2tpOutput() VPCRouterL2tpOutput
	ToVPCRouterL2tpOutputWithContext(context.Context) VPCRouterL2tpOutput
}

type VPCRouterL2tpArgs struct {
	PreSharedSecret pulumi.StringInput `pulumi:"preSharedSecret"`
	RangeStart pulumi.StringInput `pulumi:"rangeStart"`
	RangeStop pulumi.StringInput `pulumi:"rangeStop"`
}

func (VPCRouterL2tpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterL2tp)(nil)).Elem()
}

func (i VPCRouterL2tpArgs) ToVPCRouterL2tpOutput() VPCRouterL2tpOutput {
	return i.ToVPCRouterL2tpOutputWithContext(context.Background())
}

func (i VPCRouterL2tpArgs) ToVPCRouterL2tpOutputWithContext(ctx context.Context) VPCRouterL2tpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterL2tpOutput)
}

func (i VPCRouterL2tpArgs) ToVPCRouterL2tpPtrOutput() VPCRouterL2tpPtrOutput {
	return i.ToVPCRouterL2tpPtrOutputWithContext(context.Background())
}

func (i VPCRouterL2tpArgs) ToVPCRouterL2tpPtrOutputWithContext(ctx context.Context) VPCRouterL2tpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterL2tpOutput).ToVPCRouterL2tpPtrOutputWithContext(ctx)
}

type VPCRouterL2tpPtrInput interface {
	pulumi.Input

	ToVPCRouterL2tpPtrOutput() VPCRouterL2tpPtrOutput
	ToVPCRouterL2tpPtrOutputWithContext(context.Context) VPCRouterL2tpPtrOutput
}

type vpcrouterL2tpPtrType VPCRouterL2tpArgs

func VPCRouterL2tpPtr(v *VPCRouterL2tpArgs) VPCRouterL2tpPtrInput {	return (*vpcrouterL2tpPtrType)(v)
}

func (*vpcrouterL2tpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VPCRouterL2tp)(nil)).Elem()
}

func (i *vpcrouterL2tpPtrType) ToVPCRouterL2tpPtrOutput() VPCRouterL2tpPtrOutput {
	return i.ToVPCRouterL2tpPtrOutputWithContext(context.Background())
}

func (i *vpcrouterL2tpPtrType) ToVPCRouterL2tpPtrOutputWithContext(ctx context.Context) VPCRouterL2tpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterL2tpPtrOutput)
}

type VPCRouterL2tpOutput struct { *pulumi.OutputState }

func (VPCRouterL2tpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterL2tp)(nil)).Elem()
}

func (o VPCRouterL2tpOutput) ToVPCRouterL2tpOutput() VPCRouterL2tpOutput {
	return o
}

func (o VPCRouterL2tpOutput) ToVPCRouterL2tpOutputWithContext(ctx context.Context) VPCRouterL2tpOutput {
	return o
}

func (o VPCRouterL2tpOutput) ToVPCRouterL2tpPtrOutput() VPCRouterL2tpPtrOutput {
	return o.ToVPCRouterL2tpPtrOutputWithContext(context.Background())
}

func (o VPCRouterL2tpOutput) ToVPCRouterL2tpPtrOutputWithContext(ctx context.Context) VPCRouterL2tpPtrOutput {
	return o.ApplyT(func(v VPCRouterL2tp) *VPCRouterL2tp {
		return &v
	}).(VPCRouterL2tpPtrOutput)
}
func (o VPCRouterL2tpOutput) PreSharedSecret() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterL2tp) string { return v.PreSharedSecret }).(pulumi.StringOutput)
}

func (o VPCRouterL2tpOutput) RangeStart() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterL2tp) string { return v.RangeStart }).(pulumi.StringOutput)
}

func (o VPCRouterL2tpOutput) RangeStop() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterL2tp) string { return v.RangeStop }).(pulumi.StringOutput)
}

type VPCRouterL2tpPtrOutput struct { *pulumi.OutputState}

func (VPCRouterL2tpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VPCRouterL2tp)(nil)).Elem()
}

func (o VPCRouterL2tpPtrOutput) ToVPCRouterL2tpPtrOutput() VPCRouterL2tpPtrOutput {
	return o
}

func (o VPCRouterL2tpPtrOutput) ToVPCRouterL2tpPtrOutputWithContext(ctx context.Context) VPCRouterL2tpPtrOutput {
	return o
}

func (o VPCRouterL2tpPtrOutput) Elem() VPCRouterL2tpOutput {
	return o.ApplyT(func (v *VPCRouterL2tp) VPCRouterL2tp { return *v }).(VPCRouterL2tpOutput)
}

func (o VPCRouterL2tpPtrOutput) PreSharedSecret() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterL2tp) string { return v.PreSharedSecret }).(pulumi.StringOutput)
}

func (o VPCRouterL2tpPtrOutput) RangeStart() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterL2tp) string { return v.RangeStart }).(pulumi.StringOutput)
}

func (o VPCRouterL2tpPtrOutput) RangeStop() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterL2tp) string { return v.RangeStop }).(pulumi.StringOutput)
}

type VPCRouterPortForwarding struct {
	Description *string `pulumi:"description"`
	PrivateIp string `pulumi:"privateIp"`
	PrivatePort int `pulumi:"privatePort"`
	Protocol string `pulumi:"protocol"`
	PublicPort int `pulumi:"publicPort"`
}

type VPCRouterPortForwardingInput interface {
	pulumi.Input

	ToVPCRouterPortForwardingOutput() VPCRouterPortForwardingOutput
	ToVPCRouterPortForwardingOutputWithContext(context.Context) VPCRouterPortForwardingOutput
}

type VPCRouterPortForwardingArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	PrivatePort pulumi.IntInput `pulumi:"privatePort"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	PublicPort pulumi.IntInput `pulumi:"publicPort"`
}

func (VPCRouterPortForwardingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterPortForwarding)(nil)).Elem()
}

func (i VPCRouterPortForwardingArgs) ToVPCRouterPortForwardingOutput() VPCRouterPortForwardingOutput {
	return i.ToVPCRouterPortForwardingOutputWithContext(context.Background())
}

func (i VPCRouterPortForwardingArgs) ToVPCRouterPortForwardingOutputWithContext(ctx context.Context) VPCRouterPortForwardingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterPortForwardingOutput)
}

type VPCRouterPortForwardingArrayInput interface {
	pulumi.Input

	ToVPCRouterPortForwardingArrayOutput() VPCRouterPortForwardingArrayOutput
	ToVPCRouterPortForwardingArrayOutputWithContext(context.Context) VPCRouterPortForwardingArrayOutput
}

type VPCRouterPortForwardingArray []VPCRouterPortForwardingInput

func (VPCRouterPortForwardingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterPortForwarding)(nil)).Elem()
}

func (i VPCRouterPortForwardingArray) ToVPCRouterPortForwardingArrayOutput() VPCRouterPortForwardingArrayOutput {
	return i.ToVPCRouterPortForwardingArrayOutputWithContext(context.Background())
}

func (i VPCRouterPortForwardingArray) ToVPCRouterPortForwardingArrayOutputWithContext(ctx context.Context) VPCRouterPortForwardingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterPortForwardingArrayOutput)
}

type VPCRouterPortForwardingOutput struct { *pulumi.OutputState }

func (VPCRouterPortForwardingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterPortForwarding)(nil)).Elem()
}

func (o VPCRouterPortForwardingOutput) ToVPCRouterPortForwardingOutput() VPCRouterPortForwardingOutput {
	return o
}

func (o VPCRouterPortForwardingOutput) ToVPCRouterPortForwardingOutputWithContext(ctx context.Context) VPCRouterPortForwardingOutput {
	return o
}

func (o VPCRouterPortForwardingOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v VPCRouterPortForwarding) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o VPCRouterPortForwardingOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterPortForwarding) string { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o VPCRouterPortForwardingOutput) PrivatePort() pulumi.IntOutput {
	return o.ApplyT(func (v VPCRouterPortForwarding) int { return v.PrivatePort }).(pulumi.IntOutput)
}

func (o VPCRouterPortForwardingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterPortForwarding) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o VPCRouterPortForwardingOutput) PublicPort() pulumi.IntOutput {
	return o.ApplyT(func (v VPCRouterPortForwarding) int { return v.PublicPort }).(pulumi.IntOutput)
}

type VPCRouterPortForwardingArrayOutput struct { *pulumi.OutputState}

func (VPCRouterPortForwardingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterPortForwarding)(nil)).Elem()
}

func (o VPCRouterPortForwardingArrayOutput) ToVPCRouterPortForwardingArrayOutput() VPCRouterPortForwardingArrayOutput {
	return o
}

func (o VPCRouterPortForwardingArrayOutput) ToVPCRouterPortForwardingArrayOutputWithContext(ctx context.Context) VPCRouterPortForwardingArrayOutput {
	return o
}

func (o VPCRouterPortForwardingArrayOutput) Index(i pulumi.IntInput) VPCRouterPortForwardingOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) VPCRouterPortForwarding {
		return vs[0].([]VPCRouterPortForwarding)[vs[1].(int)]
	}).(VPCRouterPortForwardingOutput)
}

type VPCRouterPptp struct {
	RangeStart string `pulumi:"rangeStart"`
	RangeStop string `pulumi:"rangeStop"`
}

type VPCRouterPptpInput interface {
	pulumi.Input

	ToVPCRouterPptpOutput() VPCRouterPptpOutput
	ToVPCRouterPptpOutputWithContext(context.Context) VPCRouterPptpOutput
}

type VPCRouterPptpArgs struct {
	RangeStart pulumi.StringInput `pulumi:"rangeStart"`
	RangeStop pulumi.StringInput `pulumi:"rangeStop"`
}

func (VPCRouterPptpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterPptp)(nil)).Elem()
}

func (i VPCRouterPptpArgs) ToVPCRouterPptpOutput() VPCRouterPptpOutput {
	return i.ToVPCRouterPptpOutputWithContext(context.Background())
}

func (i VPCRouterPptpArgs) ToVPCRouterPptpOutputWithContext(ctx context.Context) VPCRouterPptpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterPptpOutput)
}

func (i VPCRouterPptpArgs) ToVPCRouterPptpPtrOutput() VPCRouterPptpPtrOutput {
	return i.ToVPCRouterPptpPtrOutputWithContext(context.Background())
}

func (i VPCRouterPptpArgs) ToVPCRouterPptpPtrOutputWithContext(ctx context.Context) VPCRouterPptpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterPptpOutput).ToVPCRouterPptpPtrOutputWithContext(ctx)
}

type VPCRouterPptpPtrInput interface {
	pulumi.Input

	ToVPCRouterPptpPtrOutput() VPCRouterPptpPtrOutput
	ToVPCRouterPptpPtrOutputWithContext(context.Context) VPCRouterPptpPtrOutput
}

type vpcrouterPptpPtrType VPCRouterPptpArgs

func VPCRouterPptpPtr(v *VPCRouterPptpArgs) VPCRouterPptpPtrInput {	return (*vpcrouterPptpPtrType)(v)
}

func (*vpcrouterPptpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VPCRouterPptp)(nil)).Elem()
}

func (i *vpcrouterPptpPtrType) ToVPCRouterPptpPtrOutput() VPCRouterPptpPtrOutput {
	return i.ToVPCRouterPptpPtrOutputWithContext(context.Background())
}

func (i *vpcrouterPptpPtrType) ToVPCRouterPptpPtrOutputWithContext(ctx context.Context) VPCRouterPptpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterPptpPtrOutput)
}

type VPCRouterPptpOutput struct { *pulumi.OutputState }

func (VPCRouterPptpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterPptp)(nil)).Elem()
}

func (o VPCRouterPptpOutput) ToVPCRouterPptpOutput() VPCRouterPptpOutput {
	return o
}

func (o VPCRouterPptpOutput) ToVPCRouterPptpOutputWithContext(ctx context.Context) VPCRouterPptpOutput {
	return o
}

func (o VPCRouterPptpOutput) ToVPCRouterPptpPtrOutput() VPCRouterPptpPtrOutput {
	return o.ToVPCRouterPptpPtrOutputWithContext(context.Background())
}

func (o VPCRouterPptpOutput) ToVPCRouterPptpPtrOutputWithContext(ctx context.Context) VPCRouterPptpPtrOutput {
	return o.ApplyT(func(v VPCRouterPptp) *VPCRouterPptp {
		return &v
	}).(VPCRouterPptpPtrOutput)
}
func (o VPCRouterPptpOutput) RangeStart() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterPptp) string { return v.RangeStart }).(pulumi.StringOutput)
}

func (o VPCRouterPptpOutput) RangeStop() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterPptp) string { return v.RangeStop }).(pulumi.StringOutput)
}

type VPCRouterPptpPtrOutput struct { *pulumi.OutputState}

func (VPCRouterPptpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VPCRouterPptp)(nil)).Elem()
}

func (o VPCRouterPptpPtrOutput) ToVPCRouterPptpPtrOutput() VPCRouterPptpPtrOutput {
	return o
}

func (o VPCRouterPptpPtrOutput) ToVPCRouterPptpPtrOutputWithContext(ctx context.Context) VPCRouterPptpPtrOutput {
	return o
}

func (o VPCRouterPptpPtrOutput) Elem() VPCRouterPptpOutput {
	return o.ApplyT(func (v *VPCRouterPptp) VPCRouterPptp { return *v }).(VPCRouterPptpOutput)
}

func (o VPCRouterPptpPtrOutput) RangeStart() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterPptp) string { return v.RangeStart }).(pulumi.StringOutput)
}

func (o VPCRouterPptpPtrOutput) RangeStop() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterPptp) string { return v.RangeStop }).(pulumi.StringOutput)
}

type VPCRouterPrivateNetworkInterface struct {
	Index int `pulumi:"index"`
	IpAddresses []string `pulumi:"ipAddresses"`
	Netmask int `pulumi:"netmask"`
	SwitchId string `pulumi:"switchId"`
	Vip *string `pulumi:"vip"`
}

type VPCRouterPrivateNetworkInterfaceInput interface {
	pulumi.Input

	ToVPCRouterPrivateNetworkInterfaceOutput() VPCRouterPrivateNetworkInterfaceOutput
	ToVPCRouterPrivateNetworkInterfaceOutputWithContext(context.Context) VPCRouterPrivateNetworkInterfaceOutput
}

type VPCRouterPrivateNetworkInterfaceArgs struct {
	Index pulumi.IntInput `pulumi:"index"`
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	Netmask pulumi.IntInput `pulumi:"netmask"`
	SwitchId pulumi.StringInput `pulumi:"switchId"`
	Vip pulumi.StringPtrInput `pulumi:"vip"`
}

func (VPCRouterPrivateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterPrivateNetworkInterface)(nil)).Elem()
}

func (i VPCRouterPrivateNetworkInterfaceArgs) ToVPCRouterPrivateNetworkInterfaceOutput() VPCRouterPrivateNetworkInterfaceOutput {
	return i.ToVPCRouterPrivateNetworkInterfaceOutputWithContext(context.Background())
}

func (i VPCRouterPrivateNetworkInterfaceArgs) ToVPCRouterPrivateNetworkInterfaceOutputWithContext(ctx context.Context) VPCRouterPrivateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterPrivateNetworkInterfaceOutput)
}

type VPCRouterPrivateNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToVPCRouterPrivateNetworkInterfaceArrayOutput() VPCRouterPrivateNetworkInterfaceArrayOutput
	ToVPCRouterPrivateNetworkInterfaceArrayOutputWithContext(context.Context) VPCRouterPrivateNetworkInterfaceArrayOutput
}

type VPCRouterPrivateNetworkInterfaceArray []VPCRouterPrivateNetworkInterfaceInput

func (VPCRouterPrivateNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterPrivateNetworkInterface)(nil)).Elem()
}

func (i VPCRouterPrivateNetworkInterfaceArray) ToVPCRouterPrivateNetworkInterfaceArrayOutput() VPCRouterPrivateNetworkInterfaceArrayOutput {
	return i.ToVPCRouterPrivateNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i VPCRouterPrivateNetworkInterfaceArray) ToVPCRouterPrivateNetworkInterfaceArrayOutputWithContext(ctx context.Context) VPCRouterPrivateNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterPrivateNetworkInterfaceArrayOutput)
}

type VPCRouterPrivateNetworkInterfaceOutput struct { *pulumi.OutputState }

func (VPCRouterPrivateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterPrivateNetworkInterface)(nil)).Elem()
}

func (o VPCRouterPrivateNetworkInterfaceOutput) ToVPCRouterPrivateNetworkInterfaceOutput() VPCRouterPrivateNetworkInterfaceOutput {
	return o
}

func (o VPCRouterPrivateNetworkInterfaceOutput) ToVPCRouterPrivateNetworkInterfaceOutputWithContext(ctx context.Context) VPCRouterPrivateNetworkInterfaceOutput {
	return o
}

func (o VPCRouterPrivateNetworkInterfaceOutput) Index() pulumi.IntOutput {
	return o.ApplyT(func (v VPCRouterPrivateNetworkInterface) int { return v.Index }).(pulumi.IntOutput)
}

func (o VPCRouterPrivateNetworkInterfaceOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func (v VPCRouterPrivateNetworkInterface) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o VPCRouterPrivateNetworkInterfaceOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v VPCRouterPrivateNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o VPCRouterPrivateNetworkInterfaceOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterPrivateNetworkInterface) string { return v.SwitchId }).(pulumi.StringOutput)
}

func (o VPCRouterPrivateNetworkInterfaceOutput) Vip() pulumi.StringPtrOutput {
	return o.ApplyT(func (v VPCRouterPrivateNetworkInterface) *string { return v.Vip }).(pulumi.StringPtrOutput)
}

type VPCRouterPrivateNetworkInterfaceArrayOutput struct { *pulumi.OutputState}

func (VPCRouterPrivateNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterPrivateNetworkInterface)(nil)).Elem()
}

func (o VPCRouterPrivateNetworkInterfaceArrayOutput) ToVPCRouterPrivateNetworkInterfaceArrayOutput() VPCRouterPrivateNetworkInterfaceArrayOutput {
	return o
}

func (o VPCRouterPrivateNetworkInterfaceArrayOutput) ToVPCRouterPrivateNetworkInterfaceArrayOutputWithContext(ctx context.Context) VPCRouterPrivateNetworkInterfaceArrayOutput {
	return o
}

func (o VPCRouterPrivateNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) VPCRouterPrivateNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) VPCRouterPrivateNetworkInterface {
		return vs[0].([]VPCRouterPrivateNetworkInterface)[vs[1].(int)]
	}).(VPCRouterPrivateNetworkInterfaceOutput)
}

type VPCRouterPublicNetworkInterface struct {
	Aliases []string `pulumi:"aliases"`
	IpAddresses []string `pulumi:"ipAddresses"`
	SwitchId *string `pulumi:"switchId"`
	Vip *string `pulumi:"vip"`
	Vrid *int `pulumi:"vrid"`
}

type VPCRouterPublicNetworkInterfaceInput interface {
	pulumi.Input

	ToVPCRouterPublicNetworkInterfaceOutput() VPCRouterPublicNetworkInterfaceOutput
	ToVPCRouterPublicNetworkInterfaceOutputWithContext(context.Context) VPCRouterPublicNetworkInterfaceOutput
}

type VPCRouterPublicNetworkInterfaceArgs struct {
	Aliases pulumi.StringArrayInput `pulumi:"aliases"`
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	SwitchId pulumi.StringPtrInput `pulumi:"switchId"`
	Vip pulumi.StringPtrInput `pulumi:"vip"`
	Vrid pulumi.IntPtrInput `pulumi:"vrid"`
}

func (VPCRouterPublicNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterPublicNetworkInterface)(nil)).Elem()
}

func (i VPCRouterPublicNetworkInterfaceArgs) ToVPCRouterPublicNetworkInterfaceOutput() VPCRouterPublicNetworkInterfaceOutput {
	return i.ToVPCRouterPublicNetworkInterfaceOutputWithContext(context.Background())
}

func (i VPCRouterPublicNetworkInterfaceArgs) ToVPCRouterPublicNetworkInterfaceOutputWithContext(ctx context.Context) VPCRouterPublicNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterPublicNetworkInterfaceOutput)
}

func (i VPCRouterPublicNetworkInterfaceArgs) ToVPCRouterPublicNetworkInterfacePtrOutput() VPCRouterPublicNetworkInterfacePtrOutput {
	return i.ToVPCRouterPublicNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i VPCRouterPublicNetworkInterfaceArgs) ToVPCRouterPublicNetworkInterfacePtrOutputWithContext(ctx context.Context) VPCRouterPublicNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterPublicNetworkInterfaceOutput).ToVPCRouterPublicNetworkInterfacePtrOutputWithContext(ctx)
}

type VPCRouterPublicNetworkInterfacePtrInput interface {
	pulumi.Input

	ToVPCRouterPublicNetworkInterfacePtrOutput() VPCRouterPublicNetworkInterfacePtrOutput
	ToVPCRouterPublicNetworkInterfacePtrOutputWithContext(context.Context) VPCRouterPublicNetworkInterfacePtrOutput
}

type vpcrouterPublicNetworkInterfacePtrType VPCRouterPublicNetworkInterfaceArgs

func VPCRouterPublicNetworkInterfacePtr(v *VPCRouterPublicNetworkInterfaceArgs) VPCRouterPublicNetworkInterfacePtrInput {	return (*vpcrouterPublicNetworkInterfacePtrType)(v)
}

func (*vpcrouterPublicNetworkInterfacePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VPCRouterPublicNetworkInterface)(nil)).Elem()
}

func (i *vpcrouterPublicNetworkInterfacePtrType) ToVPCRouterPublicNetworkInterfacePtrOutput() VPCRouterPublicNetworkInterfacePtrOutput {
	return i.ToVPCRouterPublicNetworkInterfacePtrOutputWithContext(context.Background())
}

func (i *vpcrouterPublicNetworkInterfacePtrType) ToVPCRouterPublicNetworkInterfacePtrOutputWithContext(ctx context.Context) VPCRouterPublicNetworkInterfacePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterPublicNetworkInterfacePtrOutput)
}

type VPCRouterPublicNetworkInterfaceOutput struct { *pulumi.OutputState }

func (VPCRouterPublicNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterPublicNetworkInterface)(nil)).Elem()
}

func (o VPCRouterPublicNetworkInterfaceOutput) ToVPCRouterPublicNetworkInterfaceOutput() VPCRouterPublicNetworkInterfaceOutput {
	return o
}

func (o VPCRouterPublicNetworkInterfaceOutput) ToVPCRouterPublicNetworkInterfaceOutputWithContext(ctx context.Context) VPCRouterPublicNetworkInterfaceOutput {
	return o
}

func (o VPCRouterPublicNetworkInterfaceOutput) ToVPCRouterPublicNetworkInterfacePtrOutput() VPCRouterPublicNetworkInterfacePtrOutput {
	return o.ToVPCRouterPublicNetworkInterfacePtrOutputWithContext(context.Background())
}

func (o VPCRouterPublicNetworkInterfaceOutput) ToVPCRouterPublicNetworkInterfacePtrOutputWithContext(ctx context.Context) VPCRouterPublicNetworkInterfacePtrOutput {
	return o.ApplyT(func(v VPCRouterPublicNetworkInterface) *VPCRouterPublicNetworkInterface {
		return &v
	}).(VPCRouterPublicNetworkInterfacePtrOutput)
}
func (o VPCRouterPublicNetworkInterfaceOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func (v VPCRouterPublicNetworkInterface) []string { return v.Aliases }).(pulumi.StringArrayOutput)
}

func (o VPCRouterPublicNetworkInterfaceOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func (v VPCRouterPublicNetworkInterface) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o VPCRouterPublicNetworkInterfaceOutput) SwitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v VPCRouterPublicNetworkInterface) *string { return v.SwitchId }).(pulumi.StringPtrOutput)
}

func (o VPCRouterPublicNetworkInterfaceOutput) Vip() pulumi.StringPtrOutput {
	return o.ApplyT(func (v VPCRouterPublicNetworkInterface) *string { return v.Vip }).(pulumi.StringPtrOutput)
}

func (o VPCRouterPublicNetworkInterfaceOutput) Vrid() pulumi.IntPtrOutput {
	return o.ApplyT(func (v VPCRouterPublicNetworkInterface) *int { return v.Vrid }).(pulumi.IntPtrOutput)
}

type VPCRouterPublicNetworkInterfacePtrOutput struct { *pulumi.OutputState}

func (VPCRouterPublicNetworkInterfacePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VPCRouterPublicNetworkInterface)(nil)).Elem()
}

func (o VPCRouterPublicNetworkInterfacePtrOutput) ToVPCRouterPublicNetworkInterfacePtrOutput() VPCRouterPublicNetworkInterfacePtrOutput {
	return o
}

func (o VPCRouterPublicNetworkInterfacePtrOutput) ToVPCRouterPublicNetworkInterfacePtrOutputWithContext(ctx context.Context) VPCRouterPublicNetworkInterfacePtrOutput {
	return o
}

func (o VPCRouterPublicNetworkInterfacePtrOutput) Elem() VPCRouterPublicNetworkInterfaceOutput {
	return o.ApplyT(func (v *VPCRouterPublicNetworkInterface) VPCRouterPublicNetworkInterface { return *v }).(VPCRouterPublicNetworkInterfaceOutput)
}

func (o VPCRouterPublicNetworkInterfacePtrOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func (v VPCRouterPublicNetworkInterface) []string { return v.Aliases }).(pulumi.StringArrayOutput)
}

func (o VPCRouterPublicNetworkInterfacePtrOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func (v VPCRouterPublicNetworkInterface) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o VPCRouterPublicNetworkInterfacePtrOutput) SwitchId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v VPCRouterPublicNetworkInterface) *string { return v.SwitchId }).(pulumi.StringPtrOutput)
}

func (o VPCRouterPublicNetworkInterfacePtrOutput) Vip() pulumi.StringPtrOutput {
	return o.ApplyT(func (v VPCRouterPublicNetworkInterface) *string { return v.Vip }).(pulumi.StringPtrOutput)
}

func (o VPCRouterPublicNetworkInterfacePtrOutput) Vrid() pulumi.IntPtrOutput {
	return o.ApplyT(func (v VPCRouterPublicNetworkInterface) *int { return v.Vrid }).(pulumi.IntPtrOutput)
}

type VPCRouterSiteToSiteVpn struct {
	LocalPrefixes []string `pulumi:"localPrefixes"`
	Peer string `pulumi:"peer"`
	PreSharedSecret string `pulumi:"preSharedSecret"`
	RemoteId string `pulumi:"remoteId"`
	Routes []string `pulumi:"routes"`
}

type VPCRouterSiteToSiteVpnInput interface {
	pulumi.Input

	ToVPCRouterSiteToSiteVpnOutput() VPCRouterSiteToSiteVpnOutput
	ToVPCRouterSiteToSiteVpnOutputWithContext(context.Context) VPCRouterSiteToSiteVpnOutput
}

type VPCRouterSiteToSiteVpnArgs struct {
	LocalPrefixes pulumi.StringArrayInput `pulumi:"localPrefixes"`
	Peer pulumi.StringInput `pulumi:"peer"`
	PreSharedSecret pulumi.StringInput `pulumi:"preSharedSecret"`
	RemoteId pulumi.StringInput `pulumi:"remoteId"`
	Routes pulumi.StringArrayInput `pulumi:"routes"`
}

func (VPCRouterSiteToSiteVpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterSiteToSiteVpn)(nil)).Elem()
}

func (i VPCRouterSiteToSiteVpnArgs) ToVPCRouterSiteToSiteVpnOutput() VPCRouterSiteToSiteVpnOutput {
	return i.ToVPCRouterSiteToSiteVpnOutputWithContext(context.Background())
}

func (i VPCRouterSiteToSiteVpnArgs) ToVPCRouterSiteToSiteVpnOutputWithContext(ctx context.Context) VPCRouterSiteToSiteVpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterSiteToSiteVpnOutput)
}

type VPCRouterSiteToSiteVpnArrayInput interface {
	pulumi.Input

	ToVPCRouterSiteToSiteVpnArrayOutput() VPCRouterSiteToSiteVpnArrayOutput
	ToVPCRouterSiteToSiteVpnArrayOutputWithContext(context.Context) VPCRouterSiteToSiteVpnArrayOutput
}

type VPCRouterSiteToSiteVpnArray []VPCRouterSiteToSiteVpnInput

func (VPCRouterSiteToSiteVpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterSiteToSiteVpn)(nil)).Elem()
}

func (i VPCRouterSiteToSiteVpnArray) ToVPCRouterSiteToSiteVpnArrayOutput() VPCRouterSiteToSiteVpnArrayOutput {
	return i.ToVPCRouterSiteToSiteVpnArrayOutputWithContext(context.Background())
}

func (i VPCRouterSiteToSiteVpnArray) ToVPCRouterSiteToSiteVpnArrayOutputWithContext(ctx context.Context) VPCRouterSiteToSiteVpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterSiteToSiteVpnArrayOutput)
}

type VPCRouterSiteToSiteVpnOutput struct { *pulumi.OutputState }

func (VPCRouterSiteToSiteVpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterSiteToSiteVpn)(nil)).Elem()
}

func (o VPCRouterSiteToSiteVpnOutput) ToVPCRouterSiteToSiteVpnOutput() VPCRouterSiteToSiteVpnOutput {
	return o
}

func (o VPCRouterSiteToSiteVpnOutput) ToVPCRouterSiteToSiteVpnOutputWithContext(ctx context.Context) VPCRouterSiteToSiteVpnOutput {
	return o
}

func (o VPCRouterSiteToSiteVpnOutput) LocalPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func (v VPCRouterSiteToSiteVpn) []string { return v.LocalPrefixes }).(pulumi.StringArrayOutput)
}

func (o VPCRouterSiteToSiteVpnOutput) Peer() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterSiteToSiteVpn) string { return v.Peer }).(pulumi.StringOutput)
}

func (o VPCRouterSiteToSiteVpnOutput) PreSharedSecret() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterSiteToSiteVpn) string { return v.PreSharedSecret }).(pulumi.StringOutput)
}

func (o VPCRouterSiteToSiteVpnOutput) RemoteId() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterSiteToSiteVpn) string { return v.RemoteId }).(pulumi.StringOutput)
}

func (o VPCRouterSiteToSiteVpnOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func (v VPCRouterSiteToSiteVpn) []string { return v.Routes }).(pulumi.StringArrayOutput)
}

type VPCRouterSiteToSiteVpnArrayOutput struct { *pulumi.OutputState}

func (VPCRouterSiteToSiteVpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterSiteToSiteVpn)(nil)).Elem()
}

func (o VPCRouterSiteToSiteVpnArrayOutput) ToVPCRouterSiteToSiteVpnArrayOutput() VPCRouterSiteToSiteVpnArrayOutput {
	return o
}

func (o VPCRouterSiteToSiteVpnArrayOutput) ToVPCRouterSiteToSiteVpnArrayOutputWithContext(ctx context.Context) VPCRouterSiteToSiteVpnArrayOutput {
	return o
}

func (o VPCRouterSiteToSiteVpnArrayOutput) Index(i pulumi.IntInput) VPCRouterSiteToSiteVpnOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) VPCRouterSiteToSiteVpn {
		return vs[0].([]VPCRouterSiteToSiteVpn)[vs[1].(int)]
	}).(VPCRouterSiteToSiteVpnOutput)
}

type VPCRouterStaticNat struct {
	Description *string `pulumi:"description"`
	PrivateIp string `pulumi:"privateIp"`
	PublicIp string `pulumi:"publicIp"`
}

type VPCRouterStaticNatInput interface {
	pulumi.Input

	ToVPCRouterStaticNatOutput() VPCRouterStaticNatOutput
	ToVPCRouterStaticNatOutputWithContext(context.Context) VPCRouterStaticNatOutput
}

type VPCRouterStaticNatArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
}

func (VPCRouterStaticNatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterStaticNat)(nil)).Elem()
}

func (i VPCRouterStaticNatArgs) ToVPCRouterStaticNatOutput() VPCRouterStaticNatOutput {
	return i.ToVPCRouterStaticNatOutputWithContext(context.Background())
}

func (i VPCRouterStaticNatArgs) ToVPCRouterStaticNatOutputWithContext(ctx context.Context) VPCRouterStaticNatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterStaticNatOutput)
}

type VPCRouterStaticNatArrayInput interface {
	pulumi.Input

	ToVPCRouterStaticNatArrayOutput() VPCRouterStaticNatArrayOutput
	ToVPCRouterStaticNatArrayOutputWithContext(context.Context) VPCRouterStaticNatArrayOutput
}

type VPCRouterStaticNatArray []VPCRouterStaticNatInput

func (VPCRouterStaticNatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterStaticNat)(nil)).Elem()
}

func (i VPCRouterStaticNatArray) ToVPCRouterStaticNatArrayOutput() VPCRouterStaticNatArrayOutput {
	return i.ToVPCRouterStaticNatArrayOutputWithContext(context.Background())
}

func (i VPCRouterStaticNatArray) ToVPCRouterStaticNatArrayOutputWithContext(ctx context.Context) VPCRouterStaticNatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterStaticNatArrayOutput)
}

type VPCRouterStaticNatOutput struct { *pulumi.OutputState }

func (VPCRouterStaticNatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterStaticNat)(nil)).Elem()
}

func (o VPCRouterStaticNatOutput) ToVPCRouterStaticNatOutput() VPCRouterStaticNatOutput {
	return o
}

func (o VPCRouterStaticNatOutput) ToVPCRouterStaticNatOutputWithContext(ctx context.Context) VPCRouterStaticNatOutput {
	return o
}

func (o VPCRouterStaticNatOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func (v VPCRouterStaticNat) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o VPCRouterStaticNatOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterStaticNat) string { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o VPCRouterStaticNatOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterStaticNat) string { return v.PublicIp }).(pulumi.StringOutput)
}

type VPCRouterStaticNatArrayOutput struct { *pulumi.OutputState}

func (VPCRouterStaticNatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterStaticNat)(nil)).Elem()
}

func (o VPCRouterStaticNatArrayOutput) ToVPCRouterStaticNatArrayOutput() VPCRouterStaticNatArrayOutput {
	return o
}

func (o VPCRouterStaticNatArrayOutput) ToVPCRouterStaticNatArrayOutputWithContext(ctx context.Context) VPCRouterStaticNatArrayOutput {
	return o
}

func (o VPCRouterStaticNatArrayOutput) Index(i pulumi.IntInput) VPCRouterStaticNatOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) VPCRouterStaticNat {
		return vs[0].([]VPCRouterStaticNat)[vs[1].(int)]
	}).(VPCRouterStaticNatOutput)
}

type VPCRouterStaticRoute struct {
	NextHop string `pulumi:"nextHop"`
	Prefix string `pulumi:"prefix"`
}

type VPCRouterStaticRouteInput interface {
	pulumi.Input

	ToVPCRouterStaticRouteOutput() VPCRouterStaticRouteOutput
	ToVPCRouterStaticRouteOutputWithContext(context.Context) VPCRouterStaticRouteOutput
}

type VPCRouterStaticRouteArgs struct {
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (VPCRouterStaticRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterStaticRoute)(nil)).Elem()
}

func (i VPCRouterStaticRouteArgs) ToVPCRouterStaticRouteOutput() VPCRouterStaticRouteOutput {
	return i.ToVPCRouterStaticRouteOutputWithContext(context.Background())
}

func (i VPCRouterStaticRouteArgs) ToVPCRouterStaticRouteOutputWithContext(ctx context.Context) VPCRouterStaticRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterStaticRouteOutput)
}

type VPCRouterStaticRouteArrayInput interface {
	pulumi.Input

	ToVPCRouterStaticRouteArrayOutput() VPCRouterStaticRouteArrayOutput
	ToVPCRouterStaticRouteArrayOutputWithContext(context.Context) VPCRouterStaticRouteArrayOutput
}

type VPCRouterStaticRouteArray []VPCRouterStaticRouteInput

func (VPCRouterStaticRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterStaticRoute)(nil)).Elem()
}

func (i VPCRouterStaticRouteArray) ToVPCRouterStaticRouteArrayOutput() VPCRouterStaticRouteArrayOutput {
	return i.ToVPCRouterStaticRouteArrayOutputWithContext(context.Background())
}

func (i VPCRouterStaticRouteArray) ToVPCRouterStaticRouteArrayOutputWithContext(ctx context.Context) VPCRouterStaticRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterStaticRouteArrayOutput)
}

type VPCRouterStaticRouteOutput struct { *pulumi.OutputState }

func (VPCRouterStaticRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterStaticRoute)(nil)).Elem()
}

func (o VPCRouterStaticRouteOutput) ToVPCRouterStaticRouteOutput() VPCRouterStaticRouteOutput {
	return o
}

func (o VPCRouterStaticRouteOutput) ToVPCRouterStaticRouteOutputWithContext(ctx context.Context) VPCRouterStaticRouteOutput {
	return o
}

func (o VPCRouterStaticRouteOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterStaticRoute) string { return v.NextHop }).(pulumi.StringOutput)
}

func (o VPCRouterStaticRouteOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterStaticRoute) string { return v.Prefix }).(pulumi.StringOutput)
}

type VPCRouterStaticRouteArrayOutput struct { *pulumi.OutputState}

func (VPCRouterStaticRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterStaticRoute)(nil)).Elem()
}

func (o VPCRouterStaticRouteArrayOutput) ToVPCRouterStaticRouteArrayOutput() VPCRouterStaticRouteArrayOutput {
	return o
}

func (o VPCRouterStaticRouteArrayOutput) ToVPCRouterStaticRouteArrayOutputWithContext(ctx context.Context) VPCRouterStaticRouteArrayOutput {
	return o
}

func (o VPCRouterStaticRouteArrayOutput) Index(i pulumi.IntInput) VPCRouterStaticRouteOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) VPCRouterStaticRoute {
		return vs[0].([]VPCRouterStaticRoute)[vs[1].(int)]
	}).(VPCRouterStaticRouteOutput)
}

type VPCRouterUser struct {
	Name string `pulumi:"name"`
	Password string `pulumi:"password"`
}

type VPCRouterUserInput interface {
	pulumi.Input

	ToVPCRouterUserOutput() VPCRouterUserOutput
	ToVPCRouterUserOutputWithContext(context.Context) VPCRouterUserOutput
}

type VPCRouterUserArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Password pulumi.StringInput `pulumi:"password"`
}

func (VPCRouterUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterUser)(nil)).Elem()
}

func (i VPCRouterUserArgs) ToVPCRouterUserOutput() VPCRouterUserOutput {
	return i.ToVPCRouterUserOutputWithContext(context.Background())
}

func (i VPCRouterUserArgs) ToVPCRouterUserOutputWithContext(ctx context.Context) VPCRouterUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterUserOutput)
}

type VPCRouterUserArrayInput interface {
	pulumi.Input

	ToVPCRouterUserArrayOutput() VPCRouterUserArrayOutput
	ToVPCRouterUserArrayOutputWithContext(context.Context) VPCRouterUserArrayOutput
}

type VPCRouterUserArray []VPCRouterUserInput

func (VPCRouterUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterUser)(nil)).Elem()
}

func (i VPCRouterUserArray) ToVPCRouterUserArrayOutput() VPCRouterUserArrayOutput {
	return i.ToVPCRouterUserArrayOutputWithContext(context.Background())
}

func (i VPCRouterUserArray) ToVPCRouterUserArrayOutputWithContext(ctx context.Context) VPCRouterUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCRouterUserArrayOutput)
}

type VPCRouterUserOutput struct { *pulumi.OutputState }

func (VPCRouterUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCRouterUser)(nil)).Elem()
}

func (o VPCRouterUserOutput) ToVPCRouterUserOutput() VPCRouterUserOutput {
	return o
}

func (o VPCRouterUserOutput) ToVPCRouterUserOutputWithContext(ctx context.Context) VPCRouterUserOutput {
	return o
}

func (o VPCRouterUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterUser) string { return v.Name }).(pulumi.StringOutput)
}

func (o VPCRouterUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func (v VPCRouterUser) string { return v.Password }).(pulumi.StringOutput)
}

type VPCRouterUserArrayOutput struct { *pulumi.OutputState}

func (VPCRouterUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VPCRouterUser)(nil)).Elem()
}

func (o VPCRouterUserArrayOutput) ToVPCRouterUserArrayOutput() VPCRouterUserArrayOutput {
	return o
}

func (o VPCRouterUserArrayOutput) ToVPCRouterUserArrayOutputWithContext(ctx context.Context) VPCRouterUserArrayOutput {
	return o
}

func (o VPCRouterUserArrayOutput) Index(i pulumi.IntInput) VPCRouterUserOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) VPCRouterUser {
		return vs[0].([]VPCRouterUser)[vs[1].(int)]
	}).(VPCRouterUserOutput)
}

type GetArchiveFilter struct {
	Conditions []GetArchiveFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetArchiveFilterInput interface {
	pulumi.Input

	ToGetArchiveFilterOutput() GetArchiveFilterOutput
	ToGetArchiveFilterOutputWithContext(context.Context) GetArchiveFilterOutput
}

type GetArchiveFilterArgs struct {
	Conditions GetArchiveFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetArchiveFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetArchiveFilter)(nil)).Elem()
}

func (i GetArchiveFilterArgs) ToGetArchiveFilterOutput() GetArchiveFilterOutput {
	return i.ToGetArchiveFilterOutputWithContext(context.Background())
}

func (i GetArchiveFilterArgs) ToGetArchiveFilterOutputWithContext(ctx context.Context) GetArchiveFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetArchiveFilterOutput)
}

type GetArchiveFilterOutput struct { *pulumi.OutputState }

func (GetArchiveFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetArchiveFilter)(nil)).Elem()
}

func (o GetArchiveFilterOutput) ToGetArchiveFilterOutput() GetArchiveFilterOutput {
	return o
}

func (o GetArchiveFilterOutput) ToGetArchiveFilterOutputWithContext(ctx context.Context) GetArchiveFilterOutput {
	return o
}

func (o GetArchiveFilterOutput) Conditions() GetArchiveFilterConditionArrayOutput {
	return o.ApplyT(func (v GetArchiveFilter) []GetArchiveFilterCondition { return v.Conditions }).(GetArchiveFilterConditionArrayOutput)
}

func (o GetArchiveFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetArchiveFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetArchiveFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetArchiveFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetArchiveFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetArchiveFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetArchiveFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetArchiveFilterConditionInput interface {
	pulumi.Input

	ToGetArchiveFilterConditionOutput() GetArchiveFilterConditionOutput
	ToGetArchiveFilterConditionOutputWithContext(context.Context) GetArchiveFilterConditionOutput
}

type GetArchiveFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetArchiveFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetArchiveFilterCondition)(nil)).Elem()
}

func (i GetArchiveFilterConditionArgs) ToGetArchiveFilterConditionOutput() GetArchiveFilterConditionOutput {
	return i.ToGetArchiveFilterConditionOutputWithContext(context.Background())
}

func (i GetArchiveFilterConditionArgs) ToGetArchiveFilterConditionOutputWithContext(ctx context.Context) GetArchiveFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetArchiveFilterConditionOutput)
}

type GetArchiveFilterConditionArrayInput interface {
	pulumi.Input

	ToGetArchiveFilterConditionArrayOutput() GetArchiveFilterConditionArrayOutput
	ToGetArchiveFilterConditionArrayOutputWithContext(context.Context) GetArchiveFilterConditionArrayOutput
}

type GetArchiveFilterConditionArray []GetArchiveFilterConditionInput

func (GetArchiveFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetArchiveFilterCondition)(nil)).Elem()
}

func (i GetArchiveFilterConditionArray) ToGetArchiveFilterConditionArrayOutput() GetArchiveFilterConditionArrayOutput {
	return i.ToGetArchiveFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetArchiveFilterConditionArray) ToGetArchiveFilterConditionArrayOutputWithContext(ctx context.Context) GetArchiveFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetArchiveFilterConditionArrayOutput)
}

type GetArchiveFilterConditionOutput struct { *pulumi.OutputState }

func (GetArchiveFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetArchiveFilterCondition)(nil)).Elem()
}

func (o GetArchiveFilterConditionOutput) ToGetArchiveFilterConditionOutput() GetArchiveFilterConditionOutput {
	return o
}

func (o GetArchiveFilterConditionOutput) ToGetArchiveFilterConditionOutputWithContext(ctx context.Context) GetArchiveFilterConditionOutput {
	return o
}

func (o GetArchiveFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetArchiveFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetArchiveFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetArchiveFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetArchiveFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetArchiveFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetArchiveFilterCondition)(nil)).Elem()
}

func (o GetArchiveFilterConditionArrayOutput) ToGetArchiveFilterConditionArrayOutput() GetArchiveFilterConditionArrayOutput {
	return o
}

func (o GetArchiveFilterConditionArrayOutput) ToGetArchiveFilterConditionArrayOutputWithContext(ctx context.Context) GetArchiveFilterConditionArrayOutput {
	return o
}

func (o GetArchiveFilterConditionArrayOutput) Index(i pulumi.IntInput) GetArchiveFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetArchiveFilterCondition {
		return vs[0].([]GetArchiveFilterCondition)[vs[1].(int)]
	}).(GetArchiveFilterConditionOutput)
}

type GetBridgeFilter struct {
	Conditions []GetBridgeFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
}

type GetBridgeFilterInput interface {
	pulumi.Input

	ToGetBridgeFilterOutput() GetBridgeFilterOutput
	ToGetBridgeFilterOutputWithContext(context.Context) GetBridgeFilterOutput
}

type GetBridgeFilterArgs struct {
	Conditions GetBridgeFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (GetBridgeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBridgeFilter)(nil)).Elem()
}

func (i GetBridgeFilterArgs) ToGetBridgeFilterOutput() GetBridgeFilterOutput {
	return i.ToGetBridgeFilterOutputWithContext(context.Background())
}

func (i GetBridgeFilterArgs) ToGetBridgeFilterOutputWithContext(ctx context.Context) GetBridgeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBridgeFilterOutput)
}

type GetBridgeFilterOutput struct { *pulumi.OutputState }

func (GetBridgeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBridgeFilter)(nil)).Elem()
}

func (o GetBridgeFilterOutput) ToGetBridgeFilterOutput() GetBridgeFilterOutput {
	return o
}

func (o GetBridgeFilterOutput) ToGetBridgeFilterOutputWithContext(ctx context.Context) GetBridgeFilterOutput {
	return o
}

func (o GetBridgeFilterOutput) Conditions() GetBridgeFilterConditionArrayOutput {
	return o.ApplyT(func (v GetBridgeFilter) []GetBridgeFilterCondition { return v.Conditions }).(GetBridgeFilterConditionArrayOutput)
}

func (o GetBridgeFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetBridgeFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetBridgeFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetBridgeFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

type GetBridgeFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetBridgeFilterConditionInput interface {
	pulumi.Input

	ToGetBridgeFilterConditionOutput() GetBridgeFilterConditionOutput
	ToGetBridgeFilterConditionOutputWithContext(context.Context) GetBridgeFilterConditionOutput
}

type GetBridgeFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetBridgeFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBridgeFilterCondition)(nil)).Elem()
}

func (i GetBridgeFilterConditionArgs) ToGetBridgeFilterConditionOutput() GetBridgeFilterConditionOutput {
	return i.ToGetBridgeFilterConditionOutputWithContext(context.Background())
}

func (i GetBridgeFilterConditionArgs) ToGetBridgeFilterConditionOutputWithContext(ctx context.Context) GetBridgeFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBridgeFilterConditionOutput)
}

type GetBridgeFilterConditionArrayInput interface {
	pulumi.Input

	ToGetBridgeFilterConditionArrayOutput() GetBridgeFilterConditionArrayOutput
	ToGetBridgeFilterConditionArrayOutputWithContext(context.Context) GetBridgeFilterConditionArrayOutput
}

type GetBridgeFilterConditionArray []GetBridgeFilterConditionInput

func (GetBridgeFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBridgeFilterCondition)(nil)).Elem()
}

func (i GetBridgeFilterConditionArray) ToGetBridgeFilterConditionArrayOutput() GetBridgeFilterConditionArrayOutput {
	return i.ToGetBridgeFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetBridgeFilterConditionArray) ToGetBridgeFilterConditionArrayOutputWithContext(ctx context.Context) GetBridgeFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBridgeFilterConditionArrayOutput)
}

type GetBridgeFilterConditionOutput struct { *pulumi.OutputState }

func (GetBridgeFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBridgeFilterCondition)(nil)).Elem()
}

func (o GetBridgeFilterConditionOutput) ToGetBridgeFilterConditionOutput() GetBridgeFilterConditionOutput {
	return o
}

func (o GetBridgeFilterConditionOutput) ToGetBridgeFilterConditionOutputWithContext(ctx context.Context) GetBridgeFilterConditionOutput {
	return o
}

func (o GetBridgeFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetBridgeFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetBridgeFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetBridgeFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetBridgeFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetBridgeFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBridgeFilterCondition)(nil)).Elem()
}

func (o GetBridgeFilterConditionArrayOutput) ToGetBridgeFilterConditionArrayOutput() GetBridgeFilterConditionArrayOutput {
	return o
}

func (o GetBridgeFilterConditionArrayOutput) ToGetBridgeFilterConditionArrayOutputWithContext(ctx context.Context) GetBridgeFilterConditionArrayOutput {
	return o
}

func (o GetBridgeFilterConditionArrayOutput) Index(i pulumi.IntInput) GetBridgeFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetBridgeFilterCondition {
		return vs[0].([]GetBridgeFilterCondition)[vs[1].(int)]
	}).(GetBridgeFilterConditionOutput)
}

type GetCDROMFilter struct {
	Conditions []GetCDROMFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetCDROMFilterInput interface {
	pulumi.Input

	ToGetCDROMFilterOutput() GetCDROMFilterOutput
	ToGetCDROMFilterOutputWithContext(context.Context) GetCDROMFilterOutput
}

type GetCDROMFilterArgs struct {
	Conditions GetCDROMFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetCDROMFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCDROMFilter)(nil)).Elem()
}

func (i GetCDROMFilterArgs) ToGetCDROMFilterOutput() GetCDROMFilterOutput {
	return i.ToGetCDROMFilterOutputWithContext(context.Background())
}

func (i GetCDROMFilterArgs) ToGetCDROMFilterOutputWithContext(ctx context.Context) GetCDROMFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCDROMFilterOutput)
}

type GetCDROMFilterOutput struct { *pulumi.OutputState }

func (GetCDROMFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCDROMFilter)(nil)).Elem()
}

func (o GetCDROMFilterOutput) ToGetCDROMFilterOutput() GetCDROMFilterOutput {
	return o
}

func (o GetCDROMFilterOutput) ToGetCDROMFilterOutputWithContext(ctx context.Context) GetCDROMFilterOutput {
	return o
}

func (o GetCDROMFilterOutput) Conditions() GetCDROMFilterConditionArrayOutput {
	return o.ApplyT(func (v GetCDROMFilter) []GetCDROMFilterCondition { return v.Conditions }).(GetCDROMFilterConditionArrayOutput)
}

func (o GetCDROMFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetCDROMFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetCDROMFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetCDROMFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetCDROMFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetCDROMFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetCDROMFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetCDROMFilterConditionInput interface {
	pulumi.Input

	ToGetCDROMFilterConditionOutput() GetCDROMFilterConditionOutput
	ToGetCDROMFilterConditionOutputWithContext(context.Context) GetCDROMFilterConditionOutput
}

type GetCDROMFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetCDROMFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCDROMFilterCondition)(nil)).Elem()
}

func (i GetCDROMFilterConditionArgs) ToGetCDROMFilterConditionOutput() GetCDROMFilterConditionOutput {
	return i.ToGetCDROMFilterConditionOutputWithContext(context.Background())
}

func (i GetCDROMFilterConditionArgs) ToGetCDROMFilterConditionOutputWithContext(ctx context.Context) GetCDROMFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCDROMFilterConditionOutput)
}

type GetCDROMFilterConditionArrayInput interface {
	pulumi.Input

	ToGetCDROMFilterConditionArrayOutput() GetCDROMFilterConditionArrayOutput
	ToGetCDROMFilterConditionArrayOutputWithContext(context.Context) GetCDROMFilterConditionArrayOutput
}

type GetCDROMFilterConditionArray []GetCDROMFilterConditionInput

func (GetCDROMFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCDROMFilterCondition)(nil)).Elem()
}

func (i GetCDROMFilterConditionArray) ToGetCDROMFilterConditionArrayOutput() GetCDROMFilterConditionArrayOutput {
	return i.ToGetCDROMFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetCDROMFilterConditionArray) ToGetCDROMFilterConditionArrayOutputWithContext(ctx context.Context) GetCDROMFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCDROMFilterConditionArrayOutput)
}

type GetCDROMFilterConditionOutput struct { *pulumi.OutputState }

func (GetCDROMFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCDROMFilterCondition)(nil)).Elem()
}

func (o GetCDROMFilterConditionOutput) ToGetCDROMFilterConditionOutput() GetCDROMFilterConditionOutput {
	return o
}

func (o GetCDROMFilterConditionOutput) ToGetCDROMFilterConditionOutputWithContext(ctx context.Context) GetCDROMFilterConditionOutput {
	return o
}

func (o GetCDROMFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetCDROMFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCDROMFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetCDROMFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetCDROMFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetCDROMFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCDROMFilterCondition)(nil)).Elem()
}

func (o GetCDROMFilterConditionArrayOutput) ToGetCDROMFilterConditionArrayOutput() GetCDROMFilterConditionArrayOutput {
	return o
}

func (o GetCDROMFilterConditionArrayOutput) ToGetCDROMFilterConditionArrayOutputWithContext(ctx context.Context) GetCDROMFilterConditionArrayOutput {
	return o
}

func (o GetCDROMFilterConditionArrayOutput) Index(i pulumi.IntInput) GetCDROMFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetCDROMFilterCondition {
		return vs[0].([]GetCDROMFilterCondition)[vs[1].(int)]
	}).(GetCDROMFilterConditionOutput)
}

type GetContainerRegistryFilter struct {
	Conditions []GetContainerRegistryFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetContainerRegistryFilterInput interface {
	pulumi.Input

	ToGetContainerRegistryFilterOutput() GetContainerRegistryFilterOutput
	ToGetContainerRegistryFilterOutputWithContext(context.Context) GetContainerRegistryFilterOutput
}

type GetContainerRegistryFilterArgs struct {
	Conditions GetContainerRegistryFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetContainerRegistryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryFilter)(nil)).Elem()
}

func (i GetContainerRegistryFilterArgs) ToGetContainerRegistryFilterOutput() GetContainerRegistryFilterOutput {
	return i.ToGetContainerRegistryFilterOutputWithContext(context.Background())
}

func (i GetContainerRegistryFilterArgs) ToGetContainerRegistryFilterOutputWithContext(ctx context.Context) GetContainerRegistryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryFilterOutput)
}

type GetContainerRegistryFilterOutput struct { *pulumi.OutputState }

func (GetContainerRegistryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryFilter)(nil)).Elem()
}

func (o GetContainerRegistryFilterOutput) ToGetContainerRegistryFilterOutput() GetContainerRegistryFilterOutput {
	return o
}

func (o GetContainerRegistryFilterOutput) ToGetContainerRegistryFilterOutputWithContext(ctx context.Context) GetContainerRegistryFilterOutput {
	return o
}

func (o GetContainerRegistryFilterOutput) Conditions() GetContainerRegistryFilterConditionArrayOutput {
	return o.ApplyT(func (v GetContainerRegistryFilter) []GetContainerRegistryFilterCondition { return v.Conditions }).(GetContainerRegistryFilterConditionArrayOutput)
}

func (o GetContainerRegistryFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetContainerRegistryFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetContainerRegistryFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetContainerRegistryFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetContainerRegistryFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetContainerRegistryFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetContainerRegistryFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetContainerRegistryFilterConditionInput interface {
	pulumi.Input

	ToGetContainerRegistryFilterConditionOutput() GetContainerRegistryFilterConditionOutput
	ToGetContainerRegistryFilterConditionOutputWithContext(context.Context) GetContainerRegistryFilterConditionOutput
}

type GetContainerRegistryFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetContainerRegistryFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryFilterCondition)(nil)).Elem()
}

func (i GetContainerRegistryFilterConditionArgs) ToGetContainerRegistryFilterConditionOutput() GetContainerRegistryFilterConditionOutput {
	return i.ToGetContainerRegistryFilterConditionOutputWithContext(context.Background())
}

func (i GetContainerRegistryFilterConditionArgs) ToGetContainerRegistryFilterConditionOutputWithContext(ctx context.Context) GetContainerRegistryFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryFilterConditionOutput)
}

type GetContainerRegistryFilterConditionArrayInput interface {
	pulumi.Input

	ToGetContainerRegistryFilterConditionArrayOutput() GetContainerRegistryFilterConditionArrayOutput
	ToGetContainerRegistryFilterConditionArrayOutputWithContext(context.Context) GetContainerRegistryFilterConditionArrayOutput
}

type GetContainerRegistryFilterConditionArray []GetContainerRegistryFilterConditionInput

func (GetContainerRegistryFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryFilterCondition)(nil)).Elem()
}

func (i GetContainerRegistryFilterConditionArray) ToGetContainerRegistryFilterConditionArrayOutput() GetContainerRegistryFilterConditionArrayOutput {
	return i.ToGetContainerRegistryFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetContainerRegistryFilterConditionArray) ToGetContainerRegistryFilterConditionArrayOutputWithContext(ctx context.Context) GetContainerRegistryFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryFilterConditionArrayOutput)
}

type GetContainerRegistryFilterConditionOutput struct { *pulumi.OutputState }

func (GetContainerRegistryFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryFilterCondition)(nil)).Elem()
}

func (o GetContainerRegistryFilterConditionOutput) ToGetContainerRegistryFilterConditionOutput() GetContainerRegistryFilterConditionOutput {
	return o
}

func (o GetContainerRegistryFilterConditionOutput) ToGetContainerRegistryFilterConditionOutputWithContext(ctx context.Context) GetContainerRegistryFilterConditionOutput {
	return o
}

func (o GetContainerRegistryFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetContainerRegistryFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetContainerRegistryFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetContainerRegistryFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetContainerRegistryFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetContainerRegistryFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryFilterCondition)(nil)).Elem()
}

func (o GetContainerRegistryFilterConditionArrayOutput) ToGetContainerRegistryFilterConditionArrayOutput() GetContainerRegistryFilterConditionArrayOutput {
	return o
}

func (o GetContainerRegistryFilterConditionArrayOutput) ToGetContainerRegistryFilterConditionArrayOutputWithContext(ctx context.Context) GetContainerRegistryFilterConditionArrayOutput {
	return o
}

func (o GetContainerRegistryFilterConditionArrayOutput) Index(i pulumi.IntInput) GetContainerRegistryFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetContainerRegistryFilterCondition {
		return vs[0].([]GetContainerRegistryFilterCondition)[vs[1].(int)]
	}).(GetContainerRegistryFilterConditionOutput)
}

type GetContainerRegistryUser struct {
	Name string `pulumi:"name"`
	Permission string `pulumi:"permission"`
}

type GetContainerRegistryUserInput interface {
	pulumi.Input

	ToGetContainerRegistryUserOutput() GetContainerRegistryUserOutput
	ToGetContainerRegistryUserOutputWithContext(context.Context) GetContainerRegistryUserOutput
}

type GetContainerRegistryUserArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Permission pulumi.StringInput `pulumi:"permission"`
}

func (GetContainerRegistryUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryUser)(nil)).Elem()
}

func (i GetContainerRegistryUserArgs) ToGetContainerRegistryUserOutput() GetContainerRegistryUserOutput {
	return i.ToGetContainerRegistryUserOutputWithContext(context.Background())
}

func (i GetContainerRegistryUserArgs) ToGetContainerRegistryUserOutputWithContext(ctx context.Context) GetContainerRegistryUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryUserOutput)
}

type GetContainerRegistryUserArrayInput interface {
	pulumi.Input

	ToGetContainerRegistryUserArrayOutput() GetContainerRegistryUserArrayOutput
	ToGetContainerRegistryUserArrayOutputWithContext(context.Context) GetContainerRegistryUserArrayOutput
}

type GetContainerRegistryUserArray []GetContainerRegistryUserInput

func (GetContainerRegistryUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryUser)(nil)).Elem()
}

func (i GetContainerRegistryUserArray) ToGetContainerRegistryUserArrayOutput() GetContainerRegistryUserArrayOutput {
	return i.ToGetContainerRegistryUserArrayOutputWithContext(context.Background())
}

func (i GetContainerRegistryUserArray) ToGetContainerRegistryUserArrayOutputWithContext(ctx context.Context) GetContainerRegistryUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetContainerRegistryUserArrayOutput)
}

type GetContainerRegistryUserOutput struct { *pulumi.OutputState }

func (GetContainerRegistryUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetContainerRegistryUser)(nil)).Elem()
}

func (o GetContainerRegistryUserOutput) ToGetContainerRegistryUserOutput() GetContainerRegistryUserOutput {
	return o
}

func (o GetContainerRegistryUserOutput) ToGetContainerRegistryUserOutputWithContext(ctx context.Context) GetContainerRegistryUserOutput {
	return o
}

func (o GetContainerRegistryUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetContainerRegistryUser) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetContainerRegistryUserOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func (v GetContainerRegistryUser) string { return v.Permission }).(pulumi.StringOutput)
}

type GetContainerRegistryUserArrayOutput struct { *pulumi.OutputState}

func (GetContainerRegistryUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetContainerRegistryUser)(nil)).Elem()
}

func (o GetContainerRegistryUserArrayOutput) ToGetContainerRegistryUserArrayOutput() GetContainerRegistryUserArrayOutput {
	return o
}

func (o GetContainerRegistryUserArrayOutput) ToGetContainerRegistryUserArrayOutputWithContext(ctx context.Context) GetContainerRegistryUserArrayOutput {
	return o
}

func (o GetContainerRegistryUserArrayOutput) Index(i pulumi.IntInput) GetContainerRegistryUserOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetContainerRegistryUser {
		return vs[0].([]GetContainerRegistryUser)[vs[1].(int)]
	}).(GetContainerRegistryUserOutput)
}

type GetDNSFilter struct {
	Conditions []GetDNSFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetDNSFilterInput interface {
	pulumi.Input

	ToGetDNSFilterOutput() GetDNSFilterOutput
	ToGetDNSFilterOutputWithContext(context.Context) GetDNSFilterOutput
}

type GetDNSFilterArgs struct {
	Conditions GetDNSFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetDNSFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDNSFilter)(nil)).Elem()
}

func (i GetDNSFilterArgs) ToGetDNSFilterOutput() GetDNSFilterOutput {
	return i.ToGetDNSFilterOutputWithContext(context.Background())
}

func (i GetDNSFilterArgs) ToGetDNSFilterOutputWithContext(ctx context.Context) GetDNSFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDNSFilterOutput)
}

type GetDNSFilterOutput struct { *pulumi.OutputState }

func (GetDNSFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDNSFilter)(nil)).Elem()
}

func (o GetDNSFilterOutput) ToGetDNSFilterOutput() GetDNSFilterOutput {
	return o
}

func (o GetDNSFilterOutput) ToGetDNSFilterOutputWithContext(ctx context.Context) GetDNSFilterOutput {
	return o
}

func (o GetDNSFilterOutput) Conditions() GetDNSFilterConditionArrayOutput {
	return o.ApplyT(func (v GetDNSFilter) []GetDNSFilterCondition { return v.Conditions }).(GetDNSFilterConditionArrayOutput)
}

func (o GetDNSFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetDNSFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetDNSFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetDNSFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetDNSFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetDNSFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetDNSFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetDNSFilterConditionInput interface {
	pulumi.Input

	ToGetDNSFilterConditionOutput() GetDNSFilterConditionOutput
	ToGetDNSFilterConditionOutputWithContext(context.Context) GetDNSFilterConditionOutput
}

type GetDNSFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDNSFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDNSFilterCondition)(nil)).Elem()
}

func (i GetDNSFilterConditionArgs) ToGetDNSFilterConditionOutput() GetDNSFilterConditionOutput {
	return i.ToGetDNSFilterConditionOutputWithContext(context.Background())
}

func (i GetDNSFilterConditionArgs) ToGetDNSFilterConditionOutputWithContext(ctx context.Context) GetDNSFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDNSFilterConditionOutput)
}

type GetDNSFilterConditionArrayInput interface {
	pulumi.Input

	ToGetDNSFilterConditionArrayOutput() GetDNSFilterConditionArrayOutput
	ToGetDNSFilterConditionArrayOutputWithContext(context.Context) GetDNSFilterConditionArrayOutput
}

type GetDNSFilterConditionArray []GetDNSFilterConditionInput

func (GetDNSFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDNSFilterCondition)(nil)).Elem()
}

func (i GetDNSFilterConditionArray) ToGetDNSFilterConditionArrayOutput() GetDNSFilterConditionArrayOutput {
	return i.ToGetDNSFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetDNSFilterConditionArray) ToGetDNSFilterConditionArrayOutputWithContext(ctx context.Context) GetDNSFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDNSFilterConditionArrayOutput)
}

type GetDNSFilterConditionOutput struct { *pulumi.OutputState }

func (GetDNSFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDNSFilterCondition)(nil)).Elem()
}

func (o GetDNSFilterConditionOutput) ToGetDNSFilterConditionOutput() GetDNSFilterConditionOutput {
	return o
}

func (o GetDNSFilterConditionOutput) ToGetDNSFilterConditionOutputWithContext(ctx context.Context) GetDNSFilterConditionOutput {
	return o
}

func (o GetDNSFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetDNSFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDNSFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetDNSFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDNSFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetDNSFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDNSFilterCondition)(nil)).Elem()
}

func (o GetDNSFilterConditionArrayOutput) ToGetDNSFilterConditionArrayOutput() GetDNSFilterConditionArrayOutput {
	return o
}

func (o GetDNSFilterConditionArrayOutput) ToGetDNSFilterConditionArrayOutputWithContext(ctx context.Context) GetDNSFilterConditionArrayOutput {
	return o
}

func (o GetDNSFilterConditionArrayOutput) Index(i pulumi.IntInput) GetDNSFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetDNSFilterCondition {
		return vs[0].([]GetDNSFilterCondition)[vs[1].(int)]
	}).(GetDNSFilterConditionOutput)
}

type GetDNSRecordType struct {
	Name string `pulumi:"name"`
	Port int `pulumi:"port"`
	Priority int `pulumi:"priority"`
	Ttl int `pulumi:"ttl"`
	Type string `pulumi:"type"`
	Value string `pulumi:"value"`
	Weight int `pulumi:"weight"`
}

type GetDNSRecordTypeInput interface {
	pulumi.Input

	ToGetDNSRecordTypeOutput() GetDNSRecordTypeOutput
	ToGetDNSRecordTypeOutputWithContext(context.Context) GetDNSRecordTypeOutput
}

type GetDNSRecordTypeArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Port pulumi.IntInput `pulumi:"port"`
	Priority pulumi.IntInput `pulumi:"priority"`
	Ttl pulumi.IntInput `pulumi:"ttl"`
	Type pulumi.StringInput `pulumi:"type"`
	Value pulumi.StringInput `pulumi:"value"`
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetDNSRecordTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDNSRecordType)(nil)).Elem()
}

func (i GetDNSRecordTypeArgs) ToGetDNSRecordTypeOutput() GetDNSRecordTypeOutput {
	return i.ToGetDNSRecordTypeOutputWithContext(context.Background())
}

func (i GetDNSRecordTypeArgs) ToGetDNSRecordTypeOutputWithContext(ctx context.Context) GetDNSRecordTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDNSRecordTypeOutput)
}

type GetDNSRecordTypeArrayInput interface {
	pulumi.Input

	ToGetDNSRecordTypeArrayOutput() GetDNSRecordTypeArrayOutput
	ToGetDNSRecordTypeArrayOutputWithContext(context.Context) GetDNSRecordTypeArrayOutput
}

type GetDNSRecordTypeArray []GetDNSRecordTypeInput

func (GetDNSRecordTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDNSRecordType)(nil)).Elem()
}

func (i GetDNSRecordTypeArray) ToGetDNSRecordTypeArrayOutput() GetDNSRecordTypeArrayOutput {
	return i.ToGetDNSRecordTypeArrayOutputWithContext(context.Background())
}

func (i GetDNSRecordTypeArray) ToGetDNSRecordTypeArrayOutputWithContext(ctx context.Context) GetDNSRecordTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDNSRecordTypeArrayOutput)
}

type GetDNSRecordTypeOutput struct { *pulumi.OutputState }

func (GetDNSRecordTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDNSRecordType)(nil)).Elem()
}

func (o GetDNSRecordTypeOutput) ToGetDNSRecordTypeOutput() GetDNSRecordTypeOutput {
	return o
}

func (o GetDNSRecordTypeOutput) ToGetDNSRecordTypeOutputWithContext(ctx context.Context) GetDNSRecordTypeOutput {
	return o
}

func (o GetDNSRecordTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetDNSRecordType) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDNSRecordTypeOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func (v GetDNSRecordType) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetDNSRecordTypeOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func (v GetDNSRecordType) int { return v.Priority }).(pulumi.IntOutput)
}

func (o GetDNSRecordTypeOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func (v GetDNSRecordType) int { return v.Ttl }).(pulumi.IntOutput)
}

func (o GetDNSRecordTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func (v GetDNSRecordType) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetDNSRecordTypeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v GetDNSRecordType) string { return v.Value }).(pulumi.StringOutput)
}

func (o GetDNSRecordTypeOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func (v GetDNSRecordType) int { return v.Weight }).(pulumi.IntOutput)
}

type GetDNSRecordTypeArrayOutput struct { *pulumi.OutputState}

func (GetDNSRecordTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDNSRecordType)(nil)).Elem()
}

func (o GetDNSRecordTypeArrayOutput) ToGetDNSRecordTypeArrayOutput() GetDNSRecordTypeArrayOutput {
	return o
}

func (o GetDNSRecordTypeArrayOutput) ToGetDNSRecordTypeArrayOutputWithContext(ctx context.Context) GetDNSRecordTypeArrayOutput {
	return o
}

func (o GetDNSRecordTypeArrayOutput) Index(i pulumi.IntInput) GetDNSRecordTypeOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetDNSRecordType {
		return vs[0].([]GetDNSRecordType)[vs[1].(int)]
	}).(GetDNSRecordTypeOutput)
}

type GetDatabaseBackup struct {
	Time string `pulumi:"time"`
	Weekdays []string `pulumi:"weekdays"`
}

type GetDatabaseBackupInput interface {
	pulumi.Input

	ToGetDatabaseBackupOutput() GetDatabaseBackupOutput
	ToGetDatabaseBackupOutputWithContext(context.Context) GetDatabaseBackupOutput
}

type GetDatabaseBackupArgs struct {
	Time pulumi.StringInput `pulumi:"time"`
	Weekdays pulumi.StringArrayInput `pulumi:"weekdays"`
}

func (GetDatabaseBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseBackup)(nil)).Elem()
}

func (i GetDatabaseBackupArgs) ToGetDatabaseBackupOutput() GetDatabaseBackupOutput {
	return i.ToGetDatabaseBackupOutputWithContext(context.Background())
}

func (i GetDatabaseBackupArgs) ToGetDatabaseBackupOutputWithContext(ctx context.Context) GetDatabaseBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseBackupOutput)
}

type GetDatabaseBackupArrayInput interface {
	pulumi.Input

	ToGetDatabaseBackupArrayOutput() GetDatabaseBackupArrayOutput
	ToGetDatabaseBackupArrayOutputWithContext(context.Context) GetDatabaseBackupArrayOutput
}

type GetDatabaseBackupArray []GetDatabaseBackupInput

func (GetDatabaseBackupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseBackup)(nil)).Elem()
}

func (i GetDatabaseBackupArray) ToGetDatabaseBackupArrayOutput() GetDatabaseBackupArrayOutput {
	return i.ToGetDatabaseBackupArrayOutputWithContext(context.Background())
}

func (i GetDatabaseBackupArray) ToGetDatabaseBackupArrayOutputWithContext(ctx context.Context) GetDatabaseBackupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseBackupArrayOutput)
}

type GetDatabaseBackupOutput struct { *pulumi.OutputState }

func (GetDatabaseBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseBackup)(nil)).Elem()
}

func (o GetDatabaseBackupOutput) ToGetDatabaseBackupOutput() GetDatabaseBackupOutput {
	return o
}

func (o GetDatabaseBackupOutput) ToGetDatabaseBackupOutputWithContext(ctx context.Context) GetDatabaseBackupOutput {
	return o
}

func (o GetDatabaseBackupOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func (v GetDatabaseBackup) string { return v.Time }).(pulumi.StringOutput)
}

func (o GetDatabaseBackupOutput) Weekdays() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetDatabaseBackup) []string { return v.Weekdays }).(pulumi.StringArrayOutput)
}

type GetDatabaseBackupArrayOutput struct { *pulumi.OutputState}

func (GetDatabaseBackupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseBackup)(nil)).Elem()
}

func (o GetDatabaseBackupArrayOutput) ToGetDatabaseBackupArrayOutput() GetDatabaseBackupArrayOutput {
	return o
}

func (o GetDatabaseBackupArrayOutput) ToGetDatabaseBackupArrayOutputWithContext(ctx context.Context) GetDatabaseBackupArrayOutput {
	return o
}

func (o GetDatabaseBackupArrayOutput) Index(i pulumi.IntInput) GetDatabaseBackupOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetDatabaseBackup {
		return vs[0].([]GetDatabaseBackup)[vs[1].(int)]
	}).(GetDatabaseBackupOutput)
}

type GetDatabaseFilter struct {
	Conditions []GetDatabaseFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetDatabaseFilterInput interface {
	pulumi.Input

	ToGetDatabaseFilterOutput() GetDatabaseFilterOutput
	ToGetDatabaseFilterOutputWithContext(context.Context) GetDatabaseFilterOutput
}

type GetDatabaseFilterArgs struct {
	Conditions GetDatabaseFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetDatabaseFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseFilter)(nil)).Elem()
}

func (i GetDatabaseFilterArgs) ToGetDatabaseFilterOutput() GetDatabaseFilterOutput {
	return i.ToGetDatabaseFilterOutputWithContext(context.Background())
}

func (i GetDatabaseFilterArgs) ToGetDatabaseFilterOutputWithContext(ctx context.Context) GetDatabaseFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseFilterOutput)
}

type GetDatabaseFilterOutput struct { *pulumi.OutputState }

func (GetDatabaseFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseFilter)(nil)).Elem()
}

func (o GetDatabaseFilterOutput) ToGetDatabaseFilterOutput() GetDatabaseFilterOutput {
	return o
}

func (o GetDatabaseFilterOutput) ToGetDatabaseFilterOutputWithContext(ctx context.Context) GetDatabaseFilterOutput {
	return o
}

func (o GetDatabaseFilterOutput) Conditions() GetDatabaseFilterConditionArrayOutput {
	return o.ApplyT(func (v GetDatabaseFilter) []GetDatabaseFilterCondition { return v.Conditions }).(GetDatabaseFilterConditionArrayOutput)
}

func (o GetDatabaseFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetDatabaseFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetDatabaseFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetDatabaseFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetDatabaseFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetDatabaseFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetDatabaseFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetDatabaseFilterConditionInput interface {
	pulumi.Input

	ToGetDatabaseFilterConditionOutput() GetDatabaseFilterConditionOutput
	ToGetDatabaseFilterConditionOutputWithContext(context.Context) GetDatabaseFilterConditionOutput
}

type GetDatabaseFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDatabaseFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseFilterCondition)(nil)).Elem()
}

func (i GetDatabaseFilterConditionArgs) ToGetDatabaseFilterConditionOutput() GetDatabaseFilterConditionOutput {
	return i.ToGetDatabaseFilterConditionOutputWithContext(context.Background())
}

func (i GetDatabaseFilterConditionArgs) ToGetDatabaseFilterConditionOutputWithContext(ctx context.Context) GetDatabaseFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseFilterConditionOutput)
}

type GetDatabaseFilterConditionArrayInput interface {
	pulumi.Input

	ToGetDatabaseFilterConditionArrayOutput() GetDatabaseFilterConditionArrayOutput
	ToGetDatabaseFilterConditionArrayOutputWithContext(context.Context) GetDatabaseFilterConditionArrayOutput
}

type GetDatabaseFilterConditionArray []GetDatabaseFilterConditionInput

func (GetDatabaseFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseFilterCondition)(nil)).Elem()
}

func (i GetDatabaseFilterConditionArray) ToGetDatabaseFilterConditionArrayOutput() GetDatabaseFilterConditionArrayOutput {
	return i.ToGetDatabaseFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetDatabaseFilterConditionArray) ToGetDatabaseFilterConditionArrayOutputWithContext(ctx context.Context) GetDatabaseFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseFilterConditionArrayOutput)
}

type GetDatabaseFilterConditionOutput struct { *pulumi.OutputState }

func (GetDatabaseFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseFilterCondition)(nil)).Elem()
}

func (o GetDatabaseFilterConditionOutput) ToGetDatabaseFilterConditionOutput() GetDatabaseFilterConditionOutput {
	return o
}

func (o GetDatabaseFilterConditionOutput) ToGetDatabaseFilterConditionOutputWithContext(ctx context.Context) GetDatabaseFilterConditionOutput {
	return o
}

func (o GetDatabaseFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetDatabaseFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDatabaseFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetDatabaseFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDatabaseFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetDatabaseFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseFilterCondition)(nil)).Elem()
}

func (o GetDatabaseFilterConditionArrayOutput) ToGetDatabaseFilterConditionArrayOutput() GetDatabaseFilterConditionArrayOutput {
	return o
}

func (o GetDatabaseFilterConditionArrayOutput) ToGetDatabaseFilterConditionArrayOutputWithContext(ctx context.Context) GetDatabaseFilterConditionArrayOutput {
	return o
}

func (o GetDatabaseFilterConditionArrayOutput) Index(i pulumi.IntInput) GetDatabaseFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetDatabaseFilterCondition {
		return vs[0].([]GetDatabaseFilterCondition)[vs[1].(int)]
	}).(GetDatabaseFilterConditionOutput)
}

type GetDatabaseNetworkInterface struct {
	Gateway string `pulumi:"gateway"`
	IpAddress string `pulumi:"ipAddress"`
	Netmask int `pulumi:"netmask"`
	Port int `pulumi:"port"`
	SourceRanges []string `pulumi:"sourceRanges"`
	SwitchId string `pulumi:"switchId"`
}

type GetDatabaseNetworkInterfaceInput interface {
	pulumi.Input

	ToGetDatabaseNetworkInterfaceOutput() GetDatabaseNetworkInterfaceOutput
	ToGetDatabaseNetworkInterfaceOutputWithContext(context.Context) GetDatabaseNetworkInterfaceOutput
}

type GetDatabaseNetworkInterfaceArgs struct {
	Gateway pulumi.StringInput `pulumi:"gateway"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	Netmask pulumi.IntInput `pulumi:"netmask"`
	Port pulumi.IntInput `pulumi:"port"`
	SourceRanges pulumi.StringArrayInput `pulumi:"sourceRanges"`
	SwitchId pulumi.StringInput `pulumi:"switchId"`
}

func (GetDatabaseNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseNetworkInterface)(nil)).Elem()
}

func (i GetDatabaseNetworkInterfaceArgs) ToGetDatabaseNetworkInterfaceOutput() GetDatabaseNetworkInterfaceOutput {
	return i.ToGetDatabaseNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetDatabaseNetworkInterfaceArgs) ToGetDatabaseNetworkInterfaceOutputWithContext(ctx context.Context) GetDatabaseNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseNetworkInterfaceOutput)
}

type GetDatabaseNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetDatabaseNetworkInterfaceArrayOutput() GetDatabaseNetworkInterfaceArrayOutput
	ToGetDatabaseNetworkInterfaceArrayOutputWithContext(context.Context) GetDatabaseNetworkInterfaceArrayOutput
}

type GetDatabaseNetworkInterfaceArray []GetDatabaseNetworkInterfaceInput

func (GetDatabaseNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseNetworkInterface)(nil)).Elem()
}

func (i GetDatabaseNetworkInterfaceArray) ToGetDatabaseNetworkInterfaceArrayOutput() GetDatabaseNetworkInterfaceArrayOutput {
	return i.ToGetDatabaseNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetDatabaseNetworkInterfaceArray) ToGetDatabaseNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetDatabaseNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseNetworkInterfaceArrayOutput)
}

type GetDatabaseNetworkInterfaceOutput struct { *pulumi.OutputState }

func (GetDatabaseNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseNetworkInterface)(nil)).Elem()
}

func (o GetDatabaseNetworkInterfaceOutput) ToGetDatabaseNetworkInterfaceOutput() GetDatabaseNetworkInterfaceOutput {
	return o
}

func (o GetDatabaseNetworkInterfaceOutput) ToGetDatabaseNetworkInterfaceOutputWithContext(ctx context.Context) GetDatabaseNetworkInterfaceOutput {
	return o
}

func (o GetDatabaseNetworkInterfaceOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func (v GetDatabaseNetworkInterface) string { return v.Gateway }).(pulumi.StringOutput)
}

func (o GetDatabaseNetworkInterfaceOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v GetDatabaseNetworkInterface) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetDatabaseNetworkInterfaceOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v GetDatabaseNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o GetDatabaseNetworkInterfaceOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func (v GetDatabaseNetworkInterface) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetDatabaseNetworkInterfaceOutput) SourceRanges() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetDatabaseNetworkInterface) []string { return v.SourceRanges }).(pulumi.StringArrayOutput)
}

func (o GetDatabaseNetworkInterfaceOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func (v GetDatabaseNetworkInterface) string { return v.SwitchId }).(pulumi.StringOutput)
}

type GetDatabaseNetworkInterfaceArrayOutput struct { *pulumi.OutputState}

func (GetDatabaseNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseNetworkInterface)(nil)).Elem()
}

func (o GetDatabaseNetworkInterfaceArrayOutput) ToGetDatabaseNetworkInterfaceArrayOutput() GetDatabaseNetworkInterfaceArrayOutput {
	return o
}

func (o GetDatabaseNetworkInterfaceArrayOutput) ToGetDatabaseNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetDatabaseNetworkInterfaceArrayOutput {
	return o
}

func (o GetDatabaseNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetDatabaseNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetDatabaseNetworkInterface {
		return vs[0].([]GetDatabaseNetworkInterface)[vs[1].(int)]
	}).(GetDatabaseNetworkInterfaceOutput)
}

type GetDiskFilter struct {
	Conditions []GetDiskFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetDiskFilterInput interface {
	pulumi.Input

	ToGetDiskFilterOutput() GetDiskFilterOutput
	ToGetDiskFilterOutputWithContext(context.Context) GetDiskFilterOutput
}

type GetDiskFilterArgs struct {
	Conditions GetDiskFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetDiskFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskFilter)(nil)).Elem()
}

func (i GetDiskFilterArgs) ToGetDiskFilterOutput() GetDiskFilterOutput {
	return i.ToGetDiskFilterOutputWithContext(context.Background())
}

func (i GetDiskFilterArgs) ToGetDiskFilterOutputWithContext(ctx context.Context) GetDiskFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskFilterOutput)
}

type GetDiskFilterOutput struct { *pulumi.OutputState }

func (GetDiskFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskFilter)(nil)).Elem()
}

func (o GetDiskFilterOutput) ToGetDiskFilterOutput() GetDiskFilterOutput {
	return o
}

func (o GetDiskFilterOutput) ToGetDiskFilterOutputWithContext(ctx context.Context) GetDiskFilterOutput {
	return o
}

func (o GetDiskFilterOutput) Conditions() GetDiskFilterConditionArrayOutput {
	return o.ApplyT(func (v GetDiskFilter) []GetDiskFilterCondition { return v.Conditions }).(GetDiskFilterConditionArrayOutput)
}

func (o GetDiskFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetDiskFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetDiskFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetDiskFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetDiskFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetDiskFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetDiskFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetDiskFilterConditionInput interface {
	pulumi.Input

	ToGetDiskFilterConditionOutput() GetDiskFilterConditionOutput
	ToGetDiskFilterConditionOutputWithContext(context.Context) GetDiskFilterConditionOutput
}

type GetDiskFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDiskFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskFilterCondition)(nil)).Elem()
}

func (i GetDiskFilterConditionArgs) ToGetDiskFilterConditionOutput() GetDiskFilterConditionOutput {
	return i.ToGetDiskFilterConditionOutputWithContext(context.Background())
}

func (i GetDiskFilterConditionArgs) ToGetDiskFilterConditionOutputWithContext(ctx context.Context) GetDiskFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskFilterConditionOutput)
}

type GetDiskFilterConditionArrayInput interface {
	pulumi.Input

	ToGetDiskFilterConditionArrayOutput() GetDiskFilterConditionArrayOutput
	ToGetDiskFilterConditionArrayOutputWithContext(context.Context) GetDiskFilterConditionArrayOutput
}

type GetDiskFilterConditionArray []GetDiskFilterConditionInput

func (GetDiskFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskFilterCondition)(nil)).Elem()
}

func (i GetDiskFilterConditionArray) ToGetDiskFilterConditionArrayOutput() GetDiskFilterConditionArrayOutput {
	return i.ToGetDiskFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetDiskFilterConditionArray) ToGetDiskFilterConditionArrayOutputWithContext(ctx context.Context) GetDiskFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDiskFilterConditionArrayOutput)
}

type GetDiskFilterConditionOutput struct { *pulumi.OutputState }

func (GetDiskFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiskFilterCondition)(nil)).Elem()
}

func (o GetDiskFilterConditionOutput) ToGetDiskFilterConditionOutput() GetDiskFilterConditionOutput {
	return o
}

func (o GetDiskFilterConditionOutput) ToGetDiskFilterConditionOutputWithContext(ctx context.Context) GetDiskFilterConditionOutput {
	return o
}

func (o GetDiskFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetDiskFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDiskFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetDiskFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDiskFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetDiskFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDiskFilterCondition)(nil)).Elem()
}

func (o GetDiskFilterConditionArrayOutput) ToGetDiskFilterConditionArrayOutput() GetDiskFilterConditionArrayOutput {
	return o
}

func (o GetDiskFilterConditionArrayOutput) ToGetDiskFilterConditionArrayOutputWithContext(ctx context.Context) GetDiskFilterConditionArrayOutput {
	return o
}

func (o GetDiskFilterConditionArrayOutput) Index(i pulumi.IntInput) GetDiskFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetDiskFilterCondition {
		return vs[0].([]GetDiskFilterCondition)[vs[1].(int)]
	}).(GetDiskFilterConditionOutput)
}

type GetGSLBFilter struct {
	Conditions []GetGSLBFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetGSLBFilterInput interface {
	pulumi.Input

	ToGetGSLBFilterOutput() GetGSLBFilterOutput
	ToGetGSLBFilterOutputWithContext(context.Context) GetGSLBFilterOutput
}

type GetGSLBFilterArgs struct {
	Conditions GetGSLBFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetGSLBFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGSLBFilter)(nil)).Elem()
}

func (i GetGSLBFilterArgs) ToGetGSLBFilterOutput() GetGSLBFilterOutput {
	return i.ToGetGSLBFilterOutputWithContext(context.Background())
}

func (i GetGSLBFilterArgs) ToGetGSLBFilterOutputWithContext(ctx context.Context) GetGSLBFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGSLBFilterOutput)
}

type GetGSLBFilterOutput struct { *pulumi.OutputState }

func (GetGSLBFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGSLBFilter)(nil)).Elem()
}

func (o GetGSLBFilterOutput) ToGetGSLBFilterOutput() GetGSLBFilterOutput {
	return o
}

func (o GetGSLBFilterOutput) ToGetGSLBFilterOutputWithContext(ctx context.Context) GetGSLBFilterOutput {
	return o
}

func (o GetGSLBFilterOutput) Conditions() GetGSLBFilterConditionArrayOutput {
	return o.ApplyT(func (v GetGSLBFilter) []GetGSLBFilterCondition { return v.Conditions }).(GetGSLBFilterConditionArrayOutput)
}

func (o GetGSLBFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetGSLBFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetGSLBFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetGSLBFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetGSLBFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetGSLBFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetGSLBFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetGSLBFilterConditionInput interface {
	pulumi.Input

	ToGetGSLBFilterConditionOutput() GetGSLBFilterConditionOutput
	ToGetGSLBFilterConditionOutputWithContext(context.Context) GetGSLBFilterConditionOutput
}

type GetGSLBFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetGSLBFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGSLBFilterCondition)(nil)).Elem()
}

func (i GetGSLBFilterConditionArgs) ToGetGSLBFilterConditionOutput() GetGSLBFilterConditionOutput {
	return i.ToGetGSLBFilterConditionOutputWithContext(context.Background())
}

func (i GetGSLBFilterConditionArgs) ToGetGSLBFilterConditionOutputWithContext(ctx context.Context) GetGSLBFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGSLBFilterConditionOutput)
}

type GetGSLBFilterConditionArrayInput interface {
	pulumi.Input

	ToGetGSLBFilterConditionArrayOutput() GetGSLBFilterConditionArrayOutput
	ToGetGSLBFilterConditionArrayOutputWithContext(context.Context) GetGSLBFilterConditionArrayOutput
}

type GetGSLBFilterConditionArray []GetGSLBFilterConditionInput

func (GetGSLBFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGSLBFilterCondition)(nil)).Elem()
}

func (i GetGSLBFilterConditionArray) ToGetGSLBFilterConditionArrayOutput() GetGSLBFilterConditionArrayOutput {
	return i.ToGetGSLBFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetGSLBFilterConditionArray) ToGetGSLBFilterConditionArrayOutputWithContext(ctx context.Context) GetGSLBFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGSLBFilterConditionArrayOutput)
}

type GetGSLBFilterConditionOutput struct { *pulumi.OutputState }

func (GetGSLBFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGSLBFilterCondition)(nil)).Elem()
}

func (o GetGSLBFilterConditionOutput) ToGetGSLBFilterConditionOutput() GetGSLBFilterConditionOutput {
	return o
}

func (o GetGSLBFilterConditionOutput) ToGetGSLBFilterConditionOutputWithContext(ctx context.Context) GetGSLBFilterConditionOutput {
	return o
}

func (o GetGSLBFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetGSLBFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetGSLBFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetGSLBFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetGSLBFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetGSLBFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGSLBFilterCondition)(nil)).Elem()
}

func (o GetGSLBFilterConditionArrayOutput) ToGetGSLBFilterConditionArrayOutput() GetGSLBFilterConditionArrayOutput {
	return o
}

func (o GetGSLBFilterConditionArrayOutput) ToGetGSLBFilterConditionArrayOutputWithContext(ctx context.Context) GetGSLBFilterConditionArrayOutput {
	return o
}

func (o GetGSLBFilterConditionArrayOutput) Index(i pulumi.IntInput) GetGSLBFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetGSLBFilterCondition {
		return vs[0].([]GetGSLBFilterCondition)[vs[1].(int)]
	}).(GetGSLBFilterConditionOutput)
}

type GetGSLBHealthCheck struct {
	DelayLoop int `pulumi:"delayLoop"`
	HostHeader string `pulumi:"hostHeader"`
	Path string `pulumi:"path"`
	Port int `pulumi:"port"`
	Protocol string `pulumi:"protocol"`
	Status string `pulumi:"status"`
}

type GetGSLBHealthCheckInput interface {
	pulumi.Input

	ToGetGSLBHealthCheckOutput() GetGSLBHealthCheckOutput
	ToGetGSLBHealthCheckOutputWithContext(context.Context) GetGSLBHealthCheckOutput
}

type GetGSLBHealthCheckArgs struct {
	DelayLoop pulumi.IntInput `pulumi:"delayLoop"`
	HostHeader pulumi.StringInput `pulumi:"hostHeader"`
	Path pulumi.StringInput `pulumi:"path"`
	Port pulumi.IntInput `pulumi:"port"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetGSLBHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGSLBHealthCheck)(nil)).Elem()
}

func (i GetGSLBHealthCheckArgs) ToGetGSLBHealthCheckOutput() GetGSLBHealthCheckOutput {
	return i.ToGetGSLBHealthCheckOutputWithContext(context.Background())
}

func (i GetGSLBHealthCheckArgs) ToGetGSLBHealthCheckOutputWithContext(ctx context.Context) GetGSLBHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGSLBHealthCheckOutput)
}

type GetGSLBHealthCheckArrayInput interface {
	pulumi.Input

	ToGetGSLBHealthCheckArrayOutput() GetGSLBHealthCheckArrayOutput
	ToGetGSLBHealthCheckArrayOutputWithContext(context.Context) GetGSLBHealthCheckArrayOutput
}

type GetGSLBHealthCheckArray []GetGSLBHealthCheckInput

func (GetGSLBHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGSLBHealthCheck)(nil)).Elem()
}

func (i GetGSLBHealthCheckArray) ToGetGSLBHealthCheckArrayOutput() GetGSLBHealthCheckArrayOutput {
	return i.ToGetGSLBHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetGSLBHealthCheckArray) ToGetGSLBHealthCheckArrayOutputWithContext(ctx context.Context) GetGSLBHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGSLBHealthCheckArrayOutput)
}

type GetGSLBHealthCheckOutput struct { *pulumi.OutputState }

func (GetGSLBHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGSLBHealthCheck)(nil)).Elem()
}

func (o GetGSLBHealthCheckOutput) ToGetGSLBHealthCheckOutput() GetGSLBHealthCheckOutput {
	return o
}

func (o GetGSLBHealthCheckOutput) ToGetGSLBHealthCheckOutputWithContext(ctx context.Context) GetGSLBHealthCheckOutput {
	return o
}

func (o GetGSLBHealthCheckOutput) DelayLoop() pulumi.IntOutput {
	return o.ApplyT(func (v GetGSLBHealthCheck) int { return v.DelayLoop }).(pulumi.IntOutput)
}

func (o GetGSLBHealthCheckOutput) HostHeader() pulumi.StringOutput {
	return o.ApplyT(func (v GetGSLBHealthCheck) string { return v.HostHeader }).(pulumi.StringOutput)
}

func (o GetGSLBHealthCheckOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func (v GetGSLBHealthCheck) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetGSLBHealthCheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func (v GetGSLBHealthCheck) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetGSLBHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v GetGSLBHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetGSLBHealthCheckOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func (v GetGSLBHealthCheck) string { return v.Status }).(pulumi.StringOutput)
}

type GetGSLBHealthCheckArrayOutput struct { *pulumi.OutputState}

func (GetGSLBHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGSLBHealthCheck)(nil)).Elem()
}

func (o GetGSLBHealthCheckArrayOutput) ToGetGSLBHealthCheckArrayOutput() GetGSLBHealthCheckArrayOutput {
	return o
}

func (o GetGSLBHealthCheckArrayOutput) ToGetGSLBHealthCheckArrayOutputWithContext(ctx context.Context) GetGSLBHealthCheckArrayOutput {
	return o
}

func (o GetGSLBHealthCheckArrayOutput) Index(i pulumi.IntInput) GetGSLBHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetGSLBHealthCheck {
		return vs[0].([]GetGSLBHealthCheck)[vs[1].(int)]
	}).(GetGSLBHealthCheckOutput)
}

type GetGSLBServer struct {
	Enabled bool `pulumi:"enabled"`
	IpAddress string `pulumi:"ipAddress"`
	Weight int `pulumi:"weight"`
}

type GetGSLBServerInput interface {
	pulumi.Input

	ToGetGSLBServerOutput() GetGSLBServerOutput
	ToGetGSLBServerOutputWithContext(context.Context) GetGSLBServerOutput
}

type GetGSLBServerArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	Weight pulumi.IntInput `pulumi:"weight"`
}

func (GetGSLBServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGSLBServer)(nil)).Elem()
}

func (i GetGSLBServerArgs) ToGetGSLBServerOutput() GetGSLBServerOutput {
	return i.ToGetGSLBServerOutputWithContext(context.Background())
}

func (i GetGSLBServerArgs) ToGetGSLBServerOutputWithContext(ctx context.Context) GetGSLBServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGSLBServerOutput)
}

type GetGSLBServerArrayInput interface {
	pulumi.Input

	ToGetGSLBServerArrayOutput() GetGSLBServerArrayOutput
	ToGetGSLBServerArrayOutputWithContext(context.Context) GetGSLBServerArrayOutput
}

type GetGSLBServerArray []GetGSLBServerInput

func (GetGSLBServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGSLBServer)(nil)).Elem()
}

func (i GetGSLBServerArray) ToGetGSLBServerArrayOutput() GetGSLBServerArrayOutput {
	return i.ToGetGSLBServerArrayOutputWithContext(context.Background())
}

func (i GetGSLBServerArray) ToGetGSLBServerArrayOutputWithContext(ctx context.Context) GetGSLBServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGSLBServerArrayOutput)
}

type GetGSLBServerOutput struct { *pulumi.OutputState }

func (GetGSLBServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGSLBServer)(nil)).Elem()
}

func (o GetGSLBServerOutput) ToGetGSLBServerOutput() GetGSLBServerOutput {
	return o
}

func (o GetGSLBServerOutput) ToGetGSLBServerOutputWithContext(ctx context.Context) GetGSLBServerOutput {
	return o
}

func (o GetGSLBServerOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v GetGSLBServer) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetGSLBServerOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v GetGSLBServer) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetGSLBServerOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func (v GetGSLBServer) int { return v.Weight }).(pulumi.IntOutput)
}

type GetGSLBServerArrayOutput struct { *pulumi.OutputState}

func (GetGSLBServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGSLBServer)(nil)).Elem()
}

func (o GetGSLBServerArrayOutput) ToGetGSLBServerArrayOutput() GetGSLBServerArrayOutput {
	return o
}

func (o GetGSLBServerArrayOutput) ToGetGSLBServerArrayOutputWithContext(ctx context.Context) GetGSLBServerArrayOutput {
	return o
}

func (o GetGSLBServerArrayOutput) Index(i pulumi.IntInput) GetGSLBServerOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetGSLBServer {
		return vs[0].([]GetGSLBServer)[vs[1].(int)]
	}).(GetGSLBServerOutput)
}

type GetIconFilter struct {
	Conditions []GetIconFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetIconFilterInput interface {
	pulumi.Input

	ToGetIconFilterOutput() GetIconFilterOutput
	ToGetIconFilterOutputWithContext(context.Context) GetIconFilterOutput
}

type GetIconFilterArgs struct {
	Conditions GetIconFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetIconFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIconFilter)(nil)).Elem()
}

func (i GetIconFilterArgs) ToGetIconFilterOutput() GetIconFilterOutput {
	return i.ToGetIconFilterOutputWithContext(context.Background())
}

func (i GetIconFilterArgs) ToGetIconFilterOutputWithContext(ctx context.Context) GetIconFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIconFilterOutput)
}

type GetIconFilterOutput struct { *pulumi.OutputState }

func (GetIconFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIconFilter)(nil)).Elem()
}

func (o GetIconFilterOutput) ToGetIconFilterOutput() GetIconFilterOutput {
	return o
}

func (o GetIconFilterOutput) ToGetIconFilterOutputWithContext(ctx context.Context) GetIconFilterOutput {
	return o
}

func (o GetIconFilterOutput) Conditions() GetIconFilterConditionArrayOutput {
	return o.ApplyT(func (v GetIconFilter) []GetIconFilterCondition { return v.Conditions }).(GetIconFilterConditionArrayOutput)
}

func (o GetIconFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetIconFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetIconFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetIconFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetIconFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetIconFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetIconFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetIconFilterConditionInput interface {
	pulumi.Input

	ToGetIconFilterConditionOutput() GetIconFilterConditionOutput
	ToGetIconFilterConditionOutputWithContext(context.Context) GetIconFilterConditionOutput
}

type GetIconFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetIconFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIconFilterCondition)(nil)).Elem()
}

func (i GetIconFilterConditionArgs) ToGetIconFilterConditionOutput() GetIconFilterConditionOutput {
	return i.ToGetIconFilterConditionOutputWithContext(context.Background())
}

func (i GetIconFilterConditionArgs) ToGetIconFilterConditionOutputWithContext(ctx context.Context) GetIconFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIconFilterConditionOutput)
}

type GetIconFilterConditionArrayInput interface {
	pulumi.Input

	ToGetIconFilterConditionArrayOutput() GetIconFilterConditionArrayOutput
	ToGetIconFilterConditionArrayOutputWithContext(context.Context) GetIconFilterConditionArrayOutput
}

type GetIconFilterConditionArray []GetIconFilterConditionInput

func (GetIconFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIconFilterCondition)(nil)).Elem()
}

func (i GetIconFilterConditionArray) ToGetIconFilterConditionArrayOutput() GetIconFilterConditionArrayOutput {
	return i.ToGetIconFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetIconFilterConditionArray) ToGetIconFilterConditionArrayOutputWithContext(ctx context.Context) GetIconFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIconFilterConditionArrayOutput)
}

type GetIconFilterConditionOutput struct { *pulumi.OutputState }

func (GetIconFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIconFilterCondition)(nil)).Elem()
}

func (o GetIconFilterConditionOutput) ToGetIconFilterConditionOutput() GetIconFilterConditionOutput {
	return o
}

func (o GetIconFilterConditionOutput) ToGetIconFilterConditionOutputWithContext(ctx context.Context) GetIconFilterConditionOutput {
	return o
}

func (o GetIconFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetIconFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetIconFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetIconFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetIconFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetIconFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIconFilterCondition)(nil)).Elem()
}

func (o GetIconFilterConditionArrayOutput) ToGetIconFilterConditionArrayOutput() GetIconFilterConditionArrayOutput {
	return o
}

func (o GetIconFilterConditionArrayOutput) ToGetIconFilterConditionArrayOutputWithContext(ctx context.Context) GetIconFilterConditionArrayOutput {
	return o
}

func (o GetIconFilterConditionArrayOutput) Index(i pulumi.IntInput) GetIconFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetIconFilterCondition {
		return vs[0].([]GetIconFilterCondition)[vs[1].(int)]
	}).(GetIconFilterConditionOutput)
}

type GetInternetFilter struct {
	Conditions []GetInternetFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetInternetFilterInput interface {
	pulumi.Input

	ToGetInternetFilterOutput() GetInternetFilterOutput
	ToGetInternetFilterOutputWithContext(context.Context) GetInternetFilterOutput
}

type GetInternetFilterArgs struct {
	Conditions GetInternetFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetInternetFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetFilter)(nil)).Elem()
}

func (i GetInternetFilterArgs) ToGetInternetFilterOutput() GetInternetFilterOutput {
	return i.ToGetInternetFilterOutputWithContext(context.Background())
}

func (i GetInternetFilterArgs) ToGetInternetFilterOutputWithContext(ctx context.Context) GetInternetFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetFilterOutput)
}

type GetInternetFilterOutput struct { *pulumi.OutputState }

func (GetInternetFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetFilter)(nil)).Elem()
}

func (o GetInternetFilterOutput) ToGetInternetFilterOutput() GetInternetFilterOutput {
	return o
}

func (o GetInternetFilterOutput) ToGetInternetFilterOutputWithContext(ctx context.Context) GetInternetFilterOutput {
	return o
}

func (o GetInternetFilterOutput) Conditions() GetInternetFilterConditionArrayOutput {
	return o.ApplyT(func (v GetInternetFilter) []GetInternetFilterCondition { return v.Conditions }).(GetInternetFilterConditionArrayOutput)
}

func (o GetInternetFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetInternetFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetInternetFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetInternetFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetInternetFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetInternetFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetInternetFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetInternetFilterConditionInput interface {
	pulumi.Input

	ToGetInternetFilterConditionOutput() GetInternetFilterConditionOutput
	ToGetInternetFilterConditionOutputWithContext(context.Context) GetInternetFilterConditionOutput
}

type GetInternetFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInternetFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetFilterCondition)(nil)).Elem()
}

func (i GetInternetFilterConditionArgs) ToGetInternetFilterConditionOutput() GetInternetFilterConditionOutput {
	return i.ToGetInternetFilterConditionOutputWithContext(context.Background())
}

func (i GetInternetFilterConditionArgs) ToGetInternetFilterConditionOutputWithContext(ctx context.Context) GetInternetFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetFilterConditionOutput)
}

type GetInternetFilterConditionArrayInput interface {
	pulumi.Input

	ToGetInternetFilterConditionArrayOutput() GetInternetFilterConditionArrayOutput
	ToGetInternetFilterConditionArrayOutputWithContext(context.Context) GetInternetFilterConditionArrayOutput
}

type GetInternetFilterConditionArray []GetInternetFilterConditionInput

func (GetInternetFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetFilterCondition)(nil)).Elem()
}

func (i GetInternetFilterConditionArray) ToGetInternetFilterConditionArrayOutput() GetInternetFilterConditionArrayOutput {
	return i.ToGetInternetFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetInternetFilterConditionArray) ToGetInternetFilterConditionArrayOutputWithContext(ctx context.Context) GetInternetFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInternetFilterConditionArrayOutput)
}

type GetInternetFilterConditionOutput struct { *pulumi.OutputState }

func (GetInternetFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInternetFilterCondition)(nil)).Elem()
}

func (o GetInternetFilterConditionOutput) ToGetInternetFilterConditionOutput() GetInternetFilterConditionOutput {
	return o
}

func (o GetInternetFilterConditionOutput) ToGetInternetFilterConditionOutputWithContext(ctx context.Context) GetInternetFilterConditionOutput {
	return o
}

func (o GetInternetFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetInternetFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInternetFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetInternetFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInternetFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetInternetFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInternetFilterCondition)(nil)).Elem()
}

func (o GetInternetFilterConditionArrayOutput) ToGetInternetFilterConditionArrayOutput() GetInternetFilterConditionArrayOutput {
	return o
}

func (o GetInternetFilterConditionArrayOutput) ToGetInternetFilterConditionArrayOutputWithContext(ctx context.Context) GetInternetFilterConditionArrayOutput {
	return o
}

func (o GetInternetFilterConditionArrayOutput) Index(i pulumi.IntInput) GetInternetFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetInternetFilterCondition {
		return vs[0].([]GetInternetFilterCondition)[vs[1].(int)]
	}).(GetInternetFilterConditionOutput)
}

type GetLoadBalancerFilter struct {
	Conditions []GetLoadBalancerFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetLoadBalancerFilterInput interface {
	pulumi.Input

	ToGetLoadBalancerFilterOutput() GetLoadBalancerFilterOutput
	ToGetLoadBalancerFilterOutputWithContext(context.Context) GetLoadBalancerFilterOutput
}

type GetLoadBalancerFilterArgs struct {
	Conditions GetLoadBalancerFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetLoadBalancerFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerFilter)(nil)).Elem()
}

func (i GetLoadBalancerFilterArgs) ToGetLoadBalancerFilterOutput() GetLoadBalancerFilterOutput {
	return i.ToGetLoadBalancerFilterOutputWithContext(context.Background())
}

func (i GetLoadBalancerFilterArgs) ToGetLoadBalancerFilterOutputWithContext(ctx context.Context) GetLoadBalancerFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerFilterOutput)
}

type GetLoadBalancerFilterOutput struct { *pulumi.OutputState }

func (GetLoadBalancerFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerFilter)(nil)).Elem()
}

func (o GetLoadBalancerFilterOutput) ToGetLoadBalancerFilterOutput() GetLoadBalancerFilterOutput {
	return o
}

func (o GetLoadBalancerFilterOutput) ToGetLoadBalancerFilterOutputWithContext(ctx context.Context) GetLoadBalancerFilterOutput {
	return o
}

func (o GetLoadBalancerFilterOutput) Conditions() GetLoadBalancerFilterConditionArrayOutput {
	return o.ApplyT(func (v GetLoadBalancerFilter) []GetLoadBalancerFilterCondition { return v.Conditions }).(GetLoadBalancerFilterConditionArrayOutput)
}

func (o GetLoadBalancerFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetLoadBalancerFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetLoadBalancerFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetLoadBalancerFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetLoadBalancerFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetLoadBalancerFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetLoadBalancerFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetLoadBalancerFilterConditionInput interface {
	pulumi.Input

	ToGetLoadBalancerFilterConditionOutput() GetLoadBalancerFilterConditionOutput
	ToGetLoadBalancerFilterConditionOutputWithContext(context.Context) GetLoadBalancerFilterConditionOutput
}

type GetLoadBalancerFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLoadBalancerFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerFilterCondition)(nil)).Elem()
}

func (i GetLoadBalancerFilterConditionArgs) ToGetLoadBalancerFilterConditionOutput() GetLoadBalancerFilterConditionOutput {
	return i.ToGetLoadBalancerFilterConditionOutputWithContext(context.Background())
}

func (i GetLoadBalancerFilterConditionArgs) ToGetLoadBalancerFilterConditionOutputWithContext(ctx context.Context) GetLoadBalancerFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerFilterConditionOutput)
}

type GetLoadBalancerFilterConditionArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerFilterConditionArrayOutput() GetLoadBalancerFilterConditionArrayOutput
	ToGetLoadBalancerFilterConditionArrayOutputWithContext(context.Context) GetLoadBalancerFilterConditionArrayOutput
}

type GetLoadBalancerFilterConditionArray []GetLoadBalancerFilterConditionInput

func (GetLoadBalancerFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerFilterCondition)(nil)).Elem()
}

func (i GetLoadBalancerFilterConditionArray) ToGetLoadBalancerFilterConditionArrayOutput() GetLoadBalancerFilterConditionArrayOutput {
	return i.ToGetLoadBalancerFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerFilterConditionArray) ToGetLoadBalancerFilterConditionArrayOutputWithContext(ctx context.Context) GetLoadBalancerFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerFilterConditionArrayOutput)
}

type GetLoadBalancerFilterConditionOutput struct { *pulumi.OutputState }

func (GetLoadBalancerFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerFilterCondition)(nil)).Elem()
}

func (o GetLoadBalancerFilterConditionOutput) ToGetLoadBalancerFilterConditionOutput() GetLoadBalancerFilterConditionOutput {
	return o
}

func (o GetLoadBalancerFilterConditionOutput) ToGetLoadBalancerFilterConditionOutputWithContext(ctx context.Context) GetLoadBalancerFilterConditionOutput {
	return o
}

func (o GetLoadBalancerFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetLoadBalancerFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLoadBalancerFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetLoadBalancerFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLoadBalancerFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetLoadBalancerFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerFilterCondition)(nil)).Elem()
}

func (o GetLoadBalancerFilterConditionArrayOutput) ToGetLoadBalancerFilterConditionArrayOutput() GetLoadBalancerFilterConditionArrayOutput {
	return o
}

func (o GetLoadBalancerFilterConditionArrayOutput) ToGetLoadBalancerFilterConditionArrayOutputWithContext(ctx context.Context) GetLoadBalancerFilterConditionArrayOutput {
	return o
}

func (o GetLoadBalancerFilterConditionArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetLoadBalancerFilterCondition {
		return vs[0].([]GetLoadBalancerFilterCondition)[vs[1].(int)]
	}).(GetLoadBalancerFilterConditionOutput)
}

type GetLoadBalancerNetworkInterface struct {
	Gateway string `pulumi:"gateway"`
	IpAddresses []string `pulumi:"ipAddresses"`
	Netmask int `pulumi:"netmask"`
	SwitchId string `pulumi:"switchId"`
	Vrid int `pulumi:"vrid"`
}

type GetLoadBalancerNetworkInterfaceInput interface {
	pulumi.Input

	ToGetLoadBalancerNetworkInterfaceOutput() GetLoadBalancerNetworkInterfaceOutput
	ToGetLoadBalancerNetworkInterfaceOutputWithContext(context.Context) GetLoadBalancerNetworkInterfaceOutput
}

type GetLoadBalancerNetworkInterfaceArgs struct {
	Gateway pulumi.StringInput `pulumi:"gateway"`
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	Netmask pulumi.IntInput `pulumi:"netmask"`
	SwitchId pulumi.StringInput `pulumi:"switchId"`
	Vrid pulumi.IntInput `pulumi:"vrid"`
}

func (GetLoadBalancerNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerNetworkInterface)(nil)).Elem()
}

func (i GetLoadBalancerNetworkInterfaceArgs) ToGetLoadBalancerNetworkInterfaceOutput() GetLoadBalancerNetworkInterfaceOutput {
	return i.ToGetLoadBalancerNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetLoadBalancerNetworkInterfaceArgs) ToGetLoadBalancerNetworkInterfaceOutputWithContext(ctx context.Context) GetLoadBalancerNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerNetworkInterfaceOutput)
}

type GetLoadBalancerNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerNetworkInterfaceArrayOutput() GetLoadBalancerNetworkInterfaceArrayOutput
	ToGetLoadBalancerNetworkInterfaceArrayOutputWithContext(context.Context) GetLoadBalancerNetworkInterfaceArrayOutput
}

type GetLoadBalancerNetworkInterfaceArray []GetLoadBalancerNetworkInterfaceInput

func (GetLoadBalancerNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerNetworkInterface)(nil)).Elem()
}

func (i GetLoadBalancerNetworkInterfaceArray) ToGetLoadBalancerNetworkInterfaceArrayOutput() GetLoadBalancerNetworkInterfaceArrayOutput {
	return i.ToGetLoadBalancerNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerNetworkInterfaceArray) ToGetLoadBalancerNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetLoadBalancerNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerNetworkInterfaceArrayOutput)
}

type GetLoadBalancerNetworkInterfaceOutput struct { *pulumi.OutputState }

func (GetLoadBalancerNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerNetworkInterface)(nil)).Elem()
}

func (o GetLoadBalancerNetworkInterfaceOutput) ToGetLoadBalancerNetworkInterfaceOutput() GetLoadBalancerNetworkInterfaceOutput {
	return o
}

func (o GetLoadBalancerNetworkInterfaceOutput) ToGetLoadBalancerNetworkInterfaceOutputWithContext(ctx context.Context) GetLoadBalancerNetworkInterfaceOutput {
	return o
}

func (o GetLoadBalancerNetworkInterfaceOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func (v GetLoadBalancerNetworkInterface) string { return v.Gateway }).(pulumi.StringOutput)
}

func (o GetLoadBalancerNetworkInterfaceOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetLoadBalancerNetworkInterface) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o GetLoadBalancerNetworkInterfaceOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v GetLoadBalancerNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o GetLoadBalancerNetworkInterfaceOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func (v GetLoadBalancerNetworkInterface) string { return v.SwitchId }).(pulumi.StringOutput)
}

func (o GetLoadBalancerNetworkInterfaceOutput) Vrid() pulumi.IntOutput {
	return o.ApplyT(func (v GetLoadBalancerNetworkInterface) int { return v.Vrid }).(pulumi.IntOutput)
}

type GetLoadBalancerNetworkInterfaceArrayOutput struct { *pulumi.OutputState}

func (GetLoadBalancerNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerNetworkInterface)(nil)).Elem()
}

func (o GetLoadBalancerNetworkInterfaceArrayOutput) ToGetLoadBalancerNetworkInterfaceArrayOutput() GetLoadBalancerNetworkInterfaceArrayOutput {
	return o
}

func (o GetLoadBalancerNetworkInterfaceArrayOutput) ToGetLoadBalancerNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetLoadBalancerNetworkInterfaceArrayOutput {
	return o
}

func (o GetLoadBalancerNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetLoadBalancerNetworkInterface {
		return vs[0].([]GetLoadBalancerNetworkInterface)[vs[1].(int)]
	}).(GetLoadBalancerNetworkInterfaceOutput)
}

type GetLoadBalancerVip struct {
	DelayLoop int `pulumi:"delayLoop"`
	Description string `pulumi:"description"`
	Port int `pulumi:"port"`
	Servers []GetLoadBalancerVipServer `pulumi:"servers"`
	SorryServer string `pulumi:"sorryServer"`
	Vip string `pulumi:"vip"`
}

type GetLoadBalancerVipInput interface {
	pulumi.Input

	ToGetLoadBalancerVipOutput() GetLoadBalancerVipOutput
	ToGetLoadBalancerVipOutputWithContext(context.Context) GetLoadBalancerVipOutput
}

type GetLoadBalancerVipArgs struct {
	DelayLoop pulumi.IntInput `pulumi:"delayLoop"`
	Description pulumi.StringInput `pulumi:"description"`
	Port pulumi.IntInput `pulumi:"port"`
	Servers GetLoadBalancerVipServerArrayInput `pulumi:"servers"`
	SorryServer pulumi.StringInput `pulumi:"sorryServer"`
	Vip pulumi.StringInput `pulumi:"vip"`
}

func (GetLoadBalancerVipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerVip)(nil)).Elem()
}

func (i GetLoadBalancerVipArgs) ToGetLoadBalancerVipOutput() GetLoadBalancerVipOutput {
	return i.ToGetLoadBalancerVipOutputWithContext(context.Background())
}

func (i GetLoadBalancerVipArgs) ToGetLoadBalancerVipOutputWithContext(ctx context.Context) GetLoadBalancerVipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerVipOutput)
}

type GetLoadBalancerVipArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerVipArrayOutput() GetLoadBalancerVipArrayOutput
	ToGetLoadBalancerVipArrayOutputWithContext(context.Context) GetLoadBalancerVipArrayOutput
}

type GetLoadBalancerVipArray []GetLoadBalancerVipInput

func (GetLoadBalancerVipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerVip)(nil)).Elem()
}

func (i GetLoadBalancerVipArray) ToGetLoadBalancerVipArrayOutput() GetLoadBalancerVipArrayOutput {
	return i.ToGetLoadBalancerVipArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerVipArray) ToGetLoadBalancerVipArrayOutputWithContext(ctx context.Context) GetLoadBalancerVipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerVipArrayOutput)
}

type GetLoadBalancerVipOutput struct { *pulumi.OutputState }

func (GetLoadBalancerVipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerVip)(nil)).Elem()
}

func (o GetLoadBalancerVipOutput) ToGetLoadBalancerVipOutput() GetLoadBalancerVipOutput {
	return o
}

func (o GetLoadBalancerVipOutput) ToGetLoadBalancerVipOutputWithContext(ctx context.Context) GetLoadBalancerVipOutput {
	return o
}

func (o GetLoadBalancerVipOutput) DelayLoop() pulumi.IntOutput {
	return o.ApplyT(func (v GetLoadBalancerVip) int { return v.DelayLoop }).(pulumi.IntOutput)
}

func (o GetLoadBalancerVipOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func (v GetLoadBalancerVip) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetLoadBalancerVipOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func (v GetLoadBalancerVip) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetLoadBalancerVipOutput) Servers() GetLoadBalancerVipServerArrayOutput {
	return o.ApplyT(func (v GetLoadBalancerVip) []GetLoadBalancerVipServer { return v.Servers }).(GetLoadBalancerVipServerArrayOutput)
}

func (o GetLoadBalancerVipOutput) SorryServer() pulumi.StringOutput {
	return o.ApplyT(func (v GetLoadBalancerVip) string { return v.SorryServer }).(pulumi.StringOutput)
}

func (o GetLoadBalancerVipOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func (v GetLoadBalancerVip) string { return v.Vip }).(pulumi.StringOutput)
}

type GetLoadBalancerVipArrayOutput struct { *pulumi.OutputState}

func (GetLoadBalancerVipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerVip)(nil)).Elem()
}

func (o GetLoadBalancerVipArrayOutput) ToGetLoadBalancerVipArrayOutput() GetLoadBalancerVipArrayOutput {
	return o
}

func (o GetLoadBalancerVipArrayOutput) ToGetLoadBalancerVipArrayOutputWithContext(ctx context.Context) GetLoadBalancerVipArrayOutput {
	return o
}

func (o GetLoadBalancerVipArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerVipOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetLoadBalancerVip {
		return vs[0].([]GetLoadBalancerVip)[vs[1].(int)]
	}).(GetLoadBalancerVipOutput)
}

type GetLoadBalancerVipServer struct {
	Enabled bool `pulumi:"enabled"`
	IpAddress string `pulumi:"ipAddress"`
	Path string `pulumi:"path"`
	Protocol string `pulumi:"protocol"`
	Status string `pulumi:"status"`
}

type GetLoadBalancerVipServerInput interface {
	pulumi.Input

	ToGetLoadBalancerVipServerOutput() GetLoadBalancerVipServerOutput
	ToGetLoadBalancerVipServerOutputWithContext(context.Context) GetLoadBalancerVipServerOutput
}

type GetLoadBalancerVipServerArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	Path pulumi.StringInput `pulumi:"path"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetLoadBalancerVipServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerVipServer)(nil)).Elem()
}

func (i GetLoadBalancerVipServerArgs) ToGetLoadBalancerVipServerOutput() GetLoadBalancerVipServerOutput {
	return i.ToGetLoadBalancerVipServerOutputWithContext(context.Background())
}

func (i GetLoadBalancerVipServerArgs) ToGetLoadBalancerVipServerOutputWithContext(ctx context.Context) GetLoadBalancerVipServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerVipServerOutput)
}

type GetLoadBalancerVipServerArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerVipServerArrayOutput() GetLoadBalancerVipServerArrayOutput
	ToGetLoadBalancerVipServerArrayOutputWithContext(context.Context) GetLoadBalancerVipServerArrayOutput
}

type GetLoadBalancerVipServerArray []GetLoadBalancerVipServerInput

func (GetLoadBalancerVipServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerVipServer)(nil)).Elem()
}

func (i GetLoadBalancerVipServerArray) ToGetLoadBalancerVipServerArrayOutput() GetLoadBalancerVipServerArrayOutput {
	return i.ToGetLoadBalancerVipServerArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerVipServerArray) ToGetLoadBalancerVipServerArrayOutputWithContext(ctx context.Context) GetLoadBalancerVipServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerVipServerArrayOutput)
}

type GetLoadBalancerVipServerOutput struct { *pulumi.OutputState }

func (GetLoadBalancerVipServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerVipServer)(nil)).Elem()
}

func (o GetLoadBalancerVipServerOutput) ToGetLoadBalancerVipServerOutput() GetLoadBalancerVipServerOutput {
	return o
}

func (o GetLoadBalancerVipServerOutput) ToGetLoadBalancerVipServerOutputWithContext(ctx context.Context) GetLoadBalancerVipServerOutput {
	return o
}

func (o GetLoadBalancerVipServerOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v GetLoadBalancerVipServer) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetLoadBalancerVipServerOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v GetLoadBalancerVipServer) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetLoadBalancerVipServerOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func (v GetLoadBalancerVipServer) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetLoadBalancerVipServerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v GetLoadBalancerVipServer) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetLoadBalancerVipServerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func (v GetLoadBalancerVipServer) string { return v.Status }).(pulumi.StringOutput)
}

type GetLoadBalancerVipServerArrayOutput struct { *pulumi.OutputState}

func (GetLoadBalancerVipServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerVipServer)(nil)).Elem()
}

func (o GetLoadBalancerVipServerArrayOutput) ToGetLoadBalancerVipServerArrayOutput() GetLoadBalancerVipServerArrayOutput {
	return o
}

func (o GetLoadBalancerVipServerArrayOutput) ToGetLoadBalancerVipServerArrayOutputWithContext(ctx context.Context) GetLoadBalancerVipServerArrayOutput {
	return o
}

func (o GetLoadBalancerVipServerArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerVipServerOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetLoadBalancerVipServer {
		return vs[0].([]GetLoadBalancerVipServer)[vs[1].(int)]
	}).(GetLoadBalancerVipServerOutput)
}

type GetLocalRouterFilter struct {
	Conditions []GetLocalRouterFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetLocalRouterFilterInput interface {
	pulumi.Input

	ToGetLocalRouterFilterOutput() GetLocalRouterFilterOutput
	ToGetLocalRouterFilterOutputWithContext(context.Context) GetLocalRouterFilterOutput
}

type GetLocalRouterFilterArgs struct {
	Conditions GetLocalRouterFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetLocalRouterFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalRouterFilter)(nil)).Elem()
}

func (i GetLocalRouterFilterArgs) ToGetLocalRouterFilterOutput() GetLocalRouterFilterOutput {
	return i.ToGetLocalRouterFilterOutputWithContext(context.Background())
}

func (i GetLocalRouterFilterArgs) ToGetLocalRouterFilterOutputWithContext(ctx context.Context) GetLocalRouterFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalRouterFilterOutput)
}

type GetLocalRouterFilterOutput struct { *pulumi.OutputState }

func (GetLocalRouterFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalRouterFilter)(nil)).Elem()
}

func (o GetLocalRouterFilterOutput) ToGetLocalRouterFilterOutput() GetLocalRouterFilterOutput {
	return o
}

func (o GetLocalRouterFilterOutput) ToGetLocalRouterFilterOutputWithContext(ctx context.Context) GetLocalRouterFilterOutput {
	return o
}

func (o GetLocalRouterFilterOutput) Conditions() GetLocalRouterFilterConditionArrayOutput {
	return o.ApplyT(func (v GetLocalRouterFilter) []GetLocalRouterFilterCondition { return v.Conditions }).(GetLocalRouterFilterConditionArrayOutput)
}

func (o GetLocalRouterFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetLocalRouterFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetLocalRouterFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetLocalRouterFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetLocalRouterFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetLocalRouterFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetLocalRouterFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetLocalRouterFilterConditionInput interface {
	pulumi.Input

	ToGetLocalRouterFilterConditionOutput() GetLocalRouterFilterConditionOutput
	ToGetLocalRouterFilterConditionOutputWithContext(context.Context) GetLocalRouterFilterConditionOutput
}

type GetLocalRouterFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetLocalRouterFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalRouterFilterCondition)(nil)).Elem()
}

func (i GetLocalRouterFilterConditionArgs) ToGetLocalRouterFilterConditionOutput() GetLocalRouterFilterConditionOutput {
	return i.ToGetLocalRouterFilterConditionOutputWithContext(context.Background())
}

func (i GetLocalRouterFilterConditionArgs) ToGetLocalRouterFilterConditionOutputWithContext(ctx context.Context) GetLocalRouterFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalRouterFilterConditionOutput)
}

type GetLocalRouterFilterConditionArrayInput interface {
	pulumi.Input

	ToGetLocalRouterFilterConditionArrayOutput() GetLocalRouterFilterConditionArrayOutput
	ToGetLocalRouterFilterConditionArrayOutputWithContext(context.Context) GetLocalRouterFilterConditionArrayOutput
}

type GetLocalRouterFilterConditionArray []GetLocalRouterFilterConditionInput

func (GetLocalRouterFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocalRouterFilterCondition)(nil)).Elem()
}

func (i GetLocalRouterFilterConditionArray) ToGetLocalRouterFilterConditionArrayOutput() GetLocalRouterFilterConditionArrayOutput {
	return i.ToGetLocalRouterFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetLocalRouterFilterConditionArray) ToGetLocalRouterFilterConditionArrayOutputWithContext(ctx context.Context) GetLocalRouterFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalRouterFilterConditionArrayOutput)
}

type GetLocalRouterFilterConditionOutput struct { *pulumi.OutputState }

func (GetLocalRouterFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalRouterFilterCondition)(nil)).Elem()
}

func (o GetLocalRouterFilterConditionOutput) ToGetLocalRouterFilterConditionOutput() GetLocalRouterFilterConditionOutput {
	return o
}

func (o GetLocalRouterFilterConditionOutput) ToGetLocalRouterFilterConditionOutputWithContext(ctx context.Context) GetLocalRouterFilterConditionOutput {
	return o
}

func (o GetLocalRouterFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetLocalRouterFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetLocalRouterFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetLocalRouterFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetLocalRouterFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetLocalRouterFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocalRouterFilterCondition)(nil)).Elem()
}

func (o GetLocalRouterFilterConditionArrayOutput) ToGetLocalRouterFilterConditionArrayOutput() GetLocalRouterFilterConditionArrayOutput {
	return o
}

func (o GetLocalRouterFilterConditionArrayOutput) ToGetLocalRouterFilterConditionArrayOutputWithContext(ctx context.Context) GetLocalRouterFilterConditionArrayOutput {
	return o
}

func (o GetLocalRouterFilterConditionArrayOutput) Index(i pulumi.IntInput) GetLocalRouterFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetLocalRouterFilterCondition {
		return vs[0].([]GetLocalRouterFilterCondition)[vs[1].(int)]
	}).(GetLocalRouterFilterConditionOutput)
}

type GetLocalRouterNetworkInterface struct {
	IpAddresses []string `pulumi:"ipAddresses"`
	Netmask int `pulumi:"netmask"`
	Vip string `pulumi:"vip"`
	Vrid int `pulumi:"vrid"`
}

type GetLocalRouterNetworkInterfaceInput interface {
	pulumi.Input

	ToGetLocalRouterNetworkInterfaceOutput() GetLocalRouterNetworkInterfaceOutput
	ToGetLocalRouterNetworkInterfaceOutputWithContext(context.Context) GetLocalRouterNetworkInterfaceOutput
}

type GetLocalRouterNetworkInterfaceArgs struct {
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	Netmask pulumi.IntInput `pulumi:"netmask"`
	Vip pulumi.StringInput `pulumi:"vip"`
	Vrid pulumi.IntInput `pulumi:"vrid"`
}

func (GetLocalRouterNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalRouterNetworkInterface)(nil)).Elem()
}

func (i GetLocalRouterNetworkInterfaceArgs) ToGetLocalRouterNetworkInterfaceOutput() GetLocalRouterNetworkInterfaceOutput {
	return i.ToGetLocalRouterNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetLocalRouterNetworkInterfaceArgs) ToGetLocalRouterNetworkInterfaceOutputWithContext(ctx context.Context) GetLocalRouterNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalRouterNetworkInterfaceOutput)
}

type GetLocalRouterNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetLocalRouterNetworkInterfaceArrayOutput() GetLocalRouterNetworkInterfaceArrayOutput
	ToGetLocalRouterNetworkInterfaceArrayOutputWithContext(context.Context) GetLocalRouterNetworkInterfaceArrayOutput
}

type GetLocalRouterNetworkInterfaceArray []GetLocalRouterNetworkInterfaceInput

func (GetLocalRouterNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocalRouterNetworkInterface)(nil)).Elem()
}

func (i GetLocalRouterNetworkInterfaceArray) ToGetLocalRouterNetworkInterfaceArrayOutput() GetLocalRouterNetworkInterfaceArrayOutput {
	return i.ToGetLocalRouterNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetLocalRouterNetworkInterfaceArray) ToGetLocalRouterNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetLocalRouterNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalRouterNetworkInterfaceArrayOutput)
}

type GetLocalRouterNetworkInterfaceOutput struct { *pulumi.OutputState }

func (GetLocalRouterNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalRouterNetworkInterface)(nil)).Elem()
}

func (o GetLocalRouterNetworkInterfaceOutput) ToGetLocalRouterNetworkInterfaceOutput() GetLocalRouterNetworkInterfaceOutput {
	return o
}

func (o GetLocalRouterNetworkInterfaceOutput) ToGetLocalRouterNetworkInterfaceOutputWithContext(ctx context.Context) GetLocalRouterNetworkInterfaceOutput {
	return o
}

func (o GetLocalRouterNetworkInterfaceOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetLocalRouterNetworkInterface) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o GetLocalRouterNetworkInterfaceOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v GetLocalRouterNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o GetLocalRouterNetworkInterfaceOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func (v GetLocalRouterNetworkInterface) string { return v.Vip }).(pulumi.StringOutput)
}

func (o GetLocalRouterNetworkInterfaceOutput) Vrid() pulumi.IntOutput {
	return o.ApplyT(func (v GetLocalRouterNetworkInterface) int { return v.Vrid }).(pulumi.IntOutput)
}

type GetLocalRouterNetworkInterfaceArrayOutput struct { *pulumi.OutputState}

func (GetLocalRouterNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocalRouterNetworkInterface)(nil)).Elem()
}

func (o GetLocalRouterNetworkInterfaceArrayOutput) ToGetLocalRouterNetworkInterfaceArrayOutput() GetLocalRouterNetworkInterfaceArrayOutput {
	return o
}

func (o GetLocalRouterNetworkInterfaceArrayOutput) ToGetLocalRouterNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetLocalRouterNetworkInterfaceArrayOutput {
	return o
}

func (o GetLocalRouterNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetLocalRouterNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetLocalRouterNetworkInterface {
		return vs[0].([]GetLocalRouterNetworkInterface)[vs[1].(int)]
	}).(GetLocalRouterNetworkInterfaceOutput)
}

type GetLocalRouterPeer struct {
	Description string `pulumi:"description"`
	Enabled bool `pulumi:"enabled"`
	PeerId string `pulumi:"peerId"`
	SecretKey string `pulumi:"secretKey"`
}

type GetLocalRouterPeerInput interface {
	pulumi.Input

	ToGetLocalRouterPeerOutput() GetLocalRouterPeerOutput
	ToGetLocalRouterPeerOutputWithContext(context.Context) GetLocalRouterPeerOutput
}

type GetLocalRouterPeerArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	PeerId pulumi.StringInput `pulumi:"peerId"`
	SecretKey pulumi.StringInput `pulumi:"secretKey"`
}

func (GetLocalRouterPeerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalRouterPeer)(nil)).Elem()
}

func (i GetLocalRouterPeerArgs) ToGetLocalRouterPeerOutput() GetLocalRouterPeerOutput {
	return i.ToGetLocalRouterPeerOutputWithContext(context.Background())
}

func (i GetLocalRouterPeerArgs) ToGetLocalRouterPeerOutputWithContext(ctx context.Context) GetLocalRouterPeerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalRouterPeerOutput)
}

type GetLocalRouterPeerArrayInput interface {
	pulumi.Input

	ToGetLocalRouterPeerArrayOutput() GetLocalRouterPeerArrayOutput
	ToGetLocalRouterPeerArrayOutputWithContext(context.Context) GetLocalRouterPeerArrayOutput
}

type GetLocalRouterPeerArray []GetLocalRouterPeerInput

func (GetLocalRouterPeerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocalRouterPeer)(nil)).Elem()
}

func (i GetLocalRouterPeerArray) ToGetLocalRouterPeerArrayOutput() GetLocalRouterPeerArrayOutput {
	return i.ToGetLocalRouterPeerArrayOutputWithContext(context.Background())
}

func (i GetLocalRouterPeerArray) ToGetLocalRouterPeerArrayOutputWithContext(ctx context.Context) GetLocalRouterPeerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalRouterPeerArrayOutput)
}

type GetLocalRouterPeerOutput struct { *pulumi.OutputState }

func (GetLocalRouterPeerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalRouterPeer)(nil)).Elem()
}

func (o GetLocalRouterPeerOutput) ToGetLocalRouterPeerOutput() GetLocalRouterPeerOutput {
	return o
}

func (o GetLocalRouterPeerOutput) ToGetLocalRouterPeerOutputWithContext(ctx context.Context) GetLocalRouterPeerOutput {
	return o
}

func (o GetLocalRouterPeerOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func (v GetLocalRouterPeer) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetLocalRouterPeerOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v GetLocalRouterPeer) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetLocalRouterPeerOutput) PeerId() pulumi.StringOutput {
	return o.ApplyT(func (v GetLocalRouterPeer) string { return v.PeerId }).(pulumi.StringOutput)
}

func (o GetLocalRouterPeerOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func (v GetLocalRouterPeer) string { return v.SecretKey }).(pulumi.StringOutput)
}

type GetLocalRouterPeerArrayOutput struct { *pulumi.OutputState}

func (GetLocalRouterPeerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocalRouterPeer)(nil)).Elem()
}

func (o GetLocalRouterPeerArrayOutput) ToGetLocalRouterPeerArrayOutput() GetLocalRouterPeerArrayOutput {
	return o
}

func (o GetLocalRouterPeerArrayOutput) ToGetLocalRouterPeerArrayOutputWithContext(ctx context.Context) GetLocalRouterPeerArrayOutput {
	return o
}

func (o GetLocalRouterPeerArrayOutput) Index(i pulumi.IntInput) GetLocalRouterPeerOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetLocalRouterPeer {
		return vs[0].([]GetLocalRouterPeer)[vs[1].(int)]
	}).(GetLocalRouterPeerOutput)
}

type GetLocalRouterStaticRoute struct {
	NextHop string `pulumi:"nextHop"`
	Prefix string `pulumi:"prefix"`
}

type GetLocalRouterStaticRouteInput interface {
	pulumi.Input

	ToGetLocalRouterStaticRouteOutput() GetLocalRouterStaticRouteOutput
	ToGetLocalRouterStaticRouteOutputWithContext(context.Context) GetLocalRouterStaticRouteOutput
}

type GetLocalRouterStaticRouteArgs struct {
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetLocalRouterStaticRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalRouterStaticRoute)(nil)).Elem()
}

func (i GetLocalRouterStaticRouteArgs) ToGetLocalRouterStaticRouteOutput() GetLocalRouterStaticRouteOutput {
	return i.ToGetLocalRouterStaticRouteOutputWithContext(context.Background())
}

func (i GetLocalRouterStaticRouteArgs) ToGetLocalRouterStaticRouteOutputWithContext(ctx context.Context) GetLocalRouterStaticRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalRouterStaticRouteOutput)
}

type GetLocalRouterStaticRouteArrayInput interface {
	pulumi.Input

	ToGetLocalRouterStaticRouteArrayOutput() GetLocalRouterStaticRouteArrayOutput
	ToGetLocalRouterStaticRouteArrayOutputWithContext(context.Context) GetLocalRouterStaticRouteArrayOutput
}

type GetLocalRouterStaticRouteArray []GetLocalRouterStaticRouteInput

func (GetLocalRouterStaticRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocalRouterStaticRoute)(nil)).Elem()
}

func (i GetLocalRouterStaticRouteArray) ToGetLocalRouterStaticRouteArrayOutput() GetLocalRouterStaticRouteArrayOutput {
	return i.ToGetLocalRouterStaticRouteArrayOutputWithContext(context.Background())
}

func (i GetLocalRouterStaticRouteArray) ToGetLocalRouterStaticRouteArrayOutputWithContext(ctx context.Context) GetLocalRouterStaticRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalRouterStaticRouteArrayOutput)
}

type GetLocalRouterStaticRouteOutput struct { *pulumi.OutputState }

func (GetLocalRouterStaticRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalRouterStaticRoute)(nil)).Elem()
}

func (o GetLocalRouterStaticRouteOutput) ToGetLocalRouterStaticRouteOutput() GetLocalRouterStaticRouteOutput {
	return o
}

func (o GetLocalRouterStaticRouteOutput) ToGetLocalRouterStaticRouteOutputWithContext(ctx context.Context) GetLocalRouterStaticRouteOutput {
	return o
}

func (o GetLocalRouterStaticRouteOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func (v GetLocalRouterStaticRoute) string { return v.NextHop }).(pulumi.StringOutput)
}

func (o GetLocalRouterStaticRouteOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func (v GetLocalRouterStaticRoute) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetLocalRouterStaticRouteArrayOutput struct { *pulumi.OutputState}

func (GetLocalRouterStaticRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocalRouterStaticRoute)(nil)).Elem()
}

func (o GetLocalRouterStaticRouteArrayOutput) ToGetLocalRouterStaticRouteArrayOutput() GetLocalRouterStaticRouteArrayOutput {
	return o
}

func (o GetLocalRouterStaticRouteArrayOutput) ToGetLocalRouterStaticRouteArrayOutputWithContext(ctx context.Context) GetLocalRouterStaticRouteArrayOutput {
	return o
}

func (o GetLocalRouterStaticRouteArrayOutput) Index(i pulumi.IntInput) GetLocalRouterStaticRouteOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetLocalRouterStaticRoute {
		return vs[0].([]GetLocalRouterStaticRoute)[vs[1].(int)]
	}).(GetLocalRouterStaticRouteOutput)
}

type GetLocalRouterSwitch struct {
	Category string `pulumi:"category"`
	Code string `pulumi:"code"`
	ZoneId string `pulumi:"zoneId"`
}

type GetLocalRouterSwitchInput interface {
	pulumi.Input

	ToGetLocalRouterSwitchOutput() GetLocalRouterSwitchOutput
	ToGetLocalRouterSwitchOutputWithContext(context.Context) GetLocalRouterSwitchOutput
}

type GetLocalRouterSwitchArgs struct {
	Category pulumi.StringInput `pulumi:"category"`
	Code pulumi.StringInput `pulumi:"code"`
	ZoneId pulumi.StringInput `pulumi:"zoneId"`
}

func (GetLocalRouterSwitchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalRouterSwitch)(nil)).Elem()
}

func (i GetLocalRouterSwitchArgs) ToGetLocalRouterSwitchOutput() GetLocalRouterSwitchOutput {
	return i.ToGetLocalRouterSwitchOutputWithContext(context.Background())
}

func (i GetLocalRouterSwitchArgs) ToGetLocalRouterSwitchOutputWithContext(ctx context.Context) GetLocalRouterSwitchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalRouterSwitchOutput)
}

type GetLocalRouterSwitchArrayInput interface {
	pulumi.Input

	ToGetLocalRouterSwitchArrayOutput() GetLocalRouterSwitchArrayOutput
	ToGetLocalRouterSwitchArrayOutputWithContext(context.Context) GetLocalRouterSwitchArrayOutput
}

type GetLocalRouterSwitchArray []GetLocalRouterSwitchInput

func (GetLocalRouterSwitchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocalRouterSwitch)(nil)).Elem()
}

func (i GetLocalRouterSwitchArray) ToGetLocalRouterSwitchArrayOutput() GetLocalRouterSwitchArrayOutput {
	return i.ToGetLocalRouterSwitchArrayOutputWithContext(context.Background())
}

func (i GetLocalRouterSwitchArray) ToGetLocalRouterSwitchArrayOutputWithContext(ctx context.Context) GetLocalRouterSwitchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLocalRouterSwitchArrayOutput)
}

type GetLocalRouterSwitchOutput struct { *pulumi.OutputState }

func (GetLocalRouterSwitchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocalRouterSwitch)(nil)).Elem()
}

func (o GetLocalRouterSwitchOutput) ToGetLocalRouterSwitchOutput() GetLocalRouterSwitchOutput {
	return o
}

func (o GetLocalRouterSwitchOutput) ToGetLocalRouterSwitchOutputWithContext(ctx context.Context) GetLocalRouterSwitchOutput {
	return o
}

func (o GetLocalRouterSwitchOutput) Category() pulumi.StringOutput {
	return o.ApplyT(func (v GetLocalRouterSwitch) string { return v.Category }).(pulumi.StringOutput)
}

func (o GetLocalRouterSwitchOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func (v GetLocalRouterSwitch) string { return v.Code }).(pulumi.StringOutput)
}

func (o GetLocalRouterSwitchOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func (v GetLocalRouterSwitch) string { return v.ZoneId }).(pulumi.StringOutput)
}

type GetLocalRouterSwitchArrayOutput struct { *pulumi.OutputState}

func (GetLocalRouterSwitchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLocalRouterSwitch)(nil)).Elem()
}

func (o GetLocalRouterSwitchArrayOutput) ToGetLocalRouterSwitchArrayOutput() GetLocalRouterSwitchArrayOutput {
	return o
}

func (o GetLocalRouterSwitchArrayOutput) ToGetLocalRouterSwitchArrayOutputWithContext(ctx context.Context) GetLocalRouterSwitchArrayOutput {
	return o
}

func (o GetLocalRouterSwitchArrayOutput) Index(i pulumi.IntInput) GetLocalRouterSwitchOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetLocalRouterSwitch {
		return vs[0].([]GetLocalRouterSwitch)[vs[1].(int)]
	}).(GetLocalRouterSwitchOutput)
}

type GetNFSFilter struct {
	Conditions []GetNFSFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetNFSFilterInput interface {
	pulumi.Input

	ToGetNFSFilterOutput() GetNFSFilterOutput
	ToGetNFSFilterOutputWithContext(context.Context) GetNFSFilterOutput
}

type GetNFSFilterArgs struct {
	Conditions GetNFSFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetNFSFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNFSFilter)(nil)).Elem()
}

func (i GetNFSFilterArgs) ToGetNFSFilterOutput() GetNFSFilterOutput {
	return i.ToGetNFSFilterOutputWithContext(context.Background())
}

func (i GetNFSFilterArgs) ToGetNFSFilterOutputWithContext(ctx context.Context) GetNFSFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNFSFilterOutput)
}

type GetNFSFilterOutput struct { *pulumi.OutputState }

func (GetNFSFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNFSFilter)(nil)).Elem()
}

func (o GetNFSFilterOutput) ToGetNFSFilterOutput() GetNFSFilterOutput {
	return o
}

func (o GetNFSFilterOutput) ToGetNFSFilterOutputWithContext(ctx context.Context) GetNFSFilterOutput {
	return o
}

func (o GetNFSFilterOutput) Conditions() GetNFSFilterConditionArrayOutput {
	return o.ApplyT(func (v GetNFSFilter) []GetNFSFilterCondition { return v.Conditions }).(GetNFSFilterConditionArrayOutput)
}

func (o GetNFSFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetNFSFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetNFSFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetNFSFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetNFSFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetNFSFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetNFSFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetNFSFilterConditionInput interface {
	pulumi.Input

	ToGetNFSFilterConditionOutput() GetNFSFilterConditionOutput
	ToGetNFSFilterConditionOutputWithContext(context.Context) GetNFSFilterConditionOutput
}

type GetNFSFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNFSFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNFSFilterCondition)(nil)).Elem()
}

func (i GetNFSFilterConditionArgs) ToGetNFSFilterConditionOutput() GetNFSFilterConditionOutput {
	return i.ToGetNFSFilterConditionOutputWithContext(context.Background())
}

func (i GetNFSFilterConditionArgs) ToGetNFSFilterConditionOutputWithContext(ctx context.Context) GetNFSFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNFSFilterConditionOutput)
}

type GetNFSFilterConditionArrayInput interface {
	pulumi.Input

	ToGetNFSFilterConditionArrayOutput() GetNFSFilterConditionArrayOutput
	ToGetNFSFilterConditionArrayOutputWithContext(context.Context) GetNFSFilterConditionArrayOutput
}

type GetNFSFilterConditionArray []GetNFSFilterConditionInput

func (GetNFSFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNFSFilterCondition)(nil)).Elem()
}

func (i GetNFSFilterConditionArray) ToGetNFSFilterConditionArrayOutput() GetNFSFilterConditionArrayOutput {
	return i.ToGetNFSFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetNFSFilterConditionArray) ToGetNFSFilterConditionArrayOutputWithContext(ctx context.Context) GetNFSFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNFSFilterConditionArrayOutput)
}

type GetNFSFilterConditionOutput struct { *pulumi.OutputState }

func (GetNFSFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNFSFilterCondition)(nil)).Elem()
}

func (o GetNFSFilterConditionOutput) ToGetNFSFilterConditionOutput() GetNFSFilterConditionOutput {
	return o
}

func (o GetNFSFilterConditionOutput) ToGetNFSFilterConditionOutputWithContext(ctx context.Context) GetNFSFilterConditionOutput {
	return o
}

func (o GetNFSFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetNFSFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNFSFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetNFSFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNFSFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetNFSFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNFSFilterCondition)(nil)).Elem()
}

func (o GetNFSFilterConditionArrayOutput) ToGetNFSFilterConditionArrayOutput() GetNFSFilterConditionArrayOutput {
	return o
}

func (o GetNFSFilterConditionArrayOutput) ToGetNFSFilterConditionArrayOutputWithContext(ctx context.Context) GetNFSFilterConditionArrayOutput {
	return o
}

func (o GetNFSFilterConditionArrayOutput) Index(i pulumi.IntInput) GetNFSFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetNFSFilterCondition {
		return vs[0].([]GetNFSFilterCondition)[vs[1].(int)]
	}).(GetNFSFilterConditionOutput)
}

type GetNFSNetworkInterface struct {
	Gateway string `pulumi:"gateway"`
	IpAddress string `pulumi:"ipAddress"`
	Netmask int `pulumi:"netmask"`
	SwitchId string `pulumi:"switchId"`
}

type GetNFSNetworkInterfaceInput interface {
	pulumi.Input

	ToGetNFSNetworkInterfaceOutput() GetNFSNetworkInterfaceOutput
	ToGetNFSNetworkInterfaceOutputWithContext(context.Context) GetNFSNetworkInterfaceOutput
}

type GetNFSNetworkInterfaceArgs struct {
	Gateway pulumi.StringInput `pulumi:"gateway"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	Netmask pulumi.IntInput `pulumi:"netmask"`
	SwitchId pulumi.StringInput `pulumi:"switchId"`
}

func (GetNFSNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNFSNetworkInterface)(nil)).Elem()
}

func (i GetNFSNetworkInterfaceArgs) ToGetNFSNetworkInterfaceOutput() GetNFSNetworkInterfaceOutput {
	return i.ToGetNFSNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetNFSNetworkInterfaceArgs) ToGetNFSNetworkInterfaceOutputWithContext(ctx context.Context) GetNFSNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNFSNetworkInterfaceOutput)
}

type GetNFSNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetNFSNetworkInterfaceArrayOutput() GetNFSNetworkInterfaceArrayOutput
	ToGetNFSNetworkInterfaceArrayOutputWithContext(context.Context) GetNFSNetworkInterfaceArrayOutput
}

type GetNFSNetworkInterfaceArray []GetNFSNetworkInterfaceInput

func (GetNFSNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNFSNetworkInterface)(nil)).Elem()
}

func (i GetNFSNetworkInterfaceArray) ToGetNFSNetworkInterfaceArrayOutput() GetNFSNetworkInterfaceArrayOutput {
	return i.ToGetNFSNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetNFSNetworkInterfaceArray) ToGetNFSNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetNFSNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNFSNetworkInterfaceArrayOutput)
}

type GetNFSNetworkInterfaceOutput struct { *pulumi.OutputState }

func (GetNFSNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNFSNetworkInterface)(nil)).Elem()
}

func (o GetNFSNetworkInterfaceOutput) ToGetNFSNetworkInterfaceOutput() GetNFSNetworkInterfaceOutput {
	return o
}

func (o GetNFSNetworkInterfaceOutput) ToGetNFSNetworkInterfaceOutputWithContext(ctx context.Context) GetNFSNetworkInterfaceOutput {
	return o
}

func (o GetNFSNetworkInterfaceOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func (v GetNFSNetworkInterface) string { return v.Gateway }).(pulumi.StringOutput)
}

func (o GetNFSNetworkInterfaceOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v GetNFSNetworkInterface) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetNFSNetworkInterfaceOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v GetNFSNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o GetNFSNetworkInterfaceOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func (v GetNFSNetworkInterface) string { return v.SwitchId }).(pulumi.StringOutput)
}

type GetNFSNetworkInterfaceArrayOutput struct { *pulumi.OutputState}

func (GetNFSNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNFSNetworkInterface)(nil)).Elem()
}

func (o GetNFSNetworkInterfaceArrayOutput) ToGetNFSNetworkInterfaceArrayOutput() GetNFSNetworkInterfaceArrayOutput {
	return o
}

func (o GetNFSNetworkInterfaceArrayOutput) ToGetNFSNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetNFSNetworkInterfaceArrayOutput {
	return o
}

func (o GetNFSNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetNFSNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetNFSNetworkInterface {
		return vs[0].([]GetNFSNetworkInterface)[vs[1].(int)]
	}).(GetNFSNetworkInterfaceOutput)
}

type GetNoteFilter struct {
	Conditions []GetNoteFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetNoteFilterInput interface {
	pulumi.Input

	ToGetNoteFilterOutput() GetNoteFilterOutput
	ToGetNoteFilterOutputWithContext(context.Context) GetNoteFilterOutput
}

type GetNoteFilterArgs struct {
	Conditions GetNoteFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetNoteFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNoteFilter)(nil)).Elem()
}

func (i GetNoteFilterArgs) ToGetNoteFilterOutput() GetNoteFilterOutput {
	return i.ToGetNoteFilterOutputWithContext(context.Background())
}

func (i GetNoteFilterArgs) ToGetNoteFilterOutputWithContext(ctx context.Context) GetNoteFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNoteFilterOutput)
}

type GetNoteFilterOutput struct { *pulumi.OutputState }

func (GetNoteFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNoteFilter)(nil)).Elem()
}

func (o GetNoteFilterOutput) ToGetNoteFilterOutput() GetNoteFilterOutput {
	return o
}

func (o GetNoteFilterOutput) ToGetNoteFilterOutputWithContext(ctx context.Context) GetNoteFilterOutput {
	return o
}

func (o GetNoteFilterOutput) Conditions() GetNoteFilterConditionArrayOutput {
	return o.ApplyT(func (v GetNoteFilter) []GetNoteFilterCondition { return v.Conditions }).(GetNoteFilterConditionArrayOutput)
}

func (o GetNoteFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetNoteFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetNoteFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetNoteFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetNoteFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetNoteFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetNoteFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetNoteFilterConditionInput interface {
	pulumi.Input

	ToGetNoteFilterConditionOutput() GetNoteFilterConditionOutput
	ToGetNoteFilterConditionOutputWithContext(context.Context) GetNoteFilterConditionOutput
}

type GetNoteFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetNoteFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNoteFilterCondition)(nil)).Elem()
}

func (i GetNoteFilterConditionArgs) ToGetNoteFilterConditionOutput() GetNoteFilterConditionOutput {
	return i.ToGetNoteFilterConditionOutputWithContext(context.Background())
}

func (i GetNoteFilterConditionArgs) ToGetNoteFilterConditionOutputWithContext(ctx context.Context) GetNoteFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNoteFilterConditionOutput)
}

type GetNoteFilterConditionArrayInput interface {
	pulumi.Input

	ToGetNoteFilterConditionArrayOutput() GetNoteFilterConditionArrayOutput
	ToGetNoteFilterConditionArrayOutputWithContext(context.Context) GetNoteFilterConditionArrayOutput
}

type GetNoteFilterConditionArray []GetNoteFilterConditionInput

func (GetNoteFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNoteFilterCondition)(nil)).Elem()
}

func (i GetNoteFilterConditionArray) ToGetNoteFilterConditionArrayOutput() GetNoteFilterConditionArrayOutput {
	return i.ToGetNoteFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetNoteFilterConditionArray) ToGetNoteFilterConditionArrayOutputWithContext(ctx context.Context) GetNoteFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNoteFilterConditionArrayOutput)
}

type GetNoteFilterConditionOutput struct { *pulumi.OutputState }

func (GetNoteFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNoteFilterCondition)(nil)).Elem()
}

func (o GetNoteFilterConditionOutput) ToGetNoteFilterConditionOutput() GetNoteFilterConditionOutput {
	return o
}

func (o GetNoteFilterConditionOutput) ToGetNoteFilterConditionOutputWithContext(ctx context.Context) GetNoteFilterConditionOutput {
	return o
}

func (o GetNoteFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetNoteFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNoteFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetNoteFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetNoteFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetNoteFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNoteFilterCondition)(nil)).Elem()
}

func (o GetNoteFilterConditionArrayOutput) ToGetNoteFilterConditionArrayOutput() GetNoteFilterConditionArrayOutput {
	return o
}

func (o GetNoteFilterConditionArrayOutput) ToGetNoteFilterConditionArrayOutputWithContext(ctx context.Context) GetNoteFilterConditionArrayOutput {
	return o
}

func (o GetNoteFilterConditionArrayOutput) Index(i pulumi.IntInput) GetNoteFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetNoteFilterCondition {
		return vs[0].([]GetNoteFilterCondition)[vs[1].(int)]
	}).(GetNoteFilterConditionOutput)
}

type GetPacketFilterExpression struct {
	Allow bool `pulumi:"allow"`
	Description string `pulumi:"description"`
	DestinationPort string `pulumi:"destinationPort"`
	Protocol string `pulumi:"protocol"`
	SourceNetwork string `pulumi:"sourceNetwork"`
	SourcePort string `pulumi:"sourcePort"`
}

type GetPacketFilterExpressionInput interface {
	pulumi.Input

	ToGetPacketFilterExpressionOutput() GetPacketFilterExpressionOutput
	ToGetPacketFilterExpressionOutputWithContext(context.Context) GetPacketFilterExpressionOutput
}

type GetPacketFilterExpressionArgs struct {
	Allow pulumi.BoolInput `pulumi:"allow"`
	Description pulumi.StringInput `pulumi:"description"`
	DestinationPort pulumi.StringInput `pulumi:"destinationPort"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	SourceNetwork pulumi.StringInput `pulumi:"sourceNetwork"`
	SourcePort pulumi.StringInput `pulumi:"sourcePort"`
}

func (GetPacketFilterExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPacketFilterExpression)(nil)).Elem()
}

func (i GetPacketFilterExpressionArgs) ToGetPacketFilterExpressionOutput() GetPacketFilterExpressionOutput {
	return i.ToGetPacketFilterExpressionOutputWithContext(context.Background())
}

func (i GetPacketFilterExpressionArgs) ToGetPacketFilterExpressionOutputWithContext(ctx context.Context) GetPacketFilterExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPacketFilterExpressionOutput)
}

type GetPacketFilterExpressionArrayInput interface {
	pulumi.Input

	ToGetPacketFilterExpressionArrayOutput() GetPacketFilterExpressionArrayOutput
	ToGetPacketFilterExpressionArrayOutputWithContext(context.Context) GetPacketFilterExpressionArrayOutput
}

type GetPacketFilterExpressionArray []GetPacketFilterExpressionInput

func (GetPacketFilterExpressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPacketFilterExpression)(nil)).Elem()
}

func (i GetPacketFilterExpressionArray) ToGetPacketFilterExpressionArrayOutput() GetPacketFilterExpressionArrayOutput {
	return i.ToGetPacketFilterExpressionArrayOutputWithContext(context.Background())
}

func (i GetPacketFilterExpressionArray) ToGetPacketFilterExpressionArrayOutputWithContext(ctx context.Context) GetPacketFilterExpressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPacketFilterExpressionArrayOutput)
}

type GetPacketFilterExpressionOutput struct { *pulumi.OutputState }

func (GetPacketFilterExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPacketFilterExpression)(nil)).Elem()
}

func (o GetPacketFilterExpressionOutput) ToGetPacketFilterExpressionOutput() GetPacketFilterExpressionOutput {
	return o
}

func (o GetPacketFilterExpressionOutput) ToGetPacketFilterExpressionOutputWithContext(ctx context.Context) GetPacketFilterExpressionOutput {
	return o
}

func (o GetPacketFilterExpressionOutput) Allow() pulumi.BoolOutput {
	return o.ApplyT(func (v GetPacketFilterExpression) bool { return v.Allow }).(pulumi.BoolOutput)
}

func (o GetPacketFilterExpressionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func (v GetPacketFilterExpression) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetPacketFilterExpressionOutput) DestinationPort() pulumi.StringOutput {
	return o.ApplyT(func (v GetPacketFilterExpression) string { return v.DestinationPort }).(pulumi.StringOutput)
}

func (o GetPacketFilterExpressionOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v GetPacketFilterExpression) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetPacketFilterExpressionOutput) SourceNetwork() pulumi.StringOutput {
	return o.ApplyT(func (v GetPacketFilterExpression) string { return v.SourceNetwork }).(pulumi.StringOutput)
}

func (o GetPacketFilterExpressionOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func (v GetPacketFilterExpression) string { return v.SourcePort }).(pulumi.StringOutput)
}

type GetPacketFilterExpressionArrayOutput struct { *pulumi.OutputState}

func (GetPacketFilterExpressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPacketFilterExpression)(nil)).Elem()
}

func (o GetPacketFilterExpressionArrayOutput) ToGetPacketFilterExpressionArrayOutput() GetPacketFilterExpressionArrayOutput {
	return o
}

func (o GetPacketFilterExpressionArrayOutput) ToGetPacketFilterExpressionArrayOutputWithContext(ctx context.Context) GetPacketFilterExpressionArrayOutput {
	return o
}

func (o GetPacketFilterExpressionArrayOutput) Index(i pulumi.IntInput) GetPacketFilterExpressionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetPacketFilterExpression {
		return vs[0].([]GetPacketFilterExpression)[vs[1].(int)]
	}).(GetPacketFilterExpressionOutput)
}

type GetPacketFilterFilter struct {
	Conditions []GetPacketFilterFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
}

type GetPacketFilterFilterInput interface {
	pulumi.Input

	ToGetPacketFilterFilterOutput() GetPacketFilterFilterOutput
	ToGetPacketFilterFilterOutputWithContext(context.Context) GetPacketFilterFilterOutput
}

type GetPacketFilterFilterArgs struct {
	Conditions GetPacketFilterFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (GetPacketFilterFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPacketFilterFilter)(nil)).Elem()
}

func (i GetPacketFilterFilterArgs) ToGetPacketFilterFilterOutput() GetPacketFilterFilterOutput {
	return i.ToGetPacketFilterFilterOutputWithContext(context.Background())
}

func (i GetPacketFilterFilterArgs) ToGetPacketFilterFilterOutputWithContext(ctx context.Context) GetPacketFilterFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPacketFilterFilterOutput)
}

type GetPacketFilterFilterOutput struct { *pulumi.OutputState }

func (GetPacketFilterFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPacketFilterFilter)(nil)).Elem()
}

func (o GetPacketFilterFilterOutput) ToGetPacketFilterFilterOutput() GetPacketFilterFilterOutput {
	return o
}

func (o GetPacketFilterFilterOutput) ToGetPacketFilterFilterOutputWithContext(ctx context.Context) GetPacketFilterFilterOutput {
	return o
}

func (o GetPacketFilterFilterOutput) Conditions() GetPacketFilterFilterConditionArrayOutput {
	return o.ApplyT(func (v GetPacketFilterFilter) []GetPacketFilterFilterCondition { return v.Conditions }).(GetPacketFilterFilterConditionArrayOutput)
}

func (o GetPacketFilterFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetPacketFilterFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetPacketFilterFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetPacketFilterFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

type GetPacketFilterFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetPacketFilterFilterConditionInput interface {
	pulumi.Input

	ToGetPacketFilterFilterConditionOutput() GetPacketFilterFilterConditionOutput
	ToGetPacketFilterFilterConditionOutputWithContext(context.Context) GetPacketFilterFilterConditionOutput
}

type GetPacketFilterFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPacketFilterFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPacketFilterFilterCondition)(nil)).Elem()
}

func (i GetPacketFilterFilterConditionArgs) ToGetPacketFilterFilterConditionOutput() GetPacketFilterFilterConditionOutput {
	return i.ToGetPacketFilterFilterConditionOutputWithContext(context.Background())
}

func (i GetPacketFilterFilterConditionArgs) ToGetPacketFilterFilterConditionOutputWithContext(ctx context.Context) GetPacketFilterFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPacketFilterFilterConditionOutput)
}

type GetPacketFilterFilterConditionArrayInput interface {
	pulumi.Input

	ToGetPacketFilterFilterConditionArrayOutput() GetPacketFilterFilterConditionArrayOutput
	ToGetPacketFilterFilterConditionArrayOutputWithContext(context.Context) GetPacketFilterFilterConditionArrayOutput
}

type GetPacketFilterFilterConditionArray []GetPacketFilterFilterConditionInput

func (GetPacketFilterFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPacketFilterFilterCondition)(nil)).Elem()
}

func (i GetPacketFilterFilterConditionArray) ToGetPacketFilterFilterConditionArrayOutput() GetPacketFilterFilterConditionArrayOutput {
	return i.ToGetPacketFilterFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetPacketFilterFilterConditionArray) ToGetPacketFilterFilterConditionArrayOutputWithContext(ctx context.Context) GetPacketFilterFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPacketFilterFilterConditionArrayOutput)
}

type GetPacketFilterFilterConditionOutput struct { *pulumi.OutputState }

func (GetPacketFilterFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPacketFilterFilterCondition)(nil)).Elem()
}

func (o GetPacketFilterFilterConditionOutput) ToGetPacketFilterFilterConditionOutput() GetPacketFilterFilterConditionOutput {
	return o
}

func (o GetPacketFilterFilterConditionOutput) ToGetPacketFilterFilterConditionOutputWithContext(ctx context.Context) GetPacketFilterFilterConditionOutput {
	return o
}

func (o GetPacketFilterFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetPacketFilterFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPacketFilterFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetPacketFilterFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPacketFilterFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetPacketFilterFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPacketFilterFilterCondition)(nil)).Elem()
}

func (o GetPacketFilterFilterConditionArrayOutput) ToGetPacketFilterFilterConditionArrayOutput() GetPacketFilterFilterConditionArrayOutput {
	return o
}

func (o GetPacketFilterFilterConditionArrayOutput) ToGetPacketFilterFilterConditionArrayOutputWithContext(ctx context.Context) GetPacketFilterFilterConditionArrayOutput {
	return o
}

func (o GetPacketFilterFilterConditionArrayOutput) Index(i pulumi.IntInput) GetPacketFilterFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetPacketFilterFilterCondition {
		return vs[0].([]GetPacketFilterFilterCondition)[vs[1].(int)]
	}).(GetPacketFilterFilterConditionOutput)
}

type GetPrivateHostFilter struct {
	Conditions []GetPrivateHostFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetPrivateHostFilterInput interface {
	pulumi.Input

	ToGetPrivateHostFilterOutput() GetPrivateHostFilterOutput
	ToGetPrivateHostFilterOutputWithContext(context.Context) GetPrivateHostFilterOutput
}

type GetPrivateHostFilterArgs struct {
	Conditions GetPrivateHostFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetPrivateHostFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateHostFilter)(nil)).Elem()
}

func (i GetPrivateHostFilterArgs) ToGetPrivateHostFilterOutput() GetPrivateHostFilterOutput {
	return i.ToGetPrivateHostFilterOutputWithContext(context.Background())
}

func (i GetPrivateHostFilterArgs) ToGetPrivateHostFilterOutputWithContext(ctx context.Context) GetPrivateHostFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateHostFilterOutput)
}

type GetPrivateHostFilterOutput struct { *pulumi.OutputState }

func (GetPrivateHostFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateHostFilter)(nil)).Elem()
}

func (o GetPrivateHostFilterOutput) ToGetPrivateHostFilterOutput() GetPrivateHostFilterOutput {
	return o
}

func (o GetPrivateHostFilterOutput) ToGetPrivateHostFilterOutputWithContext(ctx context.Context) GetPrivateHostFilterOutput {
	return o
}

func (o GetPrivateHostFilterOutput) Conditions() GetPrivateHostFilterConditionArrayOutput {
	return o.ApplyT(func (v GetPrivateHostFilter) []GetPrivateHostFilterCondition { return v.Conditions }).(GetPrivateHostFilterConditionArrayOutput)
}

func (o GetPrivateHostFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetPrivateHostFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetPrivateHostFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetPrivateHostFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetPrivateHostFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetPrivateHostFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetPrivateHostFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetPrivateHostFilterConditionInput interface {
	pulumi.Input

	ToGetPrivateHostFilterConditionOutput() GetPrivateHostFilterConditionOutput
	ToGetPrivateHostFilterConditionOutputWithContext(context.Context) GetPrivateHostFilterConditionOutput
}

type GetPrivateHostFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPrivateHostFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateHostFilterCondition)(nil)).Elem()
}

func (i GetPrivateHostFilterConditionArgs) ToGetPrivateHostFilterConditionOutput() GetPrivateHostFilterConditionOutput {
	return i.ToGetPrivateHostFilterConditionOutputWithContext(context.Background())
}

func (i GetPrivateHostFilterConditionArgs) ToGetPrivateHostFilterConditionOutputWithContext(ctx context.Context) GetPrivateHostFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateHostFilterConditionOutput)
}

type GetPrivateHostFilterConditionArrayInput interface {
	pulumi.Input

	ToGetPrivateHostFilterConditionArrayOutput() GetPrivateHostFilterConditionArrayOutput
	ToGetPrivateHostFilterConditionArrayOutputWithContext(context.Context) GetPrivateHostFilterConditionArrayOutput
}

type GetPrivateHostFilterConditionArray []GetPrivateHostFilterConditionInput

func (GetPrivateHostFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateHostFilterCondition)(nil)).Elem()
}

func (i GetPrivateHostFilterConditionArray) ToGetPrivateHostFilterConditionArrayOutput() GetPrivateHostFilterConditionArrayOutput {
	return i.ToGetPrivateHostFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetPrivateHostFilterConditionArray) ToGetPrivateHostFilterConditionArrayOutputWithContext(ctx context.Context) GetPrivateHostFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPrivateHostFilterConditionArrayOutput)
}

type GetPrivateHostFilterConditionOutput struct { *pulumi.OutputState }

func (GetPrivateHostFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrivateHostFilterCondition)(nil)).Elem()
}

func (o GetPrivateHostFilterConditionOutput) ToGetPrivateHostFilterConditionOutput() GetPrivateHostFilterConditionOutput {
	return o
}

func (o GetPrivateHostFilterConditionOutput) ToGetPrivateHostFilterConditionOutputWithContext(ctx context.Context) GetPrivateHostFilterConditionOutput {
	return o
}

func (o GetPrivateHostFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetPrivateHostFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetPrivateHostFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetPrivateHostFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPrivateHostFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetPrivateHostFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPrivateHostFilterCondition)(nil)).Elem()
}

func (o GetPrivateHostFilterConditionArrayOutput) ToGetPrivateHostFilterConditionArrayOutput() GetPrivateHostFilterConditionArrayOutput {
	return o
}

func (o GetPrivateHostFilterConditionArrayOutput) ToGetPrivateHostFilterConditionArrayOutputWithContext(ctx context.Context) GetPrivateHostFilterConditionArrayOutput {
	return o
}

func (o GetPrivateHostFilterConditionArrayOutput) Index(i pulumi.IntInput) GetPrivateHostFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetPrivateHostFilterCondition {
		return vs[0].([]GetPrivateHostFilterCondition)[vs[1].(int)]
	}).(GetPrivateHostFilterConditionOutput)
}

type GetProxyLBBindPort struct {
	Port int `pulumi:"port"`
	ProxyMode string `pulumi:"proxyMode"`
	RedirectToHttps bool `pulumi:"redirectToHttps"`
	ResponseHeaders []GetProxyLBBindPortResponseHeader `pulumi:"responseHeaders"`
	SupportHttp2 bool `pulumi:"supportHttp2"`
}

type GetProxyLBBindPortInput interface {
	pulumi.Input

	ToGetProxyLBBindPortOutput() GetProxyLBBindPortOutput
	ToGetProxyLBBindPortOutputWithContext(context.Context) GetProxyLBBindPortOutput
}

type GetProxyLBBindPortArgs struct {
	Port pulumi.IntInput `pulumi:"port"`
	ProxyMode pulumi.StringInput `pulumi:"proxyMode"`
	RedirectToHttps pulumi.BoolInput `pulumi:"redirectToHttps"`
	ResponseHeaders GetProxyLBBindPortResponseHeaderArrayInput `pulumi:"responseHeaders"`
	SupportHttp2 pulumi.BoolInput `pulumi:"supportHttp2"`
}

func (GetProxyLBBindPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBBindPort)(nil)).Elem()
}

func (i GetProxyLBBindPortArgs) ToGetProxyLBBindPortOutput() GetProxyLBBindPortOutput {
	return i.ToGetProxyLBBindPortOutputWithContext(context.Background())
}

func (i GetProxyLBBindPortArgs) ToGetProxyLBBindPortOutputWithContext(ctx context.Context) GetProxyLBBindPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBBindPortOutput)
}

type GetProxyLBBindPortArrayInput interface {
	pulumi.Input

	ToGetProxyLBBindPortArrayOutput() GetProxyLBBindPortArrayOutput
	ToGetProxyLBBindPortArrayOutputWithContext(context.Context) GetProxyLBBindPortArrayOutput
}

type GetProxyLBBindPortArray []GetProxyLBBindPortInput

func (GetProxyLBBindPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBBindPort)(nil)).Elem()
}

func (i GetProxyLBBindPortArray) ToGetProxyLBBindPortArrayOutput() GetProxyLBBindPortArrayOutput {
	return i.ToGetProxyLBBindPortArrayOutputWithContext(context.Background())
}

func (i GetProxyLBBindPortArray) ToGetProxyLBBindPortArrayOutputWithContext(ctx context.Context) GetProxyLBBindPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBBindPortArrayOutput)
}

type GetProxyLBBindPortOutput struct { *pulumi.OutputState }

func (GetProxyLBBindPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBBindPort)(nil)).Elem()
}

func (o GetProxyLBBindPortOutput) ToGetProxyLBBindPortOutput() GetProxyLBBindPortOutput {
	return o
}

func (o GetProxyLBBindPortOutput) ToGetProxyLBBindPortOutputWithContext(ctx context.Context) GetProxyLBBindPortOutput {
	return o
}

func (o GetProxyLBBindPortOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func (v GetProxyLBBindPort) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetProxyLBBindPortOutput) ProxyMode() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBBindPort) string { return v.ProxyMode }).(pulumi.StringOutput)
}

func (o GetProxyLBBindPortOutput) RedirectToHttps() pulumi.BoolOutput {
	return o.ApplyT(func (v GetProxyLBBindPort) bool { return v.RedirectToHttps }).(pulumi.BoolOutput)
}

func (o GetProxyLBBindPortOutput) ResponseHeaders() GetProxyLBBindPortResponseHeaderArrayOutput {
	return o.ApplyT(func (v GetProxyLBBindPort) []GetProxyLBBindPortResponseHeader { return v.ResponseHeaders }).(GetProxyLBBindPortResponseHeaderArrayOutput)
}

func (o GetProxyLBBindPortOutput) SupportHttp2() pulumi.BoolOutput {
	return o.ApplyT(func (v GetProxyLBBindPort) bool { return v.SupportHttp2 }).(pulumi.BoolOutput)
}

type GetProxyLBBindPortArrayOutput struct { *pulumi.OutputState}

func (GetProxyLBBindPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBBindPort)(nil)).Elem()
}

func (o GetProxyLBBindPortArrayOutput) ToGetProxyLBBindPortArrayOutput() GetProxyLBBindPortArrayOutput {
	return o
}

func (o GetProxyLBBindPortArrayOutput) ToGetProxyLBBindPortArrayOutputWithContext(ctx context.Context) GetProxyLBBindPortArrayOutput {
	return o
}

func (o GetProxyLBBindPortArrayOutput) Index(i pulumi.IntInput) GetProxyLBBindPortOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetProxyLBBindPort {
		return vs[0].([]GetProxyLBBindPort)[vs[1].(int)]
	}).(GetProxyLBBindPortOutput)
}

type GetProxyLBBindPortResponseHeader struct {
	Header string `pulumi:"header"`
	Value string `pulumi:"value"`
}

type GetProxyLBBindPortResponseHeaderInput interface {
	pulumi.Input

	ToGetProxyLBBindPortResponseHeaderOutput() GetProxyLBBindPortResponseHeaderOutput
	ToGetProxyLBBindPortResponseHeaderOutputWithContext(context.Context) GetProxyLBBindPortResponseHeaderOutput
}

type GetProxyLBBindPortResponseHeaderArgs struct {
	Header pulumi.StringInput `pulumi:"header"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetProxyLBBindPortResponseHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBBindPortResponseHeader)(nil)).Elem()
}

func (i GetProxyLBBindPortResponseHeaderArgs) ToGetProxyLBBindPortResponseHeaderOutput() GetProxyLBBindPortResponseHeaderOutput {
	return i.ToGetProxyLBBindPortResponseHeaderOutputWithContext(context.Background())
}

func (i GetProxyLBBindPortResponseHeaderArgs) ToGetProxyLBBindPortResponseHeaderOutputWithContext(ctx context.Context) GetProxyLBBindPortResponseHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBBindPortResponseHeaderOutput)
}

type GetProxyLBBindPortResponseHeaderArrayInput interface {
	pulumi.Input

	ToGetProxyLBBindPortResponseHeaderArrayOutput() GetProxyLBBindPortResponseHeaderArrayOutput
	ToGetProxyLBBindPortResponseHeaderArrayOutputWithContext(context.Context) GetProxyLBBindPortResponseHeaderArrayOutput
}

type GetProxyLBBindPortResponseHeaderArray []GetProxyLBBindPortResponseHeaderInput

func (GetProxyLBBindPortResponseHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBBindPortResponseHeader)(nil)).Elem()
}

func (i GetProxyLBBindPortResponseHeaderArray) ToGetProxyLBBindPortResponseHeaderArrayOutput() GetProxyLBBindPortResponseHeaderArrayOutput {
	return i.ToGetProxyLBBindPortResponseHeaderArrayOutputWithContext(context.Background())
}

func (i GetProxyLBBindPortResponseHeaderArray) ToGetProxyLBBindPortResponseHeaderArrayOutputWithContext(ctx context.Context) GetProxyLBBindPortResponseHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBBindPortResponseHeaderArrayOutput)
}

type GetProxyLBBindPortResponseHeaderOutput struct { *pulumi.OutputState }

func (GetProxyLBBindPortResponseHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBBindPortResponseHeader)(nil)).Elem()
}

func (o GetProxyLBBindPortResponseHeaderOutput) ToGetProxyLBBindPortResponseHeaderOutput() GetProxyLBBindPortResponseHeaderOutput {
	return o
}

func (o GetProxyLBBindPortResponseHeaderOutput) ToGetProxyLBBindPortResponseHeaderOutputWithContext(ctx context.Context) GetProxyLBBindPortResponseHeaderOutput {
	return o
}

func (o GetProxyLBBindPortResponseHeaderOutput) Header() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBBindPortResponseHeader) string { return v.Header }).(pulumi.StringOutput)
}

func (o GetProxyLBBindPortResponseHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBBindPortResponseHeader) string { return v.Value }).(pulumi.StringOutput)
}

type GetProxyLBBindPortResponseHeaderArrayOutput struct { *pulumi.OutputState}

func (GetProxyLBBindPortResponseHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBBindPortResponseHeader)(nil)).Elem()
}

func (o GetProxyLBBindPortResponseHeaderArrayOutput) ToGetProxyLBBindPortResponseHeaderArrayOutput() GetProxyLBBindPortResponseHeaderArrayOutput {
	return o
}

func (o GetProxyLBBindPortResponseHeaderArrayOutput) ToGetProxyLBBindPortResponseHeaderArrayOutputWithContext(ctx context.Context) GetProxyLBBindPortResponseHeaderArrayOutput {
	return o
}

func (o GetProxyLBBindPortResponseHeaderArrayOutput) Index(i pulumi.IntInput) GetProxyLBBindPortResponseHeaderOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetProxyLBBindPortResponseHeader {
		return vs[0].([]GetProxyLBBindPortResponseHeader)[vs[1].(int)]
	}).(GetProxyLBBindPortResponseHeaderOutput)
}

type GetProxyLBCertificate struct {
	AdditionalCertificates []GetProxyLBCertificateAdditionalCertificate `pulumi:"additionalCertificates"`
	IntermediateCert string `pulumi:"intermediateCert"`
	PrivateKey string `pulumi:"privateKey"`
	ServerCert string `pulumi:"serverCert"`
}

type GetProxyLBCertificateInput interface {
	pulumi.Input

	ToGetProxyLBCertificateOutput() GetProxyLBCertificateOutput
	ToGetProxyLBCertificateOutputWithContext(context.Context) GetProxyLBCertificateOutput
}

type GetProxyLBCertificateArgs struct {
	AdditionalCertificates GetProxyLBCertificateAdditionalCertificateArrayInput `pulumi:"additionalCertificates"`
	IntermediateCert pulumi.StringInput `pulumi:"intermediateCert"`
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
	ServerCert pulumi.StringInput `pulumi:"serverCert"`
}

func (GetProxyLBCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBCertificate)(nil)).Elem()
}

func (i GetProxyLBCertificateArgs) ToGetProxyLBCertificateOutput() GetProxyLBCertificateOutput {
	return i.ToGetProxyLBCertificateOutputWithContext(context.Background())
}

func (i GetProxyLBCertificateArgs) ToGetProxyLBCertificateOutputWithContext(ctx context.Context) GetProxyLBCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBCertificateOutput)
}

type GetProxyLBCertificateArrayInput interface {
	pulumi.Input

	ToGetProxyLBCertificateArrayOutput() GetProxyLBCertificateArrayOutput
	ToGetProxyLBCertificateArrayOutputWithContext(context.Context) GetProxyLBCertificateArrayOutput
}

type GetProxyLBCertificateArray []GetProxyLBCertificateInput

func (GetProxyLBCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBCertificate)(nil)).Elem()
}

func (i GetProxyLBCertificateArray) ToGetProxyLBCertificateArrayOutput() GetProxyLBCertificateArrayOutput {
	return i.ToGetProxyLBCertificateArrayOutputWithContext(context.Background())
}

func (i GetProxyLBCertificateArray) ToGetProxyLBCertificateArrayOutputWithContext(ctx context.Context) GetProxyLBCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBCertificateArrayOutput)
}

type GetProxyLBCertificateOutput struct { *pulumi.OutputState }

func (GetProxyLBCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBCertificate)(nil)).Elem()
}

func (o GetProxyLBCertificateOutput) ToGetProxyLBCertificateOutput() GetProxyLBCertificateOutput {
	return o
}

func (o GetProxyLBCertificateOutput) ToGetProxyLBCertificateOutputWithContext(ctx context.Context) GetProxyLBCertificateOutput {
	return o
}

func (o GetProxyLBCertificateOutput) AdditionalCertificates() GetProxyLBCertificateAdditionalCertificateArrayOutput {
	return o.ApplyT(func (v GetProxyLBCertificate) []GetProxyLBCertificateAdditionalCertificate { return v.AdditionalCertificates }).(GetProxyLBCertificateAdditionalCertificateArrayOutput)
}

func (o GetProxyLBCertificateOutput) IntermediateCert() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBCertificate) string { return v.IntermediateCert }).(pulumi.StringOutput)
}

func (o GetProxyLBCertificateOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBCertificate) string { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o GetProxyLBCertificateOutput) ServerCert() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBCertificate) string { return v.ServerCert }).(pulumi.StringOutput)
}

type GetProxyLBCertificateArrayOutput struct { *pulumi.OutputState}

func (GetProxyLBCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBCertificate)(nil)).Elem()
}

func (o GetProxyLBCertificateArrayOutput) ToGetProxyLBCertificateArrayOutput() GetProxyLBCertificateArrayOutput {
	return o
}

func (o GetProxyLBCertificateArrayOutput) ToGetProxyLBCertificateArrayOutputWithContext(ctx context.Context) GetProxyLBCertificateArrayOutput {
	return o
}

func (o GetProxyLBCertificateArrayOutput) Index(i pulumi.IntInput) GetProxyLBCertificateOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetProxyLBCertificate {
		return vs[0].([]GetProxyLBCertificate)[vs[1].(int)]
	}).(GetProxyLBCertificateOutput)
}

type GetProxyLBCertificateAdditionalCertificate struct {
	IntermediateCert string `pulumi:"intermediateCert"`
	PrivateKey string `pulumi:"privateKey"`
	ServerCert string `pulumi:"serverCert"`
}

type GetProxyLBCertificateAdditionalCertificateInput interface {
	pulumi.Input

	ToGetProxyLBCertificateAdditionalCertificateOutput() GetProxyLBCertificateAdditionalCertificateOutput
	ToGetProxyLBCertificateAdditionalCertificateOutputWithContext(context.Context) GetProxyLBCertificateAdditionalCertificateOutput
}

type GetProxyLBCertificateAdditionalCertificateArgs struct {
	IntermediateCert pulumi.StringInput `pulumi:"intermediateCert"`
	PrivateKey pulumi.StringInput `pulumi:"privateKey"`
	ServerCert pulumi.StringInput `pulumi:"serverCert"`
}

func (GetProxyLBCertificateAdditionalCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBCertificateAdditionalCertificate)(nil)).Elem()
}

func (i GetProxyLBCertificateAdditionalCertificateArgs) ToGetProxyLBCertificateAdditionalCertificateOutput() GetProxyLBCertificateAdditionalCertificateOutput {
	return i.ToGetProxyLBCertificateAdditionalCertificateOutputWithContext(context.Background())
}

func (i GetProxyLBCertificateAdditionalCertificateArgs) ToGetProxyLBCertificateAdditionalCertificateOutputWithContext(ctx context.Context) GetProxyLBCertificateAdditionalCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBCertificateAdditionalCertificateOutput)
}

type GetProxyLBCertificateAdditionalCertificateArrayInput interface {
	pulumi.Input

	ToGetProxyLBCertificateAdditionalCertificateArrayOutput() GetProxyLBCertificateAdditionalCertificateArrayOutput
	ToGetProxyLBCertificateAdditionalCertificateArrayOutputWithContext(context.Context) GetProxyLBCertificateAdditionalCertificateArrayOutput
}

type GetProxyLBCertificateAdditionalCertificateArray []GetProxyLBCertificateAdditionalCertificateInput

func (GetProxyLBCertificateAdditionalCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBCertificateAdditionalCertificate)(nil)).Elem()
}

func (i GetProxyLBCertificateAdditionalCertificateArray) ToGetProxyLBCertificateAdditionalCertificateArrayOutput() GetProxyLBCertificateAdditionalCertificateArrayOutput {
	return i.ToGetProxyLBCertificateAdditionalCertificateArrayOutputWithContext(context.Background())
}

func (i GetProxyLBCertificateAdditionalCertificateArray) ToGetProxyLBCertificateAdditionalCertificateArrayOutputWithContext(ctx context.Context) GetProxyLBCertificateAdditionalCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBCertificateAdditionalCertificateArrayOutput)
}

type GetProxyLBCertificateAdditionalCertificateOutput struct { *pulumi.OutputState }

func (GetProxyLBCertificateAdditionalCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBCertificateAdditionalCertificate)(nil)).Elem()
}

func (o GetProxyLBCertificateAdditionalCertificateOutput) ToGetProxyLBCertificateAdditionalCertificateOutput() GetProxyLBCertificateAdditionalCertificateOutput {
	return o
}

func (o GetProxyLBCertificateAdditionalCertificateOutput) ToGetProxyLBCertificateAdditionalCertificateOutputWithContext(ctx context.Context) GetProxyLBCertificateAdditionalCertificateOutput {
	return o
}

func (o GetProxyLBCertificateAdditionalCertificateOutput) IntermediateCert() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBCertificateAdditionalCertificate) string { return v.IntermediateCert }).(pulumi.StringOutput)
}

func (o GetProxyLBCertificateAdditionalCertificateOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBCertificateAdditionalCertificate) string { return v.PrivateKey }).(pulumi.StringOutput)
}

func (o GetProxyLBCertificateAdditionalCertificateOutput) ServerCert() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBCertificateAdditionalCertificate) string { return v.ServerCert }).(pulumi.StringOutput)
}

type GetProxyLBCertificateAdditionalCertificateArrayOutput struct { *pulumi.OutputState}

func (GetProxyLBCertificateAdditionalCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBCertificateAdditionalCertificate)(nil)).Elem()
}

func (o GetProxyLBCertificateAdditionalCertificateArrayOutput) ToGetProxyLBCertificateAdditionalCertificateArrayOutput() GetProxyLBCertificateAdditionalCertificateArrayOutput {
	return o
}

func (o GetProxyLBCertificateAdditionalCertificateArrayOutput) ToGetProxyLBCertificateAdditionalCertificateArrayOutputWithContext(ctx context.Context) GetProxyLBCertificateAdditionalCertificateArrayOutput {
	return o
}

func (o GetProxyLBCertificateAdditionalCertificateArrayOutput) Index(i pulumi.IntInput) GetProxyLBCertificateAdditionalCertificateOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetProxyLBCertificateAdditionalCertificate {
		return vs[0].([]GetProxyLBCertificateAdditionalCertificate)[vs[1].(int)]
	}).(GetProxyLBCertificateAdditionalCertificateOutput)
}

type GetProxyLBFilter struct {
	Conditions []GetProxyLBFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetProxyLBFilterInput interface {
	pulumi.Input

	ToGetProxyLBFilterOutput() GetProxyLBFilterOutput
	ToGetProxyLBFilterOutputWithContext(context.Context) GetProxyLBFilterOutput
}

type GetProxyLBFilterArgs struct {
	Conditions GetProxyLBFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetProxyLBFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBFilter)(nil)).Elem()
}

func (i GetProxyLBFilterArgs) ToGetProxyLBFilterOutput() GetProxyLBFilterOutput {
	return i.ToGetProxyLBFilterOutputWithContext(context.Background())
}

func (i GetProxyLBFilterArgs) ToGetProxyLBFilterOutputWithContext(ctx context.Context) GetProxyLBFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBFilterOutput)
}

type GetProxyLBFilterOutput struct { *pulumi.OutputState }

func (GetProxyLBFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBFilter)(nil)).Elem()
}

func (o GetProxyLBFilterOutput) ToGetProxyLBFilterOutput() GetProxyLBFilterOutput {
	return o
}

func (o GetProxyLBFilterOutput) ToGetProxyLBFilterOutputWithContext(ctx context.Context) GetProxyLBFilterOutput {
	return o
}

func (o GetProxyLBFilterOutput) Conditions() GetProxyLBFilterConditionArrayOutput {
	return o.ApplyT(func (v GetProxyLBFilter) []GetProxyLBFilterCondition { return v.Conditions }).(GetProxyLBFilterConditionArrayOutput)
}

func (o GetProxyLBFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetProxyLBFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetProxyLBFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetProxyLBFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetProxyLBFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetProxyLBFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetProxyLBFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetProxyLBFilterConditionInput interface {
	pulumi.Input

	ToGetProxyLBFilterConditionOutput() GetProxyLBFilterConditionOutput
	ToGetProxyLBFilterConditionOutputWithContext(context.Context) GetProxyLBFilterConditionOutput
}

type GetProxyLBFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetProxyLBFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBFilterCondition)(nil)).Elem()
}

func (i GetProxyLBFilterConditionArgs) ToGetProxyLBFilterConditionOutput() GetProxyLBFilterConditionOutput {
	return i.ToGetProxyLBFilterConditionOutputWithContext(context.Background())
}

func (i GetProxyLBFilterConditionArgs) ToGetProxyLBFilterConditionOutputWithContext(ctx context.Context) GetProxyLBFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBFilterConditionOutput)
}

type GetProxyLBFilterConditionArrayInput interface {
	pulumi.Input

	ToGetProxyLBFilterConditionArrayOutput() GetProxyLBFilterConditionArrayOutput
	ToGetProxyLBFilterConditionArrayOutputWithContext(context.Context) GetProxyLBFilterConditionArrayOutput
}

type GetProxyLBFilterConditionArray []GetProxyLBFilterConditionInput

func (GetProxyLBFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBFilterCondition)(nil)).Elem()
}

func (i GetProxyLBFilterConditionArray) ToGetProxyLBFilterConditionArrayOutput() GetProxyLBFilterConditionArrayOutput {
	return i.ToGetProxyLBFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetProxyLBFilterConditionArray) ToGetProxyLBFilterConditionArrayOutputWithContext(ctx context.Context) GetProxyLBFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBFilterConditionArrayOutput)
}

type GetProxyLBFilterConditionOutput struct { *pulumi.OutputState }

func (GetProxyLBFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBFilterCondition)(nil)).Elem()
}

func (o GetProxyLBFilterConditionOutput) ToGetProxyLBFilterConditionOutput() GetProxyLBFilterConditionOutput {
	return o
}

func (o GetProxyLBFilterConditionOutput) ToGetProxyLBFilterConditionOutputWithContext(ctx context.Context) GetProxyLBFilterConditionOutput {
	return o
}

func (o GetProxyLBFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProxyLBFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetProxyLBFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetProxyLBFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetProxyLBFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBFilterCondition)(nil)).Elem()
}

func (o GetProxyLBFilterConditionArrayOutput) ToGetProxyLBFilterConditionArrayOutput() GetProxyLBFilterConditionArrayOutput {
	return o
}

func (o GetProxyLBFilterConditionArrayOutput) ToGetProxyLBFilterConditionArrayOutputWithContext(ctx context.Context) GetProxyLBFilterConditionArrayOutput {
	return o
}

func (o GetProxyLBFilterConditionArrayOutput) Index(i pulumi.IntInput) GetProxyLBFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetProxyLBFilterCondition {
		return vs[0].([]GetProxyLBFilterCondition)[vs[1].(int)]
	}).(GetProxyLBFilterConditionOutput)
}

type GetProxyLBHealthCheck struct {
	DelayLoop int `pulumi:"delayLoop"`
	HostHeader string `pulumi:"hostHeader"`
	Path string `pulumi:"path"`
	Port int `pulumi:"port"`
	Protocol string `pulumi:"protocol"`
}

type GetProxyLBHealthCheckInput interface {
	pulumi.Input

	ToGetProxyLBHealthCheckOutput() GetProxyLBHealthCheckOutput
	ToGetProxyLBHealthCheckOutputWithContext(context.Context) GetProxyLBHealthCheckOutput
}

type GetProxyLBHealthCheckArgs struct {
	DelayLoop pulumi.IntInput `pulumi:"delayLoop"`
	HostHeader pulumi.StringInput `pulumi:"hostHeader"`
	Path pulumi.StringInput `pulumi:"path"`
	Port pulumi.IntInput `pulumi:"port"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetProxyLBHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBHealthCheck)(nil)).Elem()
}

func (i GetProxyLBHealthCheckArgs) ToGetProxyLBHealthCheckOutput() GetProxyLBHealthCheckOutput {
	return i.ToGetProxyLBHealthCheckOutputWithContext(context.Background())
}

func (i GetProxyLBHealthCheckArgs) ToGetProxyLBHealthCheckOutputWithContext(ctx context.Context) GetProxyLBHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBHealthCheckOutput)
}

type GetProxyLBHealthCheckArrayInput interface {
	pulumi.Input

	ToGetProxyLBHealthCheckArrayOutput() GetProxyLBHealthCheckArrayOutput
	ToGetProxyLBHealthCheckArrayOutputWithContext(context.Context) GetProxyLBHealthCheckArrayOutput
}

type GetProxyLBHealthCheckArray []GetProxyLBHealthCheckInput

func (GetProxyLBHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBHealthCheck)(nil)).Elem()
}

func (i GetProxyLBHealthCheckArray) ToGetProxyLBHealthCheckArrayOutput() GetProxyLBHealthCheckArrayOutput {
	return i.ToGetProxyLBHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetProxyLBHealthCheckArray) ToGetProxyLBHealthCheckArrayOutputWithContext(ctx context.Context) GetProxyLBHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBHealthCheckArrayOutput)
}

type GetProxyLBHealthCheckOutput struct { *pulumi.OutputState }

func (GetProxyLBHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBHealthCheck)(nil)).Elem()
}

func (o GetProxyLBHealthCheckOutput) ToGetProxyLBHealthCheckOutput() GetProxyLBHealthCheckOutput {
	return o
}

func (o GetProxyLBHealthCheckOutput) ToGetProxyLBHealthCheckOutputWithContext(ctx context.Context) GetProxyLBHealthCheckOutput {
	return o
}

func (o GetProxyLBHealthCheckOutput) DelayLoop() pulumi.IntOutput {
	return o.ApplyT(func (v GetProxyLBHealthCheck) int { return v.DelayLoop }).(pulumi.IntOutput)
}

func (o GetProxyLBHealthCheckOutput) HostHeader() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBHealthCheck) string { return v.HostHeader }).(pulumi.StringOutput)
}

func (o GetProxyLBHealthCheckOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBHealthCheck) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetProxyLBHealthCheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func (v GetProxyLBHealthCheck) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetProxyLBHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetProxyLBHealthCheckArrayOutput struct { *pulumi.OutputState}

func (GetProxyLBHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBHealthCheck)(nil)).Elem()
}

func (o GetProxyLBHealthCheckArrayOutput) ToGetProxyLBHealthCheckArrayOutput() GetProxyLBHealthCheckArrayOutput {
	return o
}

func (o GetProxyLBHealthCheckArrayOutput) ToGetProxyLBHealthCheckArrayOutputWithContext(ctx context.Context) GetProxyLBHealthCheckArrayOutput {
	return o
}

func (o GetProxyLBHealthCheckArrayOutput) Index(i pulumi.IntInput) GetProxyLBHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetProxyLBHealthCheck {
		return vs[0].([]GetProxyLBHealthCheck)[vs[1].(int)]
	}).(GetProxyLBHealthCheckOutput)
}

type GetProxyLBRule struct {
	Group string `pulumi:"group"`
	Host string `pulumi:"host"`
	Path string `pulumi:"path"`
}

type GetProxyLBRuleInput interface {
	pulumi.Input

	ToGetProxyLBRuleOutput() GetProxyLBRuleOutput
	ToGetProxyLBRuleOutputWithContext(context.Context) GetProxyLBRuleOutput
}

type GetProxyLBRuleArgs struct {
	Group pulumi.StringInput `pulumi:"group"`
	Host pulumi.StringInput `pulumi:"host"`
	Path pulumi.StringInput `pulumi:"path"`
}

func (GetProxyLBRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBRule)(nil)).Elem()
}

func (i GetProxyLBRuleArgs) ToGetProxyLBRuleOutput() GetProxyLBRuleOutput {
	return i.ToGetProxyLBRuleOutputWithContext(context.Background())
}

func (i GetProxyLBRuleArgs) ToGetProxyLBRuleOutputWithContext(ctx context.Context) GetProxyLBRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBRuleOutput)
}

type GetProxyLBRuleArrayInput interface {
	pulumi.Input

	ToGetProxyLBRuleArrayOutput() GetProxyLBRuleArrayOutput
	ToGetProxyLBRuleArrayOutputWithContext(context.Context) GetProxyLBRuleArrayOutput
}

type GetProxyLBRuleArray []GetProxyLBRuleInput

func (GetProxyLBRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBRule)(nil)).Elem()
}

func (i GetProxyLBRuleArray) ToGetProxyLBRuleArrayOutput() GetProxyLBRuleArrayOutput {
	return i.ToGetProxyLBRuleArrayOutputWithContext(context.Background())
}

func (i GetProxyLBRuleArray) ToGetProxyLBRuleArrayOutputWithContext(ctx context.Context) GetProxyLBRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBRuleArrayOutput)
}

type GetProxyLBRuleOutput struct { *pulumi.OutputState }

func (GetProxyLBRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBRule)(nil)).Elem()
}

func (o GetProxyLBRuleOutput) ToGetProxyLBRuleOutput() GetProxyLBRuleOutput {
	return o
}

func (o GetProxyLBRuleOutput) ToGetProxyLBRuleOutputWithContext(ctx context.Context) GetProxyLBRuleOutput {
	return o
}

func (o GetProxyLBRuleOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBRule) string { return v.Group }).(pulumi.StringOutput)
}

func (o GetProxyLBRuleOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBRule) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetProxyLBRuleOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBRule) string { return v.Path }).(pulumi.StringOutput)
}

type GetProxyLBRuleArrayOutput struct { *pulumi.OutputState}

func (GetProxyLBRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBRule)(nil)).Elem()
}

func (o GetProxyLBRuleArrayOutput) ToGetProxyLBRuleArrayOutput() GetProxyLBRuleArrayOutput {
	return o
}

func (o GetProxyLBRuleArrayOutput) ToGetProxyLBRuleArrayOutputWithContext(ctx context.Context) GetProxyLBRuleArrayOutput {
	return o
}

func (o GetProxyLBRuleArrayOutput) Index(i pulumi.IntInput) GetProxyLBRuleOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetProxyLBRule {
		return vs[0].([]GetProxyLBRule)[vs[1].(int)]
	}).(GetProxyLBRuleOutput)
}

type GetProxyLBServer struct {
	Enabled bool `pulumi:"enabled"`
	Group string `pulumi:"group"`
	IpAddress string `pulumi:"ipAddress"`
	Port int `pulumi:"port"`
}

type GetProxyLBServerInput interface {
	pulumi.Input

	ToGetProxyLBServerOutput() GetProxyLBServerOutput
	ToGetProxyLBServerOutputWithContext(context.Context) GetProxyLBServerOutput
}

type GetProxyLBServerArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	Group pulumi.StringInput `pulumi:"group"`
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetProxyLBServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBServer)(nil)).Elem()
}

func (i GetProxyLBServerArgs) ToGetProxyLBServerOutput() GetProxyLBServerOutput {
	return i.ToGetProxyLBServerOutputWithContext(context.Background())
}

func (i GetProxyLBServerArgs) ToGetProxyLBServerOutputWithContext(ctx context.Context) GetProxyLBServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBServerOutput)
}

type GetProxyLBServerArrayInput interface {
	pulumi.Input

	ToGetProxyLBServerArrayOutput() GetProxyLBServerArrayOutput
	ToGetProxyLBServerArrayOutputWithContext(context.Context) GetProxyLBServerArrayOutput
}

type GetProxyLBServerArray []GetProxyLBServerInput

func (GetProxyLBServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBServer)(nil)).Elem()
}

func (i GetProxyLBServerArray) ToGetProxyLBServerArrayOutput() GetProxyLBServerArrayOutput {
	return i.ToGetProxyLBServerArrayOutputWithContext(context.Background())
}

func (i GetProxyLBServerArray) ToGetProxyLBServerArrayOutputWithContext(ctx context.Context) GetProxyLBServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBServerArrayOutput)
}

type GetProxyLBServerOutput struct { *pulumi.OutputState }

func (GetProxyLBServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBServer)(nil)).Elem()
}

func (o GetProxyLBServerOutput) ToGetProxyLBServerOutput() GetProxyLBServerOutput {
	return o
}

func (o GetProxyLBServerOutput) ToGetProxyLBServerOutputWithContext(ctx context.Context) GetProxyLBServerOutput {
	return o
}

func (o GetProxyLBServerOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v GetProxyLBServer) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetProxyLBServerOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBServer) string { return v.Group }).(pulumi.StringOutput)
}

func (o GetProxyLBServerOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBServer) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetProxyLBServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func (v GetProxyLBServer) int { return v.Port }).(pulumi.IntOutput)
}

type GetProxyLBServerArrayOutput struct { *pulumi.OutputState}

func (GetProxyLBServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBServer)(nil)).Elem()
}

func (o GetProxyLBServerArrayOutput) ToGetProxyLBServerArrayOutput() GetProxyLBServerArrayOutput {
	return o
}

func (o GetProxyLBServerArrayOutput) ToGetProxyLBServerArrayOutputWithContext(ctx context.Context) GetProxyLBServerArrayOutput {
	return o
}

func (o GetProxyLBServerArrayOutput) Index(i pulumi.IntInput) GetProxyLBServerOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetProxyLBServer {
		return vs[0].([]GetProxyLBServer)[vs[1].(int)]
	}).(GetProxyLBServerOutput)
}

type GetProxyLBSorryServer struct {
	IpAddress string `pulumi:"ipAddress"`
	Port int `pulumi:"port"`
}

type GetProxyLBSorryServerInput interface {
	pulumi.Input

	ToGetProxyLBSorryServerOutput() GetProxyLBSorryServerOutput
	ToGetProxyLBSorryServerOutputWithContext(context.Context) GetProxyLBSorryServerOutput
}

type GetProxyLBSorryServerArgs struct {
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	Port pulumi.IntInput `pulumi:"port"`
}

func (GetProxyLBSorryServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBSorryServer)(nil)).Elem()
}

func (i GetProxyLBSorryServerArgs) ToGetProxyLBSorryServerOutput() GetProxyLBSorryServerOutput {
	return i.ToGetProxyLBSorryServerOutputWithContext(context.Background())
}

func (i GetProxyLBSorryServerArgs) ToGetProxyLBSorryServerOutputWithContext(ctx context.Context) GetProxyLBSorryServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBSorryServerOutput)
}

type GetProxyLBSorryServerArrayInput interface {
	pulumi.Input

	ToGetProxyLBSorryServerArrayOutput() GetProxyLBSorryServerArrayOutput
	ToGetProxyLBSorryServerArrayOutputWithContext(context.Context) GetProxyLBSorryServerArrayOutput
}

type GetProxyLBSorryServerArray []GetProxyLBSorryServerInput

func (GetProxyLBSorryServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBSorryServer)(nil)).Elem()
}

func (i GetProxyLBSorryServerArray) ToGetProxyLBSorryServerArrayOutput() GetProxyLBSorryServerArrayOutput {
	return i.ToGetProxyLBSorryServerArrayOutputWithContext(context.Background())
}

func (i GetProxyLBSorryServerArray) ToGetProxyLBSorryServerArrayOutputWithContext(ctx context.Context) GetProxyLBSorryServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyLBSorryServerArrayOutput)
}

type GetProxyLBSorryServerOutput struct { *pulumi.OutputState }

func (GetProxyLBSorryServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyLBSorryServer)(nil)).Elem()
}

func (o GetProxyLBSorryServerOutput) ToGetProxyLBSorryServerOutput() GetProxyLBSorryServerOutput {
	return o
}

func (o GetProxyLBSorryServerOutput) ToGetProxyLBSorryServerOutputWithContext(ctx context.Context) GetProxyLBSorryServerOutput {
	return o
}

func (o GetProxyLBSorryServerOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v GetProxyLBSorryServer) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetProxyLBSorryServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func (v GetProxyLBSorryServer) int { return v.Port }).(pulumi.IntOutput)
}

type GetProxyLBSorryServerArrayOutput struct { *pulumi.OutputState}

func (GetProxyLBSorryServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyLBSorryServer)(nil)).Elem()
}

func (o GetProxyLBSorryServerArrayOutput) ToGetProxyLBSorryServerArrayOutput() GetProxyLBSorryServerArrayOutput {
	return o
}

func (o GetProxyLBSorryServerArrayOutput) ToGetProxyLBSorryServerArrayOutputWithContext(ctx context.Context) GetProxyLBSorryServerArrayOutput {
	return o
}

func (o GetProxyLBSorryServerArrayOutput) Index(i pulumi.IntInput) GetProxyLBSorryServerOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetProxyLBSorryServer {
		return vs[0].([]GetProxyLBSorryServer)[vs[1].(int)]
	}).(GetProxyLBSorryServerOutput)
}

type GetSSHKeyFilter struct {
	Conditions []GetSSHKeyFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
}

type GetSSHKeyFilterInput interface {
	pulumi.Input

	ToGetSSHKeyFilterOutput() GetSSHKeyFilterOutput
	ToGetSSHKeyFilterOutputWithContext(context.Context) GetSSHKeyFilterOutput
}

type GetSSHKeyFilterArgs struct {
	Conditions GetSSHKeyFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
}

func (GetSSHKeyFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSSHKeyFilter)(nil)).Elem()
}

func (i GetSSHKeyFilterArgs) ToGetSSHKeyFilterOutput() GetSSHKeyFilterOutput {
	return i.ToGetSSHKeyFilterOutputWithContext(context.Background())
}

func (i GetSSHKeyFilterArgs) ToGetSSHKeyFilterOutputWithContext(ctx context.Context) GetSSHKeyFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSSHKeyFilterOutput)
}

type GetSSHKeyFilterOutput struct { *pulumi.OutputState }

func (GetSSHKeyFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSSHKeyFilter)(nil)).Elem()
}

func (o GetSSHKeyFilterOutput) ToGetSSHKeyFilterOutput() GetSSHKeyFilterOutput {
	return o
}

func (o GetSSHKeyFilterOutput) ToGetSSHKeyFilterOutputWithContext(ctx context.Context) GetSSHKeyFilterOutput {
	return o
}

func (o GetSSHKeyFilterOutput) Conditions() GetSSHKeyFilterConditionArrayOutput {
	return o.ApplyT(func (v GetSSHKeyFilter) []GetSSHKeyFilterCondition { return v.Conditions }).(GetSSHKeyFilterConditionArrayOutput)
}

func (o GetSSHKeyFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetSSHKeyFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetSSHKeyFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetSSHKeyFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

type GetSSHKeyFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetSSHKeyFilterConditionInput interface {
	pulumi.Input

	ToGetSSHKeyFilterConditionOutput() GetSSHKeyFilterConditionOutput
	ToGetSSHKeyFilterConditionOutputWithContext(context.Context) GetSSHKeyFilterConditionOutput
}

type GetSSHKeyFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSSHKeyFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSSHKeyFilterCondition)(nil)).Elem()
}

func (i GetSSHKeyFilterConditionArgs) ToGetSSHKeyFilterConditionOutput() GetSSHKeyFilterConditionOutput {
	return i.ToGetSSHKeyFilterConditionOutputWithContext(context.Background())
}

func (i GetSSHKeyFilterConditionArgs) ToGetSSHKeyFilterConditionOutputWithContext(ctx context.Context) GetSSHKeyFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSSHKeyFilterConditionOutput)
}

type GetSSHKeyFilterConditionArrayInput interface {
	pulumi.Input

	ToGetSSHKeyFilterConditionArrayOutput() GetSSHKeyFilterConditionArrayOutput
	ToGetSSHKeyFilterConditionArrayOutputWithContext(context.Context) GetSSHKeyFilterConditionArrayOutput
}

type GetSSHKeyFilterConditionArray []GetSSHKeyFilterConditionInput

func (GetSSHKeyFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSSHKeyFilterCondition)(nil)).Elem()
}

func (i GetSSHKeyFilterConditionArray) ToGetSSHKeyFilterConditionArrayOutput() GetSSHKeyFilterConditionArrayOutput {
	return i.ToGetSSHKeyFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetSSHKeyFilterConditionArray) ToGetSSHKeyFilterConditionArrayOutputWithContext(ctx context.Context) GetSSHKeyFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSSHKeyFilterConditionArrayOutput)
}

type GetSSHKeyFilterConditionOutput struct { *pulumi.OutputState }

func (GetSSHKeyFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSSHKeyFilterCondition)(nil)).Elem()
}

func (o GetSSHKeyFilterConditionOutput) ToGetSSHKeyFilterConditionOutput() GetSSHKeyFilterConditionOutput {
	return o
}

func (o GetSSHKeyFilterConditionOutput) ToGetSSHKeyFilterConditionOutputWithContext(ctx context.Context) GetSSHKeyFilterConditionOutput {
	return o
}

func (o GetSSHKeyFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetSSHKeyFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSSHKeyFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetSSHKeyFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSSHKeyFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetSSHKeyFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSSHKeyFilterCondition)(nil)).Elem()
}

func (o GetSSHKeyFilterConditionArrayOutput) ToGetSSHKeyFilterConditionArrayOutput() GetSSHKeyFilterConditionArrayOutput {
	return o
}

func (o GetSSHKeyFilterConditionArrayOutput) ToGetSSHKeyFilterConditionArrayOutputWithContext(ctx context.Context) GetSSHKeyFilterConditionArrayOutput {
	return o
}

func (o GetSSHKeyFilterConditionArrayOutput) Index(i pulumi.IntInput) GetSSHKeyFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetSSHKeyFilterCondition {
		return vs[0].([]GetSSHKeyFilterCondition)[vs[1].(int)]
	}).(GetSSHKeyFilterConditionOutput)
}

type GetServerFilter struct {
	Conditions []GetServerFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetServerFilterInput interface {
	pulumi.Input

	ToGetServerFilterOutput() GetServerFilterOutput
	ToGetServerFilterOutputWithContext(context.Context) GetServerFilterOutput
}

type GetServerFilterArgs struct {
	Conditions GetServerFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetServerFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerFilter)(nil)).Elem()
}

func (i GetServerFilterArgs) ToGetServerFilterOutput() GetServerFilterOutput {
	return i.ToGetServerFilterOutputWithContext(context.Background())
}

func (i GetServerFilterArgs) ToGetServerFilterOutputWithContext(ctx context.Context) GetServerFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerFilterOutput)
}

type GetServerFilterOutput struct { *pulumi.OutputState }

func (GetServerFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerFilter)(nil)).Elem()
}

func (o GetServerFilterOutput) ToGetServerFilterOutput() GetServerFilterOutput {
	return o
}

func (o GetServerFilterOutput) ToGetServerFilterOutputWithContext(ctx context.Context) GetServerFilterOutput {
	return o
}

func (o GetServerFilterOutput) Conditions() GetServerFilterConditionArrayOutput {
	return o.ApplyT(func (v GetServerFilter) []GetServerFilterCondition { return v.Conditions }).(GetServerFilterConditionArrayOutput)
}

func (o GetServerFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetServerFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetServerFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetServerFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetServerFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetServerFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetServerFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetServerFilterConditionInput interface {
	pulumi.Input

	ToGetServerFilterConditionOutput() GetServerFilterConditionOutput
	ToGetServerFilterConditionOutputWithContext(context.Context) GetServerFilterConditionOutput
}

type GetServerFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetServerFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerFilterCondition)(nil)).Elem()
}

func (i GetServerFilterConditionArgs) ToGetServerFilterConditionOutput() GetServerFilterConditionOutput {
	return i.ToGetServerFilterConditionOutputWithContext(context.Background())
}

func (i GetServerFilterConditionArgs) ToGetServerFilterConditionOutputWithContext(ctx context.Context) GetServerFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerFilterConditionOutput)
}

type GetServerFilterConditionArrayInput interface {
	pulumi.Input

	ToGetServerFilterConditionArrayOutput() GetServerFilterConditionArrayOutput
	ToGetServerFilterConditionArrayOutputWithContext(context.Context) GetServerFilterConditionArrayOutput
}

type GetServerFilterConditionArray []GetServerFilterConditionInput

func (GetServerFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerFilterCondition)(nil)).Elem()
}

func (i GetServerFilterConditionArray) ToGetServerFilterConditionArrayOutput() GetServerFilterConditionArrayOutput {
	return i.ToGetServerFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetServerFilterConditionArray) ToGetServerFilterConditionArrayOutputWithContext(ctx context.Context) GetServerFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerFilterConditionArrayOutput)
}

type GetServerFilterConditionOutput struct { *pulumi.OutputState }

func (GetServerFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerFilterCondition)(nil)).Elem()
}

func (o GetServerFilterConditionOutput) ToGetServerFilterConditionOutput() GetServerFilterConditionOutput {
	return o
}

func (o GetServerFilterConditionOutput) ToGetServerFilterConditionOutputWithContext(ctx context.Context) GetServerFilterConditionOutput {
	return o
}

func (o GetServerFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetServerFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetServerFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetServerFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetServerFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetServerFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerFilterCondition)(nil)).Elem()
}

func (o GetServerFilterConditionArrayOutput) ToGetServerFilterConditionArrayOutput() GetServerFilterConditionArrayOutput {
	return o
}

func (o GetServerFilterConditionArrayOutput) ToGetServerFilterConditionArrayOutputWithContext(ctx context.Context) GetServerFilterConditionArrayOutput {
	return o
}

func (o GetServerFilterConditionArrayOutput) Index(i pulumi.IntInput) GetServerFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetServerFilterCondition {
		return vs[0].([]GetServerFilterCondition)[vs[1].(int)]
	}).(GetServerFilterConditionOutput)
}

type GetServerNetworkInterface struct {
	MacAddress string `pulumi:"macAddress"`
	PacketFilterId string `pulumi:"packetFilterId"`
	Upstream string `pulumi:"upstream"`
	UserIpAddress string `pulumi:"userIpAddress"`
}

type GetServerNetworkInterfaceInput interface {
	pulumi.Input

	ToGetServerNetworkInterfaceOutput() GetServerNetworkInterfaceOutput
	ToGetServerNetworkInterfaceOutputWithContext(context.Context) GetServerNetworkInterfaceOutput
}

type GetServerNetworkInterfaceArgs struct {
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
	PacketFilterId pulumi.StringInput `pulumi:"packetFilterId"`
	Upstream pulumi.StringInput `pulumi:"upstream"`
	UserIpAddress pulumi.StringInput `pulumi:"userIpAddress"`
}

func (GetServerNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkInterface)(nil)).Elem()
}

func (i GetServerNetworkInterfaceArgs) ToGetServerNetworkInterfaceOutput() GetServerNetworkInterfaceOutput {
	return i.ToGetServerNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetServerNetworkInterfaceArgs) ToGetServerNetworkInterfaceOutputWithContext(ctx context.Context) GetServerNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkInterfaceOutput)
}

type GetServerNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetServerNetworkInterfaceArrayOutput() GetServerNetworkInterfaceArrayOutput
	ToGetServerNetworkInterfaceArrayOutputWithContext(context.Context) GetServerNetworkInterfaceArrayOutput
}

type GetServerNetworkInterfaceArray []GetServerNetworkInterfaceInput

func (GetServerNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkInterface)(nil)).Elem()
}

func (i GetServerNetworkInterfaceArray) ToGetServerNetworkInterfaceArrayOutput() GetServerNetworkInterfaceArrayOutput {
	return i.ToGetServerNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetServerNetworkInterfaceArray) ToGetServerNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetServerNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerNetworkInterfaceArrayOutput)
}

type GetServerNetworkInterfaceOutput struct { *pulumi.OutputState }

func (GetServerNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerNetworkInterface)(nil)).Elem()
}

func (o GetServerNetworkInterfaceOutput) ToGetServerNetworkInterfaceOutput() GetServerNetworkInterfaceOutput {
	return o
}

func (o GetServerNetworkInterfaceOutput) ToGetServerNetworkInterfaceOutputWithContext(ctx context.Context) GetServerNetworkInterfaceOutput {
	return o
}

func (o GetServerNetworkInterfaceOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func (v GetServerNetworkInterface) string { return v.MacAddress }).(pulumi.StringOutput)
}

func (o GetServerNetworkInterfaceOutput) PacketFilterId() pulumi.StringOutput {
	return o.ApplyT(func (v GetServerNetworkInterface) string { return v.PacketFilterId }).(pulumi.StringOutput)
}

func (o GetServerNetworkInterfaceOutput) Upstream() pulumi.StringOutput {
	return o.ApplyT(func (v GetServerNetworkInterface) string { return v.Upstream }).(pulumi.StringOutput)
}

func (o GetServerNetworkInterfaceOutput) UserIpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v GetServerNetworkInterface) string { return v.UserIpAddress }).(pulumi.StringOutput)
}

type GetServerNetworkInterfaceArrayOutput struct { *pulumi.OutputState}

func (GetServerNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerNetworkInterface)(nil)).Elem()
}

func (o GetServerNetworkInterfaceArrayOutput) ToGetServerNetworkInterfaceArrayOutput() GetServerNetworkInterfaceArrayOutput {
	return o
}

func (o GetServerNetworkInterfaceArrayOutput) ToGetServerNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetServerNetworkInterfaceArrayOutput {
	return o
}

func (o GetServerNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetServerNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetServerNetworkInterface {
		return vs[0].([]GetServerNetworkInterface)[vs[1].(int)]
	}).(GetServerNetworkInterfaceOutput)
}

type GetSimpleMonitorFilter struct {
	Conditions []GetSimpleMonitorFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetSimpleMonitorFilterInput interface {
	pulumi.Input

	ToGetSimpleMonitorFilterOutput() GetSimpleMonitorFilterOutput
	ToGetSimpleMonitorFilterOutputWithContext(context.Context) GetSimpleMonitorFilterOutput
}

type GetSimpleMonitorFilterArgs struct {
	Conditions GetSimpleMonitorFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetSimpleMonitorFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSimpleMonitorFilter)(nil)).Elem()
}

func (i GetSimpleMonitorFilterArgs) ToGetSimpleMonitorFilterOutput() GetSimpleMonitorFilterOutput {
	return i.ToGetSimpleMonitorFilterOutputWithContext(context.Background())
}

func (i GetSimpleMonitorFilterArgs) ToGetSimpleMonitorFilterOutputWithContext(ctx context.Context) GetSimpleMonitorFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSimpleMonitorFilterOutput)
}

type GetSimpleMonitorFilterOutput struct { *pulumi.OutputState }

func (GetSimpleMonitorFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSimpleMonitorFilter)(nil)).Elem()
}

func (o GetSimpleMonitorFilterOutput) ToGetSimpleMonitorFilterOutput() GetSimpleMonitorFilterOutput {
	return o
}

func (o GetSimpleMonitorFilterOutput) ToGetSimpleMonitorFilterOutputWithContext(ctx context.Context) GetSimpleMonitorFilterOutput {
	return o
}

func (o GetSimpleMonitorFilterOutput) Conditions() GetSimpleMonitorFilterConditionArrayOutput {
	return o.ApplyT(func (v GetSimpleMonitorFilter) []GetSimpleMonitorFilterCondition { return v.Conditions }).(GetSimpleMonitorFilterConditionArrayOutput)
}

func (o GetSimpleMonitorFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetSimpleMonitorFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetSimpleMonitorFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetSimpleMonitorFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetSimpleMonitorFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetSimpleMonitorFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetSimpleMonitorFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetSimpleMonitorFilterConditionInput interface {
	pulumi.Input

	ToGetSimpleMonitorFilterConditionOutput() GetSimpleMonitorFilterConditionOutput
	ToGetSimpleMonitorFilterConditionOutputWithContext(context.Context) GetSimpleMonitorFilterConditionOutput
}

type GetSimpleMonitorFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSimpleMonitorFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSimpleMonitorFilterCondition)(nil)).Elem()
}

func (i GetSimpleMonitorFilterConditionArgs) ToGetSimpleMonitorFilterConditionOutput() GetSimpleMonitorFilterConditionOutput {
	return i.ToGetSimpleMonitorFilterConditionOutputWithContext(context.Background())
}

func (i GetSimpleMonitorFilterConditionArgs) ToGetSimpleMonitorFilterConditionOutputWithContext(ctx context.Context) GetSimpleMonitorFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSimpleMonitorFilterConditionOutput)
}

type GetSimpleMonitorFilterConditionArrayInput interface {
	pulumi.Input

	ToGetSimpleMonitorFilterConditionArrayOutput() GetSimpleMonitorFilterConditionArrayOutput
	ToGetSimpleMonitorFilterConditionArrayOutputWithContext(context.Context) GetSimpleMonitorFilterConditionArrayOutput
}

type GetSimpleMonitorFilterConditionArray []GetSimpleMonitorFilterConditionInput

func (GetSimpleMonitorFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSimpleMonitorFilterCondition)(nil)).Elem()
}

func (i GetSimpleMonitorFilterConditionArray) ToGetSimpleMonitorFilterConditionArrayOutput() GetSimpleMonitorFilterConditionArrayOutput {
	return i.ToGetSimpleMonitorFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetSimpleMonitorFilterConditionArray) ToGetSimpleMonitorFilterConditionArrayOutputWithContext(ctx context.Context) GetSimpleMonitorFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSimpleMonitorFilterConditionArrayOutput)
}

type GetSimpleMonitorFilterConditionOutput struct { *pulumi.OutputState }

func (GetSimpleMonitorFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSimpleMonitorFilterCondition)(nil)).Elem()
}

func (o GetSimpleMonitorFilterConditionOutput) ToGetSimpleMonitorFilterConditionOutput() GetSimpleMonitorFilterConditionOutput {
	return o
}

func (o GetSimpleMonitorFilterConditionOutput) ToGetSimpleMonitorFilterConditionOutputWithContext(ctx context.Context) GetSimpleMonitorFilterConditionOutput {
	return o
}

func (o GetSimpleMonitorFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetSimpleMonitorFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSimpleMonitorFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetSimpleMonitorFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSimpleMonitorFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetSimpleMonitorFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSimpleMonitorFilterCondition)(nil)).Elem()
}

func (o GetSimpleMonitorFilterConditionArrayOutput) ToGetSimpleMonitorFilterConditionArrayOutput() GetSimpleMonitorFilterConditionArrayOutput {
	return o
}

func (o GetSimpleMonitorFilterConditionArrayOutput) ToGetSimpleMonitorFilterConditionArrayOutputWithContext(ctx context.Context) GetSimpleMonitorFilterConditionArrayOutput {
	return o
}

func (o GetSimpleMonitorFilterConditionArrayOutput) Index(i pulumi.IntInput) GetSimpleMonitorFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetSimpleMonitorFilterCondition {
		return vs[0].([]GetSimpleMonitorFilterCondition)[vs[1].(int)]
	}).(GetSimpleMonitorFilterConditionOutput)
}

type GetSimpleMonitorHealthCheck struct {
	Community string `pulumi:"community"`
	ExcepctedData string `pulumi:"excepctedData"`
	HostHeader string `pulumi:"hostHeader"`
	Oid string `pulumi:"oid"`
	Password string `pulumi:"password"`
	Path string `pulumi:"path"`
	Port int `pulumi:"port"`
	Protocol string `pulumi:"protocol"`
	Qname string `pulumi:"qname"`
	RemainingDays int `pulumi:"remainingDays"`
	Sni bool `pulumi:"sni"`
	SnmpVersion string `pulumi:"snmpVersion"`
	Status int `pulumi:"status"`
	Username string `pulumi:"username"`
}

type GetSimpleMonitorHealthCheckInput interface {
	pulumi.Input

	ToGetSimpleMonitorHealthCheckOutput() GetSimpleMonitorHealthCheckOutput
	ToGetSimpleMonitorHealthCheckOutputWithContext(context.Context) GetSimpleMonitorHealthCheckOutput
}

type GetSimpleMonitorHealthCheckArgs struct {
	Community pulumi.StringInput `pulumi:"community"`
	ExcepctedData pulumi.StringInput `pulumi:"excepctedData"`
	HostHeader pulumi.StringInput `pulumi:"hostHeader"`
	Oid pulumi.StringInput `pulumi:"oid"`
	Password pulumi.StringInput `pulumi:"password"`
	Path pulumi.StringInput `pulumi:"path"`
	Port pulumi.IntInput `pulumi:"port"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	Qname pulumi.StringInput `pulumi:"qname"`
	RemainingDays pulumi.IntInput `pulumi:"remainingDays"`
	Sni pulumi.BoolInput `pulumi:"sni"`
	SnmpVersion pulumi.StringInput `pulumi:"snmpVersion"`
	Status pulumi.IntInput `pulumi:"status"`
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetSimpleMonitorHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSimpleMonitorHealthCheck)(nil)).Elem()
}

func (i GetSimpleMonitorHealthCheckArgs) ToGetSimpleMonitorHealthCheckOutput() GetSimpleMonitorHealthCheckOutput {
	return i.ToGetSimpleMonitorHealthCheckOutputWithContext(context.Background())
}

func (i GetSimpleMonitorHealthCheckArgs) ToGetSimpleMonitorHealthCheckOutputWithContext(ctx context.Context) GetSimpleMonitorHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSimpleMonitorHealthCheckOutput)
}

type GetSimpleMonitorHealthCheckArrayInput interface {
	pulumi.Input

	ToGetSimpleMonitorHealthCheckArrayOutput() GetSimpleMonitorHealthCheckArrayOutput
	ToGetSimpleMonitorHealthCheckArrayOutputWithContext(context.Context) GetSimpleMonitorHealthCheckArrayOutput
}

type GetSimpleMonitorHealthCheckArray []GetSimpleMonitorHealthCheckInput

func (GetSimpleMonitorHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSimpleMonitorHealthCheck)(nil)).Elem()
}

func (i GetSimpleMonitorHealthCheckArray) ToGetSimpleMonitorHealthCheckArrayOutput() GetSimpleMonitorHealthCheckArrayOutput {
	return i.ToGetSimpleMonitorHealthCheckArrayOutputWithContext(context.Background())
}

func (i GetSimpleMonitorHealthCheckArray) ToGetSimpleMonitorHealthCheckArrayOutputWithContext(ctx context.Context) GetSimpleMonitorHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSimpleMonitorHealthCheckArrayOutput)
}

type GetSimpleMonitorHealthCheckOutput struct { *pulumi.OutputState }

func (GetSimpleMonitorHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSimpleMonitorHealthCheck)(nil)).Elem()
}

func (o GetSimpleMonitorHealthCheckOutput) ToGetSimpleMonitorHealthCheckOutput() GetSimpleMonitorHealthCheckOutput {
	return o
}

func (o GetSimpleMonitorHealthCheckOutput) ToGetSimpleMonitorHealthCheckOutputWithContext(ctx context.Context) GetSimpleMonitorHealthCheckOutput {
	return o
}

func (o GetSimpleMonitorHealthCheckOutput) Community() pulumi.StringOutput {
	return o.ApplyT(func (v GetSimpleMonitorHealthCheck) string { return v.Community }).(pulumi.StringOutput)
}

func (o GetSimpleMonitorHealthCheckOutput) ExcepctedData() pulumi.StringOutput {
	return o.ApplyT(func (v GetSimpleMonitorHealthCheck) string { return v.ExcepctedData }).(pulumi.StringOutput)
}

func (o GetSimpleMonitorHealthCheckOutput) HostHeader() pulumi.StringOutput {
	return o.ApplyT(func (v GetSimpleMonitorHealthCheck) string { return v.HostHeader }).(pulumi.StringOutput)
}

func (o GetSimpleMonitorHealthCheckOutput) Oid() pulumi.StringOutput {
	return o.ApplyT(func (v GetSimpleMonitorHealthCheck) string { return v.Oid }).(pulumi.StringOutput)
}

func (o GetSimpleMonitorHealthCheckOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func (v GetSimpleMonitorHealthCheck) string { return v.Password }).(pulumi.StringOutput)
}

func (o GetSimpleMonitorHealthCheckOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func (v GetSimpleMonitorHealthCheck) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetSimpleMonitorHealthCheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func (v GetSimpleMonitorHealthCheck) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetSimpleMonitorHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v GetSimpleMonitorHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetSimpleMonitorHealthCheckOutput) Qname() pulumi.StringOutput {
	return o.ApplyT(func (v GetSimpleMonitorHealthCheck) string { return v.Qname }).(pulumi.StringOutput)
}

func (o GetSimpleMonitorHealthCheckOutput) RemainingDays() pulumi.IntOutput {
	return o.ApplyT(func (v GetSimpleMonitorHealthCheck) int { return v.RemainingDays }).(pulumi.IntOutput)
}

func (o GetSimpleMonitorHealthCheckOutput) Sni() pulumi.BoolOutput {
	return o.ApplyT(func (v GetSimpleMonitorHealthCheck) bool { return v.Sni }).(pulumi.BoolOutput)
}

func (o GetSimpleMonitorHealthCheckOutput) SnmpVersion() pulumi.StringOutput {
	return o.ApplyT(func (v GetSimpleMonitorHealthCheck) string { return v.SnmpVersion }).(pulumi.StringOutput)
}

func (o GetSimpleMonitorHealthCheckOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func (v GetSimpleMonitorHealthCheck) int { return v.Status }).(pulumi.IntOutput)
}

func (o GetSimpleMonitorHealthCheckOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func (v GetSimpleMonitorHealthCheck) string { return v.Username }).(pulumi.StringOutput)
}

type GetSimpleMonitorHealthCheckArrayOutput struct { *pulumi.OutputState}

func (GetSimpleMonitorHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSimpleMonitorHealthCheck)(nil)).Elem()
}

func (o GetSimpleMonitorHealthCheckArrayOutput) ToGetSimpleMonitorHealthCheckArrayOutput() GetSimpleMonitorHealthCheckArrayOutput {
	return o
}

func (o GetSimpleMonitorHealthCheckArrayOutput) ToGetSimpleMonitorHealthCheckArrayOutputWithContext(ctx context.Context) GetSimpleMonitorHealthCheckArrayOutput {
	return o
}

func (o GetSimpleMonitorHealthCheckArrayOutput) Index(i pulumi.IntInput) GetSimpleMonitorHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetSimpleMonitorHealthCheck {
		return vs[0].([]GetSimpleMonitorHealthCheck)[vs[1].(int)]
	}).(GetSimpleMonitorHealthCheckOutput)
}

type GetSwitchFilter struct {
	Conditions []GetSwitchFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetSwitchFilterInput interface {
	pulumi.Input

	ToGetSwitchFilterOutput() GetSwitchFilterOutput
	ToGetSwitchFilterOutputWithContext(context.Context) GetSwitchFilterOutput
}

type GetSwitchFilterArgs struct {
	Conditions GetSwitchFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetSwitchFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchFilter)(nil)).Elem()
}

func (i GetSwitchFilterArgs) ToGetSwitchFilterOutput() GetSwitchFilterOutput {
	return i.ToGetSwitchFilterOutputWithContext(context.Background())
}

func (i GetSwitchFilterArgs) ToGetSwitchFilterOutputWithContext(ctx context.Context) GetSwitchFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchFilterOutput)
}

type GetSwitchFilterOutput struct { *pulumi.OutputState }

func (GetSwitchFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchFilter)(nil)).Elem()
}

func (o GetSwitchFilterOutput) ToGetSwitchFilterOutput() GetSwitchFilterOutput {
	return o
}

func (o GetSwitchFilterOutput) ToGetSwitchFilterOutputWithContext(ctx context.Context) GetSwitchFilterOutput {
	return o
}

func (o GetSwitchFilterOutput) Conditions() GetSwitchFilterConditionArrayOutput {
	return o.ApplyT(func (v GetSwitchFilter) []GetSwitchFilterCondition { return v.Conditions }).(GetSwitchFilterConditionArrayOutput)
}

func (o GetSwitchFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetSwitchFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetSwitchFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetSwitchFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetSwitchFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetSwitchFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetSwitchFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetSwitchFilterConditionInput interface {
	pulumi.Input

	ToGetSwitchFilterConditionOutput() GetSwitchFilterConditionOutput
	ToGetSwitchFilterConditionOutputWithContext(context.Context) GetSwitchFilterConditionOutput
}

type GetSwitchFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSwitchFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchFilterCondition)(nil)).Elem()
}

func (i GetSwitchFilterConditionArgs) ToGetSwitchFilterConditionOutput() GetSwitchFilterConditionOutput {
	return i.ToGetSwitchFilterConditionOutputWithContext(context.Background())
}

func (i GetSwitchFilterConditionArgs) ToGetSwitchFilterConditionOutputWithContext(ctx context.Context) GetSwitchFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchFilterConditionOutput)
}

type GetSwitchFilterConditionArrayInput interface {
	pulumi.Input

	ToGetSwitchFilterConditionArrayOutput() GetSwitchFilterConditionArrayOutput
	ToGetSwitchFilterConditionArrayOutputWithContext(context.Context) GetSwitchFilterConditionArrayOutput
}

type GetSwitchFilterConditionArray []GetSwitchFilterConditionInput

func (GetSwitchFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchFilterCondition)(nil)).Elem()
}

func (i GetSwitchFilterConditionArray) ToGetSwitchFilterConditionArrayOutput() GetSwitchFilterConditionArrayOutput {
	return i.ToGetSwitchFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetSwitchFilterConditionArray) ToGetSwitchFilterConditionArrayOutputWithContext(ctx context.Context) GetSwitchFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSwitchFilterConditionArrayOutput)
}

type GetSwitchFilterConditionOutput struct { *pulumi.OutputState }

func (GetSwitchFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSwitchFilterCondition)(nil)).Elem()
}

func (o GetSwitchFilterConditionOutput) ToGetSwitchFilterConditionOutput() GetSwitchFilterConditionOutput {
	return o
}

func (o GetSwitchFilterConditionOutput) ToGetSwitchFilterConditionOutputWithContext(ctx context.Context) GetSwitchFilterConditionOutput {
	return o
}

func (o GetSwitchFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetSwitchFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSwitchFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetSwitchFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSwitchFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetSwitchFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSwitchFilterCondition)(nil)).Elem()
}

func (o GetSwitchFilterConditionArrayOutput) ToGetSwitchFilterConditionArrayOutput() GetSwitchFilterConditionArrayOutput {
	return o
}

func (o GetSwitchFilterConditionArrayOutput) ToGetSwitchFilterConditionArrayOutputWithContext(ctx context.Context) GetSwitchFilterConditionArrayOutput {
	return o
}

func (o GetSwitchFilterConditionArrayOutput) Index(i pulumi.IntInput) GetSwitchFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetSwitchFilterCondition {
		return vs[0].([]GetSwitchFilterCondition)[vs[1].(int)]
	}).(GetSwitchFilterConditionOutput)
}

type GetVPCRouterDhcpServer struct {
	DnsServers []string `pulumi:"dnsServers"`
	InterfaceIndex int `pulumi:"interfaceIndex"`
	RangeStart string `pulumi:"rangeStart"`
	RangeStop string `pulumi:"rangeStop"`
}

type GetVPCRouterDhcpServerInput interface {
	pulumi.Input

	ToGetVPCRouterDhcpServerOutput() GetVPCRouterDhcpServerOutput
	ToGetVPCRouterDhcpServerOutputWithContext(context.Context) GetVPCRouterDhcpServerOutput
}

type GetVPCRouterDhcpServerArgs struct {
	DnsServers pulumi.StringArrayInput `pulumi:"dnsServers"`
	InterfaceIndex pulumi.IntInput `pulumi:"interfaceIndex"`
	RangeStart pulumi.StringInput `pulumi:"rangeStart"`
	RangeStop pulumi.StringInput `pulumi:"rangeStop"`
}

func (GetVPCRouterDhcpServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterDhcpServer)(nil)).Elem()
}

func (i GetVPCRouterDhcpServerArgs) ToGetVPCRouterDhcpServerOutput() GetVPCRouterDhcpServerOutput {
	return i.ToGetVPCRouterDhcpServerOutputWithContext(context.Background())
}

func (i GetVPCRouterDhcpServerArgs) ToGetVPCRouterDhcpServerOutputWithContext(ctx context.Context) GetVPCRouterDhcpServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterDhcpServerOutput)
}

type GetVPCRouterDhcpServerArrayInput interface {
	pulumi.Input

	ToGetVPCRouterDhcpServerArrayOutput() GetVPCRouterDhcpServerArrayOutput
	ToGetVPCRouterDhcpServerArrayOutputWithContext(context.Context) GetVPCRouterDhcpServerArrayOutput
}

type GetVPCRouterDhcpServerArray []GetVPCRouterDhcpServerInput

func (GetVPCRouterDhcpServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterDhcpServer)(nil)).Elem()
}

func (i GetVPCRouterDhcpServerArray) ToGetVPCRouterDhcpServerArrayOutput() GetVPCRouterDhcpServerArrayOutput {
	return i.ToGetVPCRouterDhcpServerArrayOutputWithContext(context.Background())
}

func (i GetVPCRouterDhcpServerArray) ToGetVPCRouterDhcpServerArrayOutputWithContext(ctx context.Context) GetVPCRouterDhcpServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterDhcpServerArrayOutput)
}

type GetVPCRouterDhcpServerOutput struct { *pulumi.OutputState }

func (GetVPCRouterDhcpServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterDhcpServer)(nil)).Elem()
}

func (o GetVPCRouterDhcpServerOutput) ToGetVPCRouterDhcpServerOutput() GetVPCRouterDhcpServerOutput {
	return o
}

func (o GetVPCRouterDhcpServerOutput) ToGetVPCRouterDhcpServerOutputWithContext(ctx context.Context) GetVPCRouterDhcpServerOutput {
	return o
}

func (o GetVPCRouterDhcpServerOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetVPCRouterDhcpServer) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

func (o GetVPCRouterDhcpServerOutput) InterfaceIndex() pulumi.IntOutput {
	return o.ApplyT(func (v GetVPCRouterDhcpServer) int { return v.InterfaceIndex }).(pulumi.IntOutput)
}

func (o GetVPCRouterDhcpServerOutput) RangeStart() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterDhcpServer) string { return v.RangeStart }).(pulumi.StringOutput)
}

func (o GetVPCRouterDhcpServerOutput) RangeStop() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterDhcpServer) string { return v.RangeStop }).(pulumi.StringOutput)
}

type GetVPCRouterDhcpServerArrayOutput struct { *pulumi.OutputState}

func (GetVPCRouterDhcpServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterDhcpServer)(nil)).Elem()
}

func (o GetVPCRouterDhcpServerArrayOutput) ToGetVPCRouterDhcpServerArrayOutput() GetVPCRouterDhcpServerArrayOutput {
	return o
}

func (o GetVPCRouterDhcpServerArrayOutput) ToGetVPCRouterDhcpServerArrayOutputWithContext(ctx context.Context) GetVPCRouterDhcpServerArrayOutput {
	return o
}

func (o GetVPCRouterDhcpServerArrayOutput) Index(i pulumi.IntInput) GetVPCRouterDhcpServerOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVPCRouterDhcpServer {
		return vs[0].([]GetVPCRouterDhcpServer)[vs[1].(int)]
	}).(GetVPCRouterDhcpServerOutput)
}

type GetVPCRouterDhcpStaticMapping struct {
	IpAddress string `pulumi:"ipAddress"`
	MacAddress string `pulumi:"macAddress"`
}

type GetVPCRouterDhcpStaticMappingInput interface {
	pulumi.Input

	ToGetVPCRouterDhcpStaticMappingOutput() GetVPCRouterDhcpStaticMappingOutput
	ToGetVPCRouterDhcpStaticMappingOutputWithContext(context.Context) GetVPCRouterDhcpStaticMappingOutput
}

type GetVPCRouterDhcpStaticMappingArgs struct {
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	MacAddress pulumi.StringInput `pulumi:"macAddress"`
}

func (GetVPCRouterDhcpStaticMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterDhcpStaticMapping)(nil)).Elem()
}

func (i GetVPCRouterDhcpStaticMappingArgs) ToGetVPCRouterDhcpStaticMappingOutput() GetVPCRouterDhcpStaticMappingOutput {
	return i.ToGetVPCRouterDhcpStaticMappingOutputWithContext(context.Background())
}

func (i GetVPCRouterDhcpStaticMappingArgs) ToGetVPCRouterDhcpStaticMappingOutputWithContext(ctx context.Context) GetVPCRouterDhcpStaticMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterDhcpStaticMappingOutput)
}

type GetVPCRouterDhcpStaticMappingArrayInput interface {
	pulumi.Input

	ToGetVPCRouterDhcpStaticMappingArrayOutput() GetVPCRouterDhcpStaticMappingArrayOutput
	ToGetVPCRouterDhcpStaticMappingArrayOutputWithContext(context.Context) GetVPCRouterDhcpStaticMappingArrayOutput
}

type GetVPCRouterDhcpStaticMappingArray []GetVPCRouterDhcpStaticMappingInput

func (GetVPCRouterDhcpStaticMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterDhcpStaticMapping)(nil)).Elem()
}

func (i GetVPCRouterDhcpStaticMappingArray) ToGetVPCRouterDhcpStaticMappingArrayOutput() GetVPCRouterDhcpStaticMappingArrayOutput {
	return i.ToGetVPCRouterDhcpStaticMappingArrayOutputWithContext(context.Background())
}

func (i GetVPCRouterDhcpStaticMappingArray) ToGetVPCRouterDhcpStaticMappingArrayOutputWithContext(ctx context.Context) GetVPCRouterDhcpStaticMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterDhcpStaticMappingArrayOutput)
}

type GetVPCRouterDhcpStaticMappingOutput struct { *pulumi.OutputState }

func (GetVPCRouterDhcpStaticMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterDhcpStaticMapping)(nil)).Elem()
}

func (o GetVPCRouterDhcpStaticMappingOutput) ToGetVPCRouterDhcpStaticMappingOutput() GetVPCRouterDhcpStaticMappingOutput {
	return o
}

func (o GetVPCRouterDhcpStaticMappingOutput) ToGetVPCRouterDhcpStaticMappingOutputWithContext(ctx context.Context) GetVPCRouterDhcpStaticMappingOutput {
	return o
}

func (o GetVPCRouterDhcpStaticMappingOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterDhcpStaticMapping) string { return v.IpAddress }).(pulumi.StringOutput)
}

func (o GetVPCRouterDhcpStaticMappingOutput) MacAddress() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterDhcpStaticMapping) string { return v.MacAddress }).(pulumi.StringOutput)
}

type GetVPCRouterDhcpStaticMappingArrayOutput struct { *pulumi.OutputState}

func (GetVPCRouterDhcpStaticMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterDhcpStaticMapping)(nil)).Elem()
}

func (o GetVPCRouterDhcpStaticMappingArrayOutput) ToGetVPCRouterDhcpStaticMappingArrayOutput() GetVPCRouterDhcpStaticMappingArrayOutput {
	return o
}

func (o GetVPCRouterDhcpStaticMappingArrayOutput) ToGetVPCRouterDhcpStaticMappingArrayOutputWithContext(ctx context.Context) GetVPCRouterDhcpStaticMappingArrayOutput {
	return o
}

func (o GetVPCRouterDhcpStaticMappingArrayOutput) Index(i pulumi.IntInput) GetVPCRouterDhcpStaticMappingOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVPCRouterDhcpStaticMapping {
		return vs[0].([]GetVPCRouterDhcpStaticMapping)[vs[1].(int)]
	}).(GetVPCRouterDhcpStaticMappingOutput)
}

type GetVPCRouterFilter struct {
	Conditions []GetVPCRouterFilterCondition `pulumi:"conditions"`
	Id *string `pulumi:"id"`
	Names []string `pulumi:"names"`
	Tags []string `pulumi:"tags"`
}

type GetVPCRouterFilterInput interface {
	pulumi.Input

	ToGetVPCRouterFilterOutput() GetVPCRouterFilterOutput
	ToGetVPCRouterFilterOutputWithContext(context.Context) GetVPCRouterFilterOutput
}

type GetVPCRouterFilterArgs struct {
	Conditions GetVPCRouterFilterConditionArrayInput `pulumi:"conditions"`
	Id pulumi.StringPtrInput `pulumi:"id"`
	Names pulumi.StringArrayInput `pulumi:"names"`
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetVPCRouterFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterFilter)(nil)).Elem()
}

func (i GetVPCRouterFilterArgs) ToGetVPCRouterFilterOutput() GetVPCRouterFilterOutput {
	return i.ToGetVPCRouterFilterOutputWithContext(context.Background())
}

func (i GetVPCRouterFilterArgs) ToGetVPCRouterFilterOutputWithContext(ctx context.Context) GetVPCRouterFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterFilterOutput)
}

type GetVPCRouterFilterOutput struct { *pulumi.OutputState }

func (GetVPCRouterFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterFilter)(nil)).Elem()
}

func (o GetVPCRouterFilterOutput) ToGetVPCRouterFilterOutput() GetVPCRouterFilterOutput {
	return o
}

func (o GetVPCRouterFilterOutput) ToGetVPCRouterFilterOutputWithContext(ctx context.Context) GetVPCRouterFilterOutput {
	return o
}

func (o GetVPCRouterFilterOutput) Conditions() GetVPCRouterFilterConditionArrayOutput {
	return o.ApplyT(func (v GetVPCRouterFilter) []GetVPCRouterFilterCondition { return v.Conditions }).(GetVPCRouterFilterConditionArrayOutput)
}

func (o GetVPCRouterFilterOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v GetVPCRouterFilter) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetVPCRouterFilterOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetVPCRouterFilter) []string { return v.Names }).(pulumi.StringArrayOutput)
}

func (o GetVPCRouterFilterOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetVPCRouterFilter) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetVPCRouterFilterCondition struct {
	Name string `pulumi:"name"`
	Values []string `pulumi:"values"`
}

type GetVPCRouterFilterConditionInput interface {
	pulumi.Input

	ToGetVPCRouterFilterConditionOutput() GetVPCRouterFilterConditionOutput
	ToGetVPCRouterFilterConditionOutputWithContext(context.Context) GetVPCRouterFilterConditionOutput
}

type GetVPCRouterFilterConditionArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetVPCRouterFilterConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterFilterCondition)(nil)).Elem()
}

func (i GetVPCRouterFilterConditionArgs) ToGetVPCRouterFilterConditionOutput() GetVPCRouterFilterConditionOutput {
	return i.ToGetVPCRouterFilterConditionOutputWithContext(context.Background())
}

func (i GetVPCRouterFilterConditionArgs) ToGetVPCRouterFilterConditionOutputWithContext(ctx context.Context) GetVPCRouterFilterConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterFilterConditionOutput)
}

type GetVPCRouterFilterConditionArrayInput interface {
	pulumi.Input

	ToGetVPCRouterFilterConditionArrayOutput() GetVPCRouterFilterConditionArrayOutput
	ToGetVPCRouterFilterConditionArrayOutputWithContext(context.Context) GetVPCRouterFilterConditionArrayOutput
}

type GetVPCRouterFilterConditionArray []GetVPCRouterFilterConditionInput

func (GetVPCRouterFilterConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterFilterCondition)(nil)).Elem()
}

func (i GetVPCRouterFilterConditionArray) ToGetVPCRouterFilterConditionArrayOutput() GetVPCRouterFilterConditionArrayOutput {
	return i.ToGetVPCRouterFilterConditionArrayOutputWithContext(context.Background())
}

func (i GetVPCRouterFilterConditionArray) ToGetVPCRouterFilterConditionArrayOutputWithContext(ctx context.Context) GetVPCRouterFilterConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterFilterConditionArrayOutput)
}

type GetVPCRouterFilterConditionOutput struct { *pulumi.OutputState }

func (GetVPCRouterFilterConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterFilterCondition)(nil)).Elem()
}

func (o GetVPCRouterFilterConditionOutput) ToGetVPCRouterFilterConditionOutput() GetVPCRouterFilterConditionOutput {
	return o
}

func (o GetVPCRouterFilterConditionOutput) ToGetVPCRouterFilterConditionOutputWithContext(ctx context.Context) GetVPCRouterFilterConditionOutput {
	return o
}

func (o GetVPCRouterFilterConditionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterFilterCondition) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVPCRouterFilterConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetVPCRouterFilterCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetVPCRouterFilterConditionArrayOutput struct { *pulumi.OutputState}

func (GetVPCRouterFilterConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterFilterCondition)(nil)).Elem()
}

func (o GetVPCRouterFilterConditionArrayOutput) ToGetVPCRouterFilterConditionArrayOutput() GetVPCRouterFilterConditionArrayOutput {
	return o
}

func (o GetVPCRouterFilterConditionArrayOutput) ToGetVPCRouterFilterConditionArrayOutputWithContext(ctx context.Context) GetVPCRouterFilterConditionArrayOutput {
	return o
}

func (o GetVPCRouterFilterConditionArrayOutput) Index(i pulumi.IntInput) GetVPCRouterFilterConditionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVPCRouterFilterCondition {
		return vs[0].([]GetVPCRouterFilterCondition)[vs[1].(int)]
	}).(GetVPCRouterFilterConditionOutput)
}

type GetVPCRouterFirewall struct {
	Direction string `pulumi:"direction"`
	Expressions []GetVPCRouterFirewallExpression `pulumi:"expressions"`
	InterfaceIndex int `pulumi:"interfaceIndex"`
}

type GetVPCRouterFirewallInput interface {
	pulumi.Input

	ToGetVPCRouterFirewallOutput() GetVPCRouterFirewallOutput
	ToGetVPCRouterFirewallOutputWithContext(context.Context) GetVPCRouterFirewallOutput
}

type GetVPCRouterFirewallArgs struct {
	Direction pulumi.StringInput `pulumi:"direction"`
	Expressions GetVPCRouterFirewallExpressionArrayInput `pulumi:"expressions"`
	InterfaceIndex pulumi.IntInput `pulumi:"interfaceIndex"`
}

func (GetVPCRouterFirewallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterFirewall)(nil)).Elem()
}

func (i GetVPCRouterFirewallArgs) ToGetVPCRouterFirewallOutput() GetVPCRouterFirewallOutput {
	return i.ToGetVPCRouterFirewallOutputWithContext(context.Background())
}

func (i GetVPCRouterFirewallArgs) ToGetVPCRouterFirewallOutputWithContext(ctx context.Context) GetVPCRouterFirewallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterFirewallOutput)
}

type GetVPCRouterFirewallArrayInput interface {
	pulumi.Input

	ToGetVPCRouterFirewallArrayOutput() GetVPCRouterFirewallArrayOutput
	ToGetVPCRouterFirewallArrayOutputWithContext(context.Context) GetVPCRouterFirewallArrayOutput
}

type GetVPCRouterFirewallArray []GetVPCRouterFirewallInput

func (GetVPCRouterFirewallArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterFirewall)(nil)).Elem()
}

func (i GetVPCRouterFirewallArray) ToGetVPCRouterFirewallArrayOutput() GetVPCRouterFirewallArrayOutput {
	return i.ToGetVPCRouterFirewallArrayOutputWithContext(context.Background())
}

func (i GetVPCRouterFirewallArray) ToGetVPCRouterFirewallArrayOutputWithContext(ctx context.Context) GetVPCRouterFirewallArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterFirewallArrayOutput)
}

type GetVPCRouterFirewallOutput struct { *pulumi.OutputState }

func (GetVPCRouterFirewallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterFirewall)(nil)).Elem()
}

func (o GetVPCRouterFirewallOutput) ToGetVPCRouterFirewallOutput() GetVPCRouterFirewallOutput {
	return o
}

func (o GetVPCRouterFirewallOutput) ToGetVPCRouterFirewallOutputWithContext(ctx context.Context) GetVPCRouterFirewallOutput {
	return o
}

func (o GetVPCRouterFirewallOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterFirewall) string { return v.Direction }).(pulumi.StringOutput)
}

func (o GetVPCRouterFirewallOutput) Expressions() GetVPCRouterFirewallExpressionArrayOutput {
	return o.ApplyT(func (v GetVPCRouterFirewall) []GetVPCRouterFirewallExpression { return v.Expressions }).(GetVPCRouterFirewallExpressionArrayOutput)
}

func (o GetVPCRouterFirewallOutput) InterfaceIndex() pulumi.IntOutput {
	return o.ApplyT(func (v GetVPCRouterFirewall) int { return v.InterfaceIndex }).(pulumi.IntOutput)
}

type GetVPCRouterFirewallArrayOutput struct { *pulumi.OutputState}

func (GetVPCRouterFirewallArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterFirewall)(nil)).Elem()
}

func (o GetVPCRouterFirewallArrayOutput) ToGetVPCRouterFirewallArrayOutput() GetVPCRouterFirewallArrayOutput {
	return o
}

func (o GetVPCRouterFirewallArrayOutput) ToGetVPCRouterFirewallArrayOutputWithContext(ctx context.Context) GetVPCRouterFirewallArrayOutput {
	return o
}

func (o GetVPCRouterFirewallArrayOutput) Index(i pulumi.IntInput) GetVPCRouterFirewallOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVPCRouterFirewall {
		return vs[0].([]GetVPCRouterFirewall)[vs[1].(int)]
	}).(GetVPCRouterFirewallOutput)
}

type GetVPCRouterFirewallExpression struct {
	Allow bool `pulumi:"allow"`
	Description string `pulumi:"description"`
	DestinationNetwork string `pulumi:"destinationNetwork"`
	DestinationPort string `pulumi:"destinationPort"`
	Logging bool `pulumi:"logging"`
	Protocol string `pulumi:"protocol"`
	SourceNetwork string `pulumi:"sourceNetwork"`
	SourcePort string `pulumi:"sourcePort"`
}

type GetVPCRouterFirewallExpressionInput interface {
	pulumi.Input

	ToGetVPCRouterFirewallExpressionOutput() GetVPCRouterFirewallExpressionOutput
	ToGetVPCRouterFirewallExpressionOutputWithContext(context.Context) GetVPCRouterFirewallExpressionOutput
}

type GetVPCRouterFirewallExpressionArgs struct {
	Allow pulumi.BoolInput `pulumi:"allow"`
	Description pulumi.StringInput `pulumi:"description"`
	DestinationNetwork pulumi.StringInput `pulumi:"destinationNetwork"`
	DestinationPort pulumi.StringInput `pulumi:"destinationPort"`
	Logging pulumi.BoolInput `pulumi:"logging"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	SourceNetwork pulumi.StringInput `pulumi:"sourceNetwork"`
	SourcePort pulumi.StringInput `pulumi:"sourcePort"`
}

func (GetVPCRouterFirewallExpressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterFirewallExpression)(nil)).Elem()
}

func (i GetVPCRouterFirewallExpressionArgs) ToGetVPCRouterFirewallExpressionOutput() GetVPCRouterFirewallExpressionOutput {
	return i.ToGetVPCRouterFirewallExpressionOutputWithContext(context.Background())
}

func (i GetVPCRouterFirewallExpressionArgs) ToGetVPCRouterFirewallExpressionOutputWithContext(ctx context.Context) GetVPCRouterFirewallExpressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterFirewallExpressionOutput)
}

type GetVPCRouterFirewallExpressionArrayInput interface {
	pulumi.Input

	ToGetVPCRouterFirewallExpressionArrayOutput() GetVPCRouterFirewallExpressionArrayOutput
	ToGetVPCRouterFirewallExpressionArrayOutputWithContext(context.Context) GetVPCRouterFirewallExpressionArrayOutput
}

type GetVPCRouterFirewallExpressionArray []GetVPCRouterFirewallExpressionInput

func (GetVPCRouterFirewallExpressionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterFirewallExpression)(nil)).Elem()
}

func (i GetVPCRouterFirewallExpressionArray) ToGetVPCRouterFirewallExpressionArrayOutput() GetVPCRouterFirewallExpressionArrayOutput {
	return i.ToGetVPCRouterFirewallExpressionArrayOutputWithContext(context.Background())
}

func (i GetVPCRouterFirewallExpressionArray) ToGetVPCRouterFirewallExpressionArrayOutputWithContext(ctx context.Context) GetVPCRouterFirewallExpressionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterFirewallExpressionArrayOutput)
}

type GetVPCRouterFirewallExpressionOutput struct { *pulumi.OutputState }

func (GetVPCRouterFirewallExpressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterFirewallExpression)(nil)).Elem()
}

func (o GetVPCRouterFirewallExpressionOutput) ToGetVPCRouterFirewallExpressionOutput() GetVPCRouterFirewallExpressionOutput {
	return o
}

func (o GetVPCRouterFirewallExpressionOutput) ToGetVPCRouterFirewallExpressionOutputWithContext(ctx context.Context) GetVPCRouterFirewallExpressionOutput {
	return o
}

func (o GetVPCRouterFirewallExpressionOutput) Allow() pulumi.BoolOutput {
	return o.ApplyT(func (v GetVPCRouterFirewallExpression) bool { return v.Allow }).(pulumi.BoolOutput)
}

func (o GetVPCRouterFirewallExpressionOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterFirewallExpression) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetVPCRouterFirewallExpressionOutput) DestinationNetwork() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterFirewallExpression) string { return v.DestinationNetwork }).(pulumi.StringOutput)
}

func (o GetVPCRouterFirewallExpressionOutput) DestinationPort() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterFirewallExpression) string { return v.DestinationPort }).(pulumi.StringOutput)
}

func (o GetVPCRouterFirewallExpressionOutput) Logging() pulumi.BoolOutput {
	return o.ApplyT(func (v GetVPCRouterFirewallExpression) bool { return v.Logging }).(pulumi.BoolOutput)
}

func (o GetVPCRouterFirewallExpressionOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterFirewallExpression) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetVPCRouterFirewallExpressionOutput) SourceNetwork() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterFirewallExpression) string { return v.SourceNetwork }).(pulumi.StringOutput)
}

func (o GetVPCRouterFirewallExpressionOutput) SourcePort() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterFirewallExpression) string { return v.SourcePort }).(pulumi.StringOutput)
}

type GetVPCRouterFirewallExpressionArrayOutput struct { *pulumi.OutputState}

func (GetVPCRouterFirewallExpressionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterFirewallExpression)(nil)).Elem()
}

func (o GetVPCRouterFirewallExpressionArrayOutput) ToGetVPCRouterFirewallExpressionArrayOutput() GetVPCRouterFirewallExpressionArrayOutput {
	return o
}

func (o GetVPCRouterFirewallExpressionArrayOutput) ToGetVPCRouterFirewallExpressionArrayOutputWithContext(ctx context.Context) GetVPCRouterFirewallExpressionArrayOutput {
	return o
}

func (o GetVPCRouterFirewallExpressionArrayOutput) Index(i pulumi.IntInput) GetVPCRouterFirewallExpressionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVPCRouterFirewallExpression {
		return vs[0].([]GetVPCRouterFirewallExpression)[vs[1].(int)]
	}).(GetVPCRouterFirewallExpressionOutput)
}

type GetVPCRouterL2tp struct {
	PreSharedSecret string `pulumi:"preSharedSecret"`
	RangeStart string `pulumi:"rangeStart"`
	RangeStop string `pulumi:"rangeStop"`
}

type GetVPCRouterL2tpInput interface {
	pulumi.Input

	ToGetVPCRouterL2tpOutput() GetVPCRouterL2tpOutput
	ToGetVPCRouterL2tpOutputWithContext(context.Context) GetVPCRouterL2tpOutput
}

type GetVPCRouterL2tpArgs struct {
	PreSharedSecret pulumi.StringInput `pulumi:"preSharedSecret"`
	RangeStart pulumi.StringInput `pulumi:"rangeStart"`
	RangeStop pulumi.StringInput `pulumi:"rangeStop"`
}

func (GetVPCRouterL2tpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterL2tp)(nil)).Elem()
}

func (i GetVPCRouterL2tpArgs) ToGetVPCRouterL2tpOutput() GetVPCRouterL2tpOutput {
	return i.ToGetVPCRouterL2tpOutputWithContext(context.Background())
}

func (i GetVPCRouterL2tpArgs) ToGetVPCRouterL2tpOutputWithContext(ctx context.Context) GetVPCRouterL2tpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterL2tpOutput)
}

type GetVPCRouterL2tpArrayInput interface {
	pulumi.Input

	ToGetVPCRouterL2tpArrayOutput() GetVPCRouterL2tpArrayOutput
	ToGetVPCRouterL2tpArrayOutputWithContext(context.Context) GetVPCRouterL2tpArrayOutput
}

type GetVPCRouterL2tpArray []GetVPCRouterL2tpInput

func (GetVPCRouterL2tpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterL2tp)(nil)).Elem()
}

func (i GetVPCRouterL2tpArray) ToGetVPCRouterL2tpArrayOutput() GetVPCRouterL2tpArrayOutput {
	return i.ToGetVPCRouterL2tpArrayOutputWithContext(context.Background())
}

func (i GetVPCRouterL2tpArray) ToGetVPCRouterL2tpArrayOutputWithContext(ctx context.Context) GetVPCRouterL2tpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterL2tpArrayOutput)
}

type GetVPCRouterL2tpOutput struct { *pulumi.OutputState }

func (GetVPCRouterL2tpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterL2tp)(nil)).Elem()
}

func (o GetVPCRouterL2tpOutput) ToGetVPCRouterL2tpOutput() GetVPCRouterL2tpOutput {
	return o
}

func (o GetVPCRouterL2tpOutput) ToGetVPCRouterL2tpOutputWithContext(ctx context.Context) GetVPCRouterL2tpOutput {
	return o
}

func (o GetVPCRouterL2tpOutput) PreSharedSecret() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterL2tp) string { return v.PreSharedSecret }).(pulumi.StringOutput)
}

func (o GetVPCRouterL2tpOutput) RangeStart() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterL2tp) string { return v.RangeStart }).(pulumi.StringOutput)
}

func (o GetVPCRouterL2tpOutput) RangeStop() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterL2tp) string { return v.RangeStop }).(pulumi.StringOutput)
}

type GetVPCRouterL2tpArrayOutput struct { *pulumi.OutputState}

func (GetVPCRouterL2tpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterL2tp)(nil)).Elem()
}

func (o GetVPCRouterL2tpArrayOutput) ToGetVPCRouterL2tpArrayOutput() GetVPCRouterL2tpArrayOutput {
	return o
}

func (o GetVPCRouterL2tpArrayOutput) ToGetVPCRouterL2tpArrayOutputWithContext(ctx context.Context) GetVPCRouterL2tpArrayOutput {
	return o
}

func (o GetVPCRouterL2tpArrayOutput) Index(i pulumi.IntInput) GetVPCRouterL2tpOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVPCRouterL2tp {
		return vs[0].([]GetVPCRouterL2tp)[vs[1].(int)]
	}).(GetVPCRouterL2tpOutput)
}

type GetVPCRouterPortForwarding struct {
	Description string `pulumi:"description"`
	PrivateIp string `pulumi:"privateIp"`
	PrivatePort int `pulumi:"privatePort"`
	Protocol string `pulumi:"protocol"`
	PublicPort int `pulumi:"publicPort"`
}

type GetVPCRouterPortForwardingInput interface {
	pulumi.Input

	ToGetVPCRouterPortForwardingOutput() GetVPCRouterPortForwardingOutput
	ToGetVPCRouterPortForwardingOutputWithContext(context.Context) GetVPCRouterPortForwardingOutput
}

type GetVPCRouterPortForwardingArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	PrivatePort pulumi.IntInput `pulumi:"privatePort"`
	Protocol pulumi.StringInput `pulumi:"protocol"`
	PublicPort pulumi.IntInput `pulumi:"publicPort"`
}

func (GetVPCRouterPortForwardingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterPortForwarding)(nil)).Elem()
}

func (i GetVPCRouterPortForwardingArgs) ToGetVPCRouterPortForwardingOutput() GetVPCRouterPortForwardingOutput {
	return i.ToGetVPCRouterPortForwardingOutputWithContext(context.Background())
}

func (i GetVPCRouterPortForwardingArgs) ToGetVPCRouterPortForwardingOutputWithContext(ctx context.Context) GetVPCRouterPortForwardingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterPortForwardingOutput)
}

type GetVPCRouterPortForwardingArrayInput interface {
	pulumi.Input

	ToGetVPCRouterPortForwardingArrayOutput() GetVPCRouterPortForwardingArrayOutput
	ToGetVPCRouterPortForwardingArrayOutputWithContext(context.Context) GetVPCRouterPortForwardingArrayOutput
}

type GetVPCRouterPortForwardingArray []GetVPCRouterPortForwardingInput

func (GetVPCRouterPortForwardingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterPortForwarding)(nil)).Elem()
}

func (i GetVPCRouterPortForwardingArray) ToGetVPCRouterPortForwardingArrayOutput() GetVPCRouterPortForwardingArrayOutput {
	return i.ToGetVPCRouterPortForwardingArrayOutputWithContext(context.Background())
}

func (i GetVPCRouterPortForwardingArray) ToGetVPCRouterPortForwardingArrayOutputWithContext(ctx context.Context) GetVPCRouterPortForwardingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterPortForwardingArrayOutput)
}

type GetVPCRouterPortForwardingOutput struct { *pulumi.OutputState }

func (GetVPCRouterPortForwardingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterPortForwarding)(nil)).Elem()
}

func (o GetVPCRouterPortForwardingOutput) ToGetVPCRouterPortForwardingOutput() GetVPCRouterPortForwardingOutput {
	return o
}

func (o GetVPCRouterPortForwardingOutput) ToGetVPCRouterPortForwardingOutputWithContext(ctx context.Context) GetVPCRouterPortForwardingOutput {
	return o
}

func (o GetVPCRouterPortForwardingOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterPortForwarding) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetVPCRouterPortForwardingOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterPortForwarding) string { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o GetVPCRouterPortForwardingOutput) PrivatePort() pulumi.IntOutput {
	return o.ApplyT(func (v GetVPCRouterPortForwarding) int { return v.PrivatePort }).(pulumi.IntOutput)
}

func (o GetVPCRouterPortForwardingOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterPortForwarding) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetVPCRouterPortForwardingOutput) PublicPort() pulumi.IntOutput {
	return o.ApplyT(func (v GetVPCRouterPortForwarding) int { return v.PublicPort }).(pulumi.IntOutput)
}

type GetVPCRouterPortForwardingArrayOutput struct { *pulumi.OutputState}

func (GetVPCRouterPortForwardingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterPortForwarding)(nil)).Elem()
}

func (o GetVPCRouterPortForwardingArrayOutput) ToGetVPCRouterPortForwardingArrayOutput() GetVPCRouterPortForwardingArrayOutput {
	return o
}

func (o GetVPCRouterPortForwardingArrayOutput) ToGetVPCRouterPortForwardingArrayOutputWithContext(ctx context.Context) GetVPCRouterPortForwardingArrayOutput {
	return o
}

func (o GetVPCRouterPortForwardingArrayOutput) Index(i pulumi.IntInput) GetVPCRouterPortForwardingOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVPCRouterPortForwarding {
		return vs[0].([]GetVPCRouterPortForwarding)[vs[1].(int)]
	}).(GetVPCRouterPortForwardingOutput)
}

type GetVPCRouterPptp struct {
	RangeStart string `pulumi:"rangeStart"`
	RangeStop string `pulumi:"rangeStop"`
}

type GetVPCRouterPptpInput interface {
	pulumi.Input

	ToGetVPCRouterPptpOutput() GetVPCRouterPptpOutput
	ToGetVPCRouterPptpOutputWithContext(context.Context) GetVPCRouterPptpOutput
}

type GetVPCRouterPptpArgs struct {
	RangeStart pulumi.StringInput `pulumi:"rangeStart"`
	RangeStop pulumi.StringInput `pulumi:"rangeStop"`
}

func (GetVPCRouterPptpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterPptp)(nil)).Elem()
}

func (i GetVPCRouterPptpArgs) ToGetVPCRouterPptpOutput() GetVPCRouterPptpOutput {
	return i.ToGetVPCRouterPptpOutputWithContext(context.Background())
}

func (i GetVPCRouterPptpArgs) ToGetVPCRouterPptpOutputWithContext(ctx context.Context) GetVPCRouterPptpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterPptpOutput)
}

type GetVPCRouterPptpArrayInput interface {
	pulumi.Input

	ToGetVPCRouterPptpArrayOutput() GetVPCRouterPptpArrayOutput
	ToGetVPCRouterPptpArrayOutputWithContext(context.Context) GetVPCRouterPptpArrayOutput
}

type GetVPCRouterPptpArray []GetVPCRouterPptpInput

func (GetVPCRouterPptpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterPptp)(nil)).Elem()
}

func (i GetVPCRouterPptpArray) ToGetVPCRouterPptpArrayOutput() GetVPCRouterPptpArrayOutput {
	return i.ToGetVPCRouterPptpArrayOutputWithContext(context.Background())
}

func (i GetVPCRouterPptpArray) ToGetVPCRouterPptpArrayOutputWithContext(ctx context.Context) GetVPCRouterPptpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterPptpArrayOutput)
}

type GetVPCRouterPptpOutput struct { *pulumi.OutputState }

func (GetVPCRouterPptpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterPptp)(nil)).Elem()
}

func (o GetVPCRouterPptpOutput) ToGetVPCRouterPptpOutput() GetVPCRouterPptpOutput {
	return o
}

func (o GetVPCRouterPptpOutput) ToGetVPCRouterPptpOutputWithContext(ctx context.Context) GetVPCRouterPptpOutput {
	return o
}

func (o GetVPCRouterPptpOutput) RangeStart() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterPptp) string { return v.RangeStart }).(pulumi.StringOutput)
}

func (o GetVPCRouterPptpOutput) RangeStop() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterPptp) string { return v.RangeStop }).(pulumi.StringOutput)
}

type GetVPCRouterPptpArrayOutput struct { *pulumi.OutputState}

func (GetVPCRouterPptpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterPptp)(nil)).Elem()
}

func (o GetVPCRouterPptpArrayOutput) ToGetVPCRouterPptpArrayOutput() GetVPCRouterPptpArrayOutput {
	return o
}

func (o GetVPCRouterPptpArrayOutput) ToGetVPCRouterPptpArrayOutputWithContext(ctx context.Context) GetVPCRouterPptpArrayOutput {
	return o
}

func (o GetVPCRouterPptpArrayOutput) Index(i pulumi.IntInput) GetVPCRouterPptpOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVPCRouterPptp {
		return vs[0].([]GetVPCRouterPptp)[vs[1].(int)]
	}).(GetVPCRouterPptpOutput)
}

type GetVPCRouterPrivateNetworkInterface struct {
	Index int `pulumi:"index"`
	IpAddresses []string `pulumi:"ipAddresses"`
	Netmask int `pulumi:"netmask"`
	SwitchId string `pulumi:"switchId"`
	Vip string `pulumi:"vip"`
}

type GetVPCRouterPrivateNetworkInterfaceInput interface {
	pulumi.Input

	ToGetVPCRouterPrivateNetworkInterfaceOutput() GetVPCRouterPrivateNetworkInterfaceOutput
	ToGetVPCRouterPrivateNetworkInterfaceOutputWithContext(context.Context) GetVPCRouterPrivateNetworkInterfaceOutput
}

type GetVPCRouterPrivateNetworkInterfaceArgs struct {
	Index pulumi.IntInput `pulumi:"index"`
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	Netmask pulumi.IntInput `pulumi:"netmask"`
	SwitchId pulumi.StringInput `pulumi:"switchId"`
	Vip pulumi.StringInput `pulumi:"vip"`
}

func (GetVPCRouterPrivateNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterPrivateNetworkInterface)(nil)).Elem()
}

func (i GetVPCRouterPrivateNetworkInterfaceArgs) ToGetVPCRouterPrivateNetworkInterfaceOutput() GetVPCRouterPrivateNetworkInterfaceOutput {
	return i.ToGetVPCRouterPrivateNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetVPCRouterPrivateNetworkInterfaceArgs) ToGetVPCRouterPrivateNetworkInterfaceOutputWithContext(ctx context.Context) GetVPCRouterPrivateNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterPrivateNetworkInterfaceOutput)
}

type GetVPCRouterPrivateNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetVPCRouterPrivateNetworkInterfaceArrayOutput() GetVPCRouterPrivateNetworkInterfaceArrayOutput
	ToGetVPCRouterPrivateNetworkInterfaceArrayOutputWithContext(context.Context) GetVPCRouterPrivateNetworkInterfaceArrayOutput
}

type GetVPCRouterPrivateNetworkInterfaceArray []GetVPCRouterPrivateNetworkInterfaceInput

func (GetVPCRouterPrivateNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterPrivateNetworkInterface)(nil)).Elem()
}

func (i GetVPCRouterPrivateNetworkInterfaceArray) ToGetVPCRouterPrivateNetworkInterfaceArrayOutput() GetVPCRouterPrivateNetworkInterfaceArrayOutput {
	return i.ToGetVPCRouterPrivateNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetVPCRouterPrivateNetworkInterfaceArray) ToGetVPCRouterPrivateNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetVPCRouterPrivateNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterPrivateNetworkInterfaceArrayOutput)
}

type GetVPCRouterPrivateNetworkInterfaceOutput struct { *pulumi.OutputState }

func (GetVPCRouterPrivateNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterPrivateNetworkInterface)(nil)).Elem()
}

func (o GetVPCRouterPrivateNetworkInterfaceOutput) ToGetVPCRouterPrivateNetworkInterfaceOutput() GetVPCRouterPrivateNetworkInterfaceOutput {
	return o
}

func (o GetVPCRouterPrivateNetworkInterfaceOutput) ToGetVPCRouterPrivateNetworkInterfaceOutputWithContext(ctx context.Context) GetVPCRouterPrivateNetworkInterfaceOutput {
	return o
}

func (o GetVPCRouterPrivateNetworkInterfaceOutput) Index() pulumi.IntOutput {
	return o.ApplyT(func (v GetVPCRouterPrivateNetworkInterface) int { return v.Index }).(pulumi.IntOutput)
}

func (o GetVPCRouterPrivateNetworkInterfaceOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetVPCRouterPrivateNetworkInterface) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o GetVPCRouterPrivateNetworkInterfaceOutput) Netmask() pulumi.IntOutput {
	return o.ApplyT(func (v GetVPCRouterPrivateNetworkInterface) int { return v.Netmask }).(pulumi.IntOutput)
}

func (o GetVPCRouterPrivateNetworkInterfaceOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterPrivateNetworkInterface) string { return v.SwitchId }).(pulumi.StringOutput)
}

func (o GetVPCRouterPrivateNetworkInterfaceOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterPrivateNetworkInterface) string { return v.Vip }).(pulumi.StringOutput)
}

type GetVPCRouterPrivateNetworkInterfaceArrayOutput struct { *pulumi.OutputState}

func (GetVPCRouterPrivateNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterPrivateNetworkInterface)(nil)).Elem()
}

func (o GetVPCRouterPrivateNetworkInterfaceArrayOutput) ToGetVPCRouterPrivateNetworkInterfaceArrayOutput() GetVPCRouterPrivateNetworkInterfaceArrayOutput {
	return o
}

func (o GetVPCRouterPrivateNetworkInterfaceArrayOutput) ToGetVPCRouterPrivateNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetVPCRouterPrivateNetworkInterfaceArrayOutput {
	return o
}

func (o GetVPCRouterPrivateNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetVPCRouterPrivateNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVPCRouterPrivateNetworkInterface {
		return vs[0].([]GetVPCRouterPrivateNetworkInterface)[vs[1].(int)]
	}).(GetVPCRouterPrivateNetworkInterfaceOutput)
}

type GetVPCRouterPublicNetworkInterface struct {
	Aliases []string `pulumi:"aliases"`
	IpAddresses []string `pulumi:"ipAddresses"`
	SwitchId string `pulumi:"switchId"`
	Vip string `pulumi:"vip"`
	Vrid int `pulumi:"vrid"`
}

type GetVPCRouterPublicNetworkInterfaceInput interface {
	pulumi.Input

	ToGetVPCRouterPublicNetworkInterfaceOutput() GetVPCRouterPublicNetworkInterfaceOutput
	ToGetVPCRouterPublicNetworkInterfaceOutputWithContext(context.Context) GetVPCRouterPublicNetworkInterfaceOutput
}

type GetVPCRouterPublicNetworkInterfaceArgs struct {
	Aliases pulumi.StringArrayInput `pulumi:"aliases"`
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
	SwitchId pulumi.StringInput `pulumi:"switchId"`
	Vip pulumi.StringInput `pulumi:"vip"`
	Vrid pulumi.IntInput `pulumi:"vrid"`
}

func (GetVPCRouterPublicNetworkInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterPublicNetworkInterface)(nil)).Elem()
}

func (i GetVPCRouterPublicNetworkInterfaceArgs) ToGetVPCRouterPublicNetworkInterfaceOutput() GetVPCRouterPublicNetworkInterfaceOutput {
	return i.ToGetVPCRouterPublicNetworkInterfaceOutputWithContext(context.Background())
}

func (i GetVPCRouterPublicNetworkInterfaceArgs) ToGetVPCRouterPublicNetworkInterfaceOutputWithContext(ctx context.Context) GetVPCRouterPublicNetworkInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterPublicNetworkInterfaceOutput)
}

type GetVPCRouterPublicNetworkInterfaceArrayInput interface {
	pulumi.Input

	ToGetVPCRouterPublicNetworkInterfaceArrayOutput() GetVPCRouterPublicNetworkInterfaceArrayOutput
	ToGetVPCRouterPublicNetworkInterfaceArrayOutputWithContext(context.Context) GetVPCRouterPublicNetworkInterfaceArrayOutput
}

type GetVPCRouterPublicNetworkInterfaceArray []GetVPCRouterPublicNetworkInterfaceInput

func (GetVPCRouterPublicNetworkInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterPublicNetworkInterface)(nil)).Elem()
}

func (i GetVPCRouterPublicNetworkInterfaceArray) ToGetVPCRouterPublicNetworkInterfaceArrayOutput() GetVPCRouterPublicNetworkInterfaceArrayOutput {
	return i.ToGetVPCRouterPublicNetworkInterfaceArrayOutputWithContext(context.Background())
}

func (i GetVPCRouterPublicNetworkInterfaceArray) ToGetVPCRouterPublicNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetVPCRouterPublicNetworkInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterPublicNetworkInterfaceArrayOutput)
}

type GetVPCRouterPublicNetworkInterfaceOutput struct { *pulumi.OutputState }

func (GetVPCRouterPublicNetworkInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterPublicNetworkInterface)(nil)).Elem()
}

func (o GetVPCRouterPublicNetworkInterfaceOutput) ToGetVPCRouterPublicNetworkInterfaceOutput() GetVPCRouterPublicNetworkInterfaceOutput {
	return o
}

func (o GetVPCRouterPublicNetworkInterfaceOutput) ToGetVPCRouterPublicNetworkInterfaceOutputWithContext(ctx context.Context) GetVPCRouterPublicNetworkInterfaceOutput {
	return o
}

func (o GetVPCRouterPublicNetworkInterfaceOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetVPCRouterPublicNetworkInterface) []string { return v.Aliases }).(pulumi.StringArrayOutput)
}

func (o GetVPCRouterPublicNetworkInterfaceOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetVPCRouterPublicNetworkInterface) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

func (o GetVPCRouterPublicNetworkInterfaceOutput) SwitchId() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterPublicNetworkInterface) string { return v.SwitchId }).(pulumi.StringOutput)
}

func (o GetVPCRouterPublicNetworkInterfaceOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterPublicNetworkInterface) string { return v.Vip }).(pulumi.StringOutput)
}

func (o GetVPCRouterPublicNetworkInterfaceOutput) Vrid() pulumi.IntOutput {
	return o.ApplyT(func (v GetVPCRouterPublicNetworkInterface) int { return v.Vrid }).(pulumi.IntOutput)
}

type GetVPCRouterPublicNetworkInterfaceArrayOutput struct { *pulumi.OutputState}

func (GetVPCRouterPublicNetworkInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterPublicNetworkInterface)(nil)).Elem()
}

func (o GetVPCRouterPublicNetworkInterfaceArrayOutput) ToGetVPCRouterPublicNetworkInterfaceArrayOutput() GetVPCRouterPublicNetworkInterfaceArrayOutput {
	return o
}

func (o GetVPCRouterPublicNetworkInterfaceArrayOutput) ToGetVPCRouterPublicNetworkInterfaceArrayOutputWithContext(ctx context.Context) GetVPCRouterPublicNetworkInterfaceArrayOutput {
	return o
}

func (o GetVPCRouterPublicNetworkInterfaceArrayOutput) Index(i pulumi.IntInput) GetVPCRouterPublicNetworkInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVPCRouterPublicNetworkInterface {
		return vs[0].([]GetVPCRouterPublicNetworkInterface)[vs[1].(int)]
	}).(GetVPCRouterPublicNetworkInterfaceOutput)
}

type GetVPCRouterSiteToSiteVpn struct {
	LocalPrefixes []string `pulumi:"localPrefixes"`
	Peer string `pulumi:"peer"`
	PreSharedSecret string `pulumi:"preSharedSecret"`
	RemoteId string `pulumi:"remoteId"`
	Routes []string `pulumi:"routes"`
}

type GetVPCRouterSiteToSiteVpnInput interface {
	pulumi.Input

	ToGetVPCRouterSiteToSiteVpnOutput() GetVPCRouterSiteToSiteVpnOutput
	ToGetVPCRouterSiteToSiteVpnOutputWithContext(context.Context) GetVPCRouterSiteToSiteVpnOutput
}

type GetVPCRouterSiteToSiteVpnArgs struct {
	LocalPrefixes pulumi.StringArrayInput `pulumi:"localPrefixes"`
	Peer pulumi.StringInput `pulumi:"peer"`
	PreSharedSecret pulumi.StringInput `pulumi:"preSharedSecret"`
	RemoteId pulumi.StringInput `pulumi:"remoteId"`
	Routes pulumi.StringArrayInput `pulumi:"routes"`
}

func (GetVPCRouterSiteToSiteVpnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterSiteToSiteVpn)(nil)).Elem()
}

func (i GetVPCRouterSiteToSiteVpnArgs) ToGetVPCRouterSiteToSiteVpnOutput() GetVPCRouterSiteToSiteVpnOutput {
	return i.ToGetVPCRouterSiteToSiteVpnOutputWithContext(context.Background())
}

func (i GetVPCRouterSiteToSiteVpnArgs) ToGetVPCRouterSiteToSiteVpnOutputWithContext(ctx context.Context) GetVPCRouterSiteToSiteVpnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterSiteToSiteVpnOutput)
}

type GetVPCRouterSiteToSiteVpnArrayInput interface {
	pulumi.Input

	ToGetVPCRouterSiteToSiteVpnArrayOutput() GetVPCRouterSiteToSiteVpnArrayOutput
	ToGetVPCRouterSiteToSiteVpnArrayOutputWithContext(context.Context) GetVPCRouterSiteToSiteVpnArrayOutput
}

type GetVPCRouterSiteToSiteVpnArray []GetVPCRouterSiteToSiteVpnInput

func (GetVPCRouterSiteToSiteVpnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterSiteToSiteVpn)(nil)).Elem()
}

func (i GetVPCRouterSiteToSiteVpnArray) ToGetVPCRouterSiteToSiteVpnArrayOutput() GetVPCRouterSiteToSiteVpnArrayOutput {
	return i.ToGetVPCRouterSiteToSiteVpnArrayOutputWithContext(context.Background())
}

func (i GetVPCRouterSiteToSiteVpnArray) ToGetVPCRouterSiteToSiteVpnArrayOutputWithContext(ctx context.Context) GetVPCRouterSiteToSiteVpnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterSiteToSiteVpnArrayOutput)
}

type GetVPCRouterSiteToSiteVpnOutput struct { *pulumi.OutputState }

func (GetVPCRouterSiteToSiteVpnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterSiteToSiteVpn)(nil)).Elem()
}

func (o GetVPCRouterSiteToSiteVpnOutput) ToGetVPCRouterSiteToSiteVpnOutput() GetVPCRouterSiteToSiteVpnOutput {
	return o
}

func (o GetVPCRouterSiteToSiteVpnOutput) ToGetVPCRouterSiteToSiteVpnOutputWithContext(ctx context.Context) GetVPCRouterSiteToSiteVpnOutput {
	return o
}

func (o GetVPCRouterSiteToSiteVpnOutput) LocalPrefixes() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetVPCRouterSiteToSiteVpn) []string { return v.LocalPrefixes }).(pulumi.StringArrayOutput)
}

func (o GetVPCRouterSiteToSiteVpnOutput) Peer() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterSiteToSiteVpn) string { return v.Peer }).(pulumi.StringOutput)
}

func (o GetVPCRouterSiteToSiteVpnOutput) PreSharedSecret() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterSiteToSiteVpn) string { return v.PreSharedSecret }).(pulumi.StringOutput)
}

func (o GetVPCRouterSiteToSiteVpnOutput) RemoteId() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterSiteToSiteVpn) string { return v.RemoteId }).(pulumi.StringOutput)
}

func (o GetVPCRouterSiteToSiteVpnOutput) Routes() pulumi.StringArrayOutput {
	return o.ApplyT(func (v GetVPCRouterSiteToSiteVpn) []string { return v.Routes }).(pulumi.StringArrayOutput)
}

type GetVPCRouterSiteToSiteVpnArrayOutput struct { *pulumi.OutputState}

func (GetVPCRouterSiteToSiteVpnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterSiteToSiteVpn)(nil)).Elem()
}

func (o GetVPCRouterSiteToSiteVpnArrayOutput) ToGetVPCRouterSiteToSiteVpnArrayOutput() GetVPCRouterSiteToSiteVpnArrayOutput {
	return o
}

func (o GetVPCRouterSiteToSiteVpnArrayOutput) ToGetVPCRouterSiteToSiteVpnArrayOutputWithContext(ctx context.Context) GetVPCRouterSiteToSiteVpnArrayOutput {
	return o
}

func (o GetVPCRouterSiteToSiteVpnArrayOutput) Index(i pulumi.IntInput) GetVPCRouterSiteToSiteVpnOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVPCRouterSiteToSiteVpn {
		return vs[0].([]GetVPCRouterSiteToSiteVpn)[vs[1].(int)]
	}).(GetVPCRouterSiteToSiteVpnOutput)
}

type GetVPCRouterStaticNat struct {
	Description string `pulumi:"description"`
	PrivateIp string `pulumi:"privateIp"`
	PublicIp string `pulumi:"publicIp"`
}

type GetVPCRouterStaticNatInput interface {
	pulumi.Input

	ToGetVPCRouterStaticNatOutput() GetVPCRouterStaticNatOutput
	ToGetVPCRouterStaticNatOutputWithContext(context.Context) GetVPCRouterStaticNatOutput
}

type GetVPCRouterStaticNatArgs struct {
	Description pulumi.StringInput `pulumi:"description"`
	PrivateIp pulumi.StringInput `pulumi:"privateIp"`
	PublicIp pulumi.StringInput `pulumi:"publicIp"`
}

func (GetVPCRouterStaticNatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterStaticNat)(nil)).Elem()
}

func (i GetVPCRouterStaticNatArgs) ToGetVPCRouterStaticNatOutput() GetVPCRouterStaticNatOutput {
	return i.ToGetVPCRouterStaticNatOutputWithContext(context.Background())
}

func (i GetVPCRouterStaticNatArgs) ToGetVPCRouterStaticNatOutputWithContext(ctx context.Context) GetVPCRouterStaticNatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterStaticNatOutput)
}

type GetVPCRouterStaticNatArrayInput interface {
	pulumi.Input

	ToGetVPCRouterStaticNatArrayOutput() GetVPCRouterStaticNatArrayOutput
	ToGetVPCRouterStaticNatArrayOutputWithContext(context.Context) GetVPCRouterStaticNatArrayOutput
}

type GetVPCRouterStaticNatArray []GetVPCRouterStaticNatInput

func (GetVPCRouterStaticNatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterStaticNat)(nil)).Elem()
}

func (i GetVPCRouterStaticNatArray) ToGetVPCRouterStaticNatArrayOutput() GetVPCRouterStaticNatArrayOutput {
	return i.ToGetVPCRouterStaticNatArrayOutputWithContext(context.Background())
}

func (i GetVPCRouterStaticNatArray) ToGetVPCRouterStaticNatArrayOutputWithContext(ctx context.Context) GetVPCRouterStaticNatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterStaticNatArrayOutput)
}

type GetVPCRouterStaticNatOutput struct { *pulumi.OutputState }

func (GetVPCRouterStaticNatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterStaticNat)(nil)).Elem()
}

func (o GetVPCRouterStaticNatOutput) ToGetVPCRouterStaticNatOutput() GetVPCRouterStaticNatOutput {
	return o
}

func (o GetVPCRouterStaticNatOutput) ToGetVPCRouterStaticNatOutputWithContext(ctx context.Context) GetVPCRouterStaticNatOutput {
	return o
}

func (o GetVPCRouterStaticNatOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterStaticNat) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetVPCRouterStaticNatOutput) PrivateIp() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterStaticNat) string { return v.PrivateIp }).(pulumi.StringOutput)
}

func (o GetVPCRouterStaticNatOutput) PublicIp() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterStaticNat) string { return v.PublicIp }).(pulumi.StringOutput)
}

type GetVPCRouterStaticNatArrayOutput struct { *pulumi.OutputState}

func (GetVPCRouterStaticNatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterStaticNat)(nil)).Elem()
}

func (o GetVPCRouterStaticNatArrayOutput) ToGetVPCRouterStaticNatArrayOutput() GetVPCRouterStaticNatArrayOutput {
	return o
}

func (o GetVPCRouterStaticNatArrayOutput) ToGetVPCRouterStaticNatArrayOutputWithContext(ctx context.Context) GetVPCRouterStaticNatArrayOutput {
	return o
}

func (o GetVPCRouterStaticNatArrayOutput) Index(i pulumi.IntInput) GetVPCRouterStaticNatOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVPCRouterStaticNat {
		return vs[0].([]GetVPCRouterStaticNat)[vs[1].(int)]
	}).(GetVPCRouterStaticNatOutput)
}

type GetVPCRouterStaticRoute struct {
	NextHop string `pulumi:"nextHop"`
	Prefix string `pulumi:"prefix"`
}

type GetVPCRouterStaticRouteInput interface {
	pulumi.Input

	ToGetVPCRouterStaticRouteOutput() GetVPCRouterStaticRouteOutput
	ToGetVPCRouterStaticRouteOutputWithContext(context.Context) GetVPCRouterStaticRouteOutput
}

type GetVPCRouterStaticRouteArgs struct {
	NextHop pulumi.StringInput `pulumi:"nextHop"`
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetVPCRouterStaticRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterStaticRoute)(nil)).Elem()
}

func (i GetVPCRouterStaticRouteArgs) ToGetVPCRouterStaticRouteOutput() GetVPCRouterStaticRouteOutput {
	return i.ToGetVPCRouterStaticRouteOutputWithContext(context.Background())
}

func (i GetVPCRouterStaticRouteArgs) ToGetVPCRouterStaticRouteOutputWithContext(ctx context.Context) GetVPCRouterStaticRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterStaticRouteOutput)
}

type GetVPCRouterStaticRouteArrayInput interface {
	pulumi.Input

	ToGetVPCRouterStaticRouteArrayOutput() GetVPCRouterStaticRouteArrayOutput
	ToGetVPCRouterStaticRouteArrayOutputWithContext(context.Context) GetVPCRouterStaticRouteArrayOutput
}

type GetVPCRouterStaticRouteArray []GetVPCRouterStaticRouteInput

func (GetVPCRouterStaticRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterStaticRoute)(nil)).Elem()
}

func (i GetVPCRouterStaticRouteArray) ToGetVPCRouterStaticRouteArrayOutput() GetVPCRouterStaticRouteArrayOutput {
	return i.ToGetVPCRouterStaticRouteArrayOutputWithContext(context.Background())
}

func (i GetVPCRouterStaticRouteArray) ToGetVPCRouterStaticRouteArrayOutputWithContext(ctx context.Context) GetVPCRouterStaticRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterStaticRouteArrayOutput)
}

type GetVPCRouterStaticRouteOutput struct { *pulumi.OutputState }

func (GetVPCRouterStaticRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterStaticRoute)(nil)).Elem()
}

func (o GetVPCRouterStaticRouteOutput) ToGetVPCRouterStaticRouteOutput() GetVPCRouterStaticRouteOutput {
	return o
}

func (o GetVPCRouterStaticRouteOutput) ToGetVPCRouterStaticRouteOutputWithContext(ctx context.Context) GetVPCRouterStaticRouteOutput {
	return o
}

func (o GetVPCRouterStaticRouteOutput) NextHop() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterStaticRoute) string { return v.NextHop }).(pulumi.StringOutput)
}

func (o GetVPCRouterStaticRouteOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterStaticRoute) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetVPCRouterStaticRouteArrayOutput struct { *pulumi.OutputState}

func (GetVPCRouterStaticRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterStaticRoute)(nil)).Elem()
}

func (o GetVPCRouterStaticRouteArrayOutput) ToGetVPCRouterStaticRouteArrayOutput() GetVPCRouterStaticRouteArrayOutput {
	return o
}

func (o GetVPCRouterStaticRouteArrayOutput) ToGetVPCRouterStaticRouteArrayOutputWithContext(ctx context.Context) GetVPCRouterStaticRouteArrayOutput {
	return o
}

func (o GetVPCRouterStaticRouteArrayOutput) Index(i pulumi.IntInput) GetVPCRouterStaticRouteOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVPCRouterStaticRoute {
		return vs[0].([]GetVPCRouterStaticRoute)[vs[1].(int)]
	}).(GetVPCRouterStaticRouteOutput)
}

type GetVPCRouterUser struct {
	Name string `pulumi:"name"`
	Password string `pulumi:"password"`
}

type GetVPCRouterUserInput interface {
	pulumi.Input

	ToGetVPCRouterUserOutput() GetVPCRouterUserOutput
	ToGetVPCRouterUserOutputWithContext(context.Context) GetVPCRouterUserOutput
}

type GetVPCRouterUserArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	Password pulumi.StringInput `pulumi:"password"`
}

func (GetVPCRouterUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterUser)(nil)).Elem()
}

func (i GetVPCRouterUserArgs) ToGetVPCRouterUserOutput() GetVPCRouterUserOutput {
	return i.ToGetVPCRouterUserOutputWithContext(context.Background())
}

func (i GetVPCRouterUserArgs) ToGetVPCRouterUserOutputWithContext(ctx context.Context) GetVPCRouterUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterUserOutput)
}

type GetVPCRouterUserArrayInput interface {
	pulumi.Input

	ToGetVPCRouterUserArrayOutput() GetVPCRouterUserArrayOutput
	ToGetVPCRouterUserArrayOutputWithContext(context.Context) GetVPCRouterUserArrayOutput
}

type GetVPCRouterUserArray []GetVPCRouterUserInput

func (GetVPCRouterUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterUser)(nil)).Elem()
}

func (i GetVPCRouterUserArray) ToGetVPCRouterUserArrayOutput() GetVPCRouterUserArrayOutput {
	return i.ToGetVPCRouterUserArrayOutputWithContext(context.Background())
}

func (i GetVPCRouterUserArray) ToGetVPCRouterUserArrayOutputWithContext(ctx context.Context) GetVPCRouterUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVPCRouterUserArrayOutput)
}

type GetVPCRouterUserOutput struct { *pulumi.OutputState }

func (GetVPCRouterUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVPCRouterUser)(nil)).Elem()
}

func (o GetVPCRouterUserOutput) ToGetVPCRouterUserOutput() GetVPCRouterUserOutput {
	return o
}

func (o GetVPCRouterUserOutput) ToGetVPCRouterUserOutputWithContext(ctx context.Context) GetVPCRouterUserOutput {
	return o
}

func (o GetVPCRouterUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterUser) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetVPCRouterUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func (v GetVPCRouterUser) string { return v.Password }).(pulumi.StringOutput)
}

type GetVPCRouterUserArrayOutput struct { *pulumi.OutputState}

func (GetVPCRouterUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVPCRouterUser)(nil)).Elem()
}

func (o GetVPCRouterUserArrayOutput) ToGetVPCRouterUserArrayOutput() GetVPCRouterUserArrayOutput {
	return o
}

func (o GetVPCRouterUserArrayOutput) ToGetVPCRouterUserArrayOutputWithContext(ctx context.Context) GetVPCRouterUserArrayOutput {
	return o
}

func (o GetVPCRouterUserArrayOutput) Index(i pulumi.IntInput) GetVPCRouterUserOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) GetVPCRouterUser {
		return vs[0].([]GetVPCRouterUser)[vs[1].(int)]
	}).(GetVPCRouterUserOutput)
}

func init() {
	pulumi.RegisterOutputType(ContainerRegistryUserOutput{})
	pulumi.RegisterOutputType(ContainerRegistryUserArrayOutput{})
	pulumi.RegisterOutputType(DNSRecordTypeOutput{})
	pulumi.RegisterOutputType(DNSRecordTypeArrayOutput{})
	pulumi.RegisterOutputType(DatabaseBackupOutput{})
	pulumi.RegisterOutputType(DatabaseBackupPtrOutput{})
	pulumi.RegisterOutputType(DatabaseNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(DatabaseNetworkInterfacePtrOutput{})
	pulumi.RegisterOutputType(DatabaseReadReplicaNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(DatabaseReadReplicaNetworkInterfacePtrOutput{})
	pulumi.RegisterOutputType(GSLBHealthCheckOutput{})
	pulumi.RegisterOutputType(GSLBHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(GSLBServerOutput{})
	pulumi.RegisterOutputType(GSLBServerArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(LoadBalancerNetworkInterfacePtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerVipOutput{})
	pulumi.RegisterOutputType(LoadBalancerVipArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerVipServerOutput{})
	pulumi.RegisterOutputType(LoadBalancerVipServerArrayOutput{})
	pulumi.RegisterOutputType(LocalRouterNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(LocalRouterNetworkInterfacePtrOutput{})
	pulumi.RegisterOutputType(LocalRouterPeerOutput{})
	pulumi.RegisterOutputType(LocalRouterPeerArrayOutput{})
	pulumi.RegisterOutputType(LocalRouterStaticRouteOutput{})
	pulumi.RegisterOutputType(LocalRouterStaticRouteArrayOutput{})
	pulumi.RegisterOutputType(LocalRouterSwitchOutput{})
	pulumi.RegisterOutputType(LocalRouterSwitchPtrOutput{})
	pulumi.RegisterOutputType(MobileGatewayPrivateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(MobileGatewayPrivateNetworkInterfacePtrOutput{})
	pulumi.RegisterOutputType(MobileGatewaySimOutput{})
	pulumi.RegisterOutputType(MobileGatewaySimArrayOutput{})
	pulumi.RegisterOutputType(MobileGatewaySimRouteOutput{})
	pulumi.RegisterOutputType(MobileGatewaySimRouteArrayOutput{})
	pulumi.RegisterOutputType(MobileGatewayStaticRouteOutput{})
	pulumi.RegisterOutputType(MobileGatewayStaticRouteArrayOutput{})
	pulumi.RegisterOutputType(MobileGatewayTrafficControlOutput{})
	pulumi.RegisterOutputType(MobileGatewayTrafficControlPtrOutput{})
	pulumi.RegisterOutputType(NFSNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(NFSNetworkInterfacePtrOutput{})
	pulumi.RegisterOutputType(PacketFilterExpressionOutput{})
	pulumi.RegisterOutputType(PacketFilterExpressionArrayOutput{})
	pulumi.RegisterOutputType(PacketFilterRuleExpressionOutput{})
	pulumi.RegisterOutputType(PacketFilterRuleExpressionArrayOutput{})
	pulumi.RegisterOutputType(ProxyLBACMECertificateOutput{})
	pulumi.RegisterOutputType(ProxyLBACMECertificateArrayOutput{})
	pulumi.RegisterOutputType(ProxyLBACMECertificateAdditionalCertificateOutput{})
	pulumi.RegisterOutputType(ProxyLBACMECertificateAdditionalCertificateArrayOutput{})
	pulumi.RegisterOutputType(ProxyLBBindPortOutput{})
	pulumi.RegisterOutputType(ProxyLBBindPortArrayOutput{})
	pulumi.RegisterOutputType(ProxyLBBindPortResponseHeaderOutput{})
	pulumi.RegisterOutputType(ProxyLBBindPortResponseHeaderArrayOutput{})
	pulumi.RegisterOutputType(ProxyLBCertificateOutput{})
	pulumi.RegisterOutputType(ProxyLBCertificatePtrOutput{})
	pulumi.RegisterOutputType(ProxyLBCertificateAdditionalCertificateOutput{})
	pulumi.RegisterOutputType(ProxyLBCertificateAdditionalCertificateArrayOutput{})
	pulumi.RegisterOutputType(ProxyLBHealthCheckOutput{})
	pulumi.RegisterOutputType(ProxyLBHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(ProxyLBRuleOutput{})
	pulumi.RegisterOutputType(ProxyLBRuleArrayOutput{})
	pulumi.RegisterOutputType(ProxyLBServerOutput{})
	pulumi.RegisterOutputType(ProxyLBServerArrayOutput{})
	pulumi.RegisterOutputType(ProxyLBSorryServerOutput{})
	pulumi.RegisterOutputType(ProxyLBSorryServerPtrOutput{})
	pulumi.RegisterOutputType(ServerDiskEditParameterOutput{})
	pulumi.RegisterOutputType(ServerDiskEditParameterPtrOutput{})
	pulumi.RegisterOutputType(ServerDiskEditParameterNoteOutput{})
	pulumi.RegisterOutputType(ServerDiskEditParameterNoteArrayOutput{})
	pulumi.RegisterOutputType(ServerNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(ServerNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(SimpleMonitorHealthCheckOutput{})
	pulumi.RegisterOutputType(SimpleMonitorHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(VPCRouterDhcpServerOutput{})
	pulumi.RegisterOutputType(VPCRouterDhcpServerArrayOutput{})
	pulumi.RegisterOutputType(VPCRouterDhcpStaticMappingOutput{})
	pulumi.RegisterOutputType(VPCRouterDhcpStaticMappingArrayOutput{})
	pulumi.RegisterOutputType(VPCRouterFirewallOutput{})
	pulumi.RegisterOutputType(VPCRouterFirewallArrayOutput{})
	pulumi.RegisterOutputType(VPCRouterFirewallExpressionOutput{})
	pulumi.RegisterOutputType(VPCRouterFirewallExpressionArrayOutput{})
	pulumi.RegisterOutputType(VPCRouterL2tpOutput{})
	pulumi.RegisterOutputType(VPCRouterL2tpPtrOutput{})
	pulumi.RegisterOutputType(VPCRouterPortForwardingOutput{})
	pulumi.RegisterOutputType(VPCRouterPortForwardingArrayOutput{})
	pulumi.RegisterOutputType(VPCRouterPptpOutput{})
	pulumi.RegisterOutputType(VPCRouterPptpPtrOutput{})
	pulumi.RegisterOutputType(VPCRouterPrivateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(VPCRouterPrivateNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(VPCRouterPublicNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(VPCRouterPublicNetworkInterfacePtrOutput{})
	pulumi.RegisterOutputType(VPCRouterSiteToSiteVpnOutput{})
	pulumi.RegisterOutputType(VPCRouterSiteToSiteVpnArrayOutput{})
	pulumi.RegisterOutputType(VPCRouterStaticNatOutput{})
	pulumi.RegisterOutputType(VPCRouterStaticNatArrayOutput{})
	pulumi.RegisterOutputType(VPCRouterStaticRouteOutput{})
	pulumi.RegisterOutputType(VPCRouterStaticRouteArrayOutput{})
	pulumi.RegisterOutputType(VPCRouterUserOutput{})
	pulumi.RegisterOutputType(VPCRouterUserArrayOutput{})
	pulumi.RegisterOutputType(GetArchiveFilterOutput{})
	pulumi.RegisterOutputType(GetArchiveFilterConditionOutput{})
	pulumi.RegisterOutputType(GetArchiveFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetBridgeFilterOutput{})
	pulumi.RegisterOutputType(GetBridgeFilterConditionOutput{})
	pulumi.RegisterOutputType(GetBridgeFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetCDROMFilterOutput{})
	pulumi.RegisterOutputType(GetCDROMFilterConditionOutput{})
	pulumi.RegisterOutputType(GetCDROMFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryFilterOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryFilterConditionOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryUserOutput{})
	pulumi.RegisterOutputType(GetContainerRegistryUserArrayOutput{})
	pulumi.RegisterOutputType(GetDNSFilterOutput{})
	pulumi.RegisterOutputType(GetDNSFilterConditionOutput{})
	pulumi.RegisterOutputType(GetDNSFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetDNSRecordTypeOutput{})
	pulumi.RegisterOutputType(GetDNSRecordTypeArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseBackupOutput{})
	pulumi.RegisterOutputType(GetDatabaseBackupArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseFilterOutput{})
	pulumi.RegisterOutputType(GetDatabaseFilterConditionOutput{})
	pulumi.RegisterOutputType(GetDatabaseFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetDatabaseNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetDiskFilterOutput{})
	pulumi.RegisterOutputType(GetDiskFilterConditionOutput{})
	pulumi.RegisterOutputType(GetDiskFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetGSLBFilterOutput{})
	pulumi.RegisterOutputType(GetGSLBFilterConditionOutput{})
	pulumi.RegisterOutputType(GetGSLBFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetGSLBHealthCheckOutput{})
	pulumi.RegisterOutputType(GetGSLBHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetGSLBServerOutput{})
	pulumi.RegisterOutputType(GetGSLBServerArrayOutput{})
	pulumi.RegisterOutputType(GetIconFilterOutput{})
	pulumi.RegisterOutputType(GetIconFilterConditionOutput{})
	pulumi.RegisterOutputType(GetIconFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetInternetFilterOutput{})
	pulumi.RegisterOutputType(GetInternetFilterConditionOutput{})
	pulumi.RegisterOutputType(GetInternetFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerFilterOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerFilterConditionOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerVipOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerVipArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerVipServerOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerVipServerArrayOutput{})
	pulumi.RegisterOutputType(GetLocalRouterFilterOutput{})
	pulumi.RegisterOutputType(GetLocalRouterFilterConditionOutput{})
	pulumi.RegisterOutputType(GetLocalRouterFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetLocalRouterNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetLocalRouterNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetLocalRouterPeerOutput{})
	pulumi.RegisterOutputType(GetLocalRouterPeerArrayOutput{})
	pulumi.RegisterOutputType(GetLocalRouterStaticRouteOutput{})
	pulumi.RegisterOutputType(GetLocalRouterStaticRouteArrayOutput{})
	pulumi.RegisterOutputType(GetLocalRouterSwitchOutput{})
	pulumi.RegisterOutputType(GetLocalRouterSwitchArrayOutput{})
	pulumi.RegisterOutputType(GetNFSFilterOutput{})
	pulumi.RegisterOutputType(GetNFSFilterConditionOutput{})
	pulumi.RegisterOutputType(GetNFSFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetNFSNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetNFSNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetNoteFilterOutput{})
	pulumi.RegisterOutputType(GetNoteFilterConditionOutput{})
	pulumi.RegisterOutputType(GetNoteFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetPacketFilterExpressionOutput{})
	pulumi.RegisterOutputType(GetPacketFilterExpressionArrayOutput{})
	pulumi.RegisterOutputType(GetPacketFilterFilterOutput{})
	pulumi.RegisterOutputType(GetPacketFilterFilterConditionOutput{})
	pulumi.RegisterOutputType(GetPacketFilterFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetPrivateHostFilterOutput{})
	pulumi.RegisterOutputType(GetPrivateHostFilterConditionOutput{})
	pulumi.RegisterOutputType(GetPrivateHostFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetProxyLBBindPortOutput{})
	pulumi.RegisterOutputType(GetProxyLBBindPortArrayOutput{})
	pulumi.RegisterOutputType(GetProxyLBBindPortResponseHeaderOutput{})
	pulumi.RegisterOutputType(GetProxyLBBindPortResponseHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetProxyLBCertificateOutput{})
	pulumi.RegisterOutputType(GetProxyLBCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetProxyLBCertificateAdditionalCertificateOutput{})
	pulumi.RegisterOutputType(GetProxyLBCertificateAdditionalCertificateArrayOutput{})
	pulumi.RegisterOutputType(GetProxyLBFilterOutput{})
	pulumi.RegisterOutputType(GetProxyLBFilterConditionOutput{})
	pulumi.RegisterOutputType(GetProxyLBFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetProxyLBHealthCheckOutput{})
	pulumi.RegisterOutputType(GetProxyLBHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetProxyLBRuleOutput{})
	pulumi.RegisterOutputType(GetProxyLBRuleArrayOutput{})
	pulumi.RegisterOutputType(GetProxyLBServerOutput{})
	pulumi.RegisterOutputType(GetProxyLBServerArrayOutput{})
	pulumi.RegisterOutputType(GetProxyLBSorryServerOutput{})
	pulumi.RegisterOutputType(GetProxyLBSorryServerArrayOutput{})
	pulumi.RegisterOutputType(GetSSHKeyFilterOutput{})
	pulumi.RegisterOutputType(GetSSHKeyFilterConditionOutput{})
	pulumi.RegisterOutputType(GetSSHKeyFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetServerFilterOutput{})
	pulumi.RegisterOutputType(GetServerFilterConditionOutput{})
	pulumi.RegisterOutputType(GetServerFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetServerNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetServerNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetSimpleMonitorFilterOutput{})
	pulumi.RegisterOutputType(GetSimpleMonitorFilterConditionOutput{})
	pulumi.RegisterOutputType(GetSimpleMonitorFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetSimpleMonitorHealthCheckOutput{})
	pulumi.RegisterOutputType(GetSimpleMonitorHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(GetSwitchFilterOutput{})
	pulumi.RegisterOutputType(GetSwitchFilterConditionOutput{})
	pulumi.RegisterOutputType(GetSwitchFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetVPCRouterDhcpServerOutput{})
	pulumi.RegisterOutputType(GetVPCRouterDhcpServerArrayOutput{})
	pulumi.RegisterOutputType(GetVPCRouterDhcpStaticMappingOutput{})
	pulumi.RegisterOutputType(GetVPCRouterDhcpStaticMappingArrayOutput{})
	pulumi.RegisterOutputType(GetVPCRouterFilterOutput{})
	pulumi.RegisterOutputType(GetVPCRouterFilterConditionOutput{})
	pulumi.RegisterOutputType(GetVPCRouterFilterConditionArrayOutput{})
	pulumi.RegisterOutputType(GetVPCRouterFirewallOutput{})
	pulumi.RegisterOutputType(GetVPCRouterFirewallArrayOutput{})
	pulumi.RegisterOutputType(GetVPCRouterFirewallExpressionOutput{})
	pulumi.RegisterOutputType(GetVPCRouterFirewallExpressionArrayOutput{})
	pulumi.RegisterOutputType(GetVPCRouterL2tpOutput{})
	pulumi.RegisterOutputType(GetVPCRouterL2tpArrayOutput{})
	pulumi.RegisterOutputType(GetVPCRouterPortForwardingOutput{})
	pulumi.RegisterOutputType(GetVPCRouterPortForwardingArrayOutput{})
	pulumi.RegisterOutputType(GetVPCRouterPptpOutput{})
	pulumi.RegisterOutputType(GetVPCRouterPptpArrayOutput{})
	pulumi.RegisterOutputType(GetVPCRouterPrivateNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetVPCRouterPrivateNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetVPCRouterPublicNetworkInterfaceOutput{})
	pulumi.RegisterOutputType(GetVPCRouterPublicNetworkInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetVPCRouterSiteToSiteVpnOutput{})
	pulumi.RegisterOutputType(GetVPCRouterSiteToSiteVpnArrayOutput{})
	pulumi.RegisterOutputType(GetVPCRouterStaticNatOutput{})
	pulumi.RegisterOutputType(GetVPCRouterStaticNatArrayOutput{})
	pulumi.RegisterOutputType(GetVPCRouterStaticRouteOutput{})
	pulumi.RegisterOutputType(GetVPCRouterStaticRouteArrayOutput{})
	pulumi.RegisterOutputType(GetVPCRouterUserOutput{})
	pulumi.RegisterOutputType(GetVPCRouterUserArrayOutput{})
}
