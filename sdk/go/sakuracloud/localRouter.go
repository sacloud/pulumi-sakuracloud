// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package sakuracloud

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type LocalRouter struct {
	pulumi.CustomResourceState

	// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The icon id to attach to the LocalRouter
	IconId pulumi.StringPtrOutput `pulumi:"iconId"`
	// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`]
	Name             pulumi.StringOutput               `pulumi:"name"`
	NetworkInterface LocalRouterNetworkInterfaceOutput `pulumi:"networkInterface"`
	Peers            LocalRouterPeerArrayOutput        `pulumi:"peers"`
	// A list of secret key used for peering from other LocalRouters
	SecretKeys   pulumi.StringArrayOutput          `pulumi:"secretKeys"`
	StaticRoutes LocalRouterStaticRouteArrayOutput `pulumi:"staticRoutes"`
	Switch       LocalRouterSwitchOutput           `pulumi:"switch"`
	// Any tags to assign to the LocalRouter
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
}

// NewLocalRouter registers a new resource with the given unique name, arguments, and options.
func NewLocalRouter(ctx *pulumi.Context,
	name string, args *LocalRouterArgs, opts ...pulumi.ResourceOption) (*LocalRouter, error) {
	if args == nil || args.NetworkInterface == nil {
		return nil, errors.New("missing required argument 'NetworkInterface'")
	}
	if args == nil || args.Switch == nil {
		return nil, errors.New("missing required argument 'Switch'")
	}
	if args == nil {
		args = &LocalRouterArgs{}
	}
	var resource LocalRouter
	err := ctx.RegisterResource("sakuracloud:index/localRouter:LocalRouter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalRouter gets an existing LocalRouter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalRouter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocalRouterState, opts ...pulumi.ResourceOption) (*LocalRouter, error) {
	var resource LocalRouter
	err := ctx.ReadResource("sakuracloud:index/localRouter:LocalRouter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocalRouter resources.
type localRouterState struct {
	// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`]
	Description *string `pulumi:"description"`
	// The icon id to attach to the LocalRouter
	IconId *string `pulumi:"iconId"`
	// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`]
	Name             *string                      `pulumi:"name"`
	NetworkInterface *LocalRouterNetworkInterface `pulumi:"networkInterface"`
	Peers            []LocalRouterPeer            `pulumi:"peers"`
	// A list of secret key used for peering from other LocalRouters
	SecretKeys   []string                 `pulumi:"secretKeys"`
	StaticRoutes []LocalRouterStaticRoute `pulumi:"staticRoutes"`
	Switch       *LocalRouterSwitch       `pulumi:"switch"`
	// Any tags to assign to the LocalRouter
	Tags []string `pulumi:"tags"`
}

type LocalRouterState struct {
	// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrInput
	// The icon id to attach to the LocalRouter
	IconId pulumi.StringPtrInput
	// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`]
	Name             pulumi.StringPtrInput
	NetworkInterface LocalRouterNetworkInterfacePtrInput
	Peers            LocalRouterPeerArrayInput
	// A list of secret key used for peering from other LocalRouters
	SecretKeys   pulumi.StringArrayInput
	StaticRoutes LocalRouterStaticRouteArrayInput
	Switch       LocalRouterSwitchPtrInput
	// Any tags to assign to the LocalRouter
	Tags pulumi.StringArrayInput
}

func (LocalRouterState) ElementType() reflect.Type {
	return reflect.TypeOf((*localRouterState)(nil)).Elem()
}

type localRouterArgs struct {
	// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`]
	Description *string `pulumi:"description"`
	// The icon id to attach to the LocalRouter
	IconId *string `pulumi:"iconId"`
	// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`]
	Name             *string                     `pulumi:"name"`
	NetworkInterface LocalRouterNetworkInterface `pulumi:"networkInterface"`
	Peers            []LocalRouterPeer           `pulumi:"peers"`
	StaticRoutes     []LocalRouterStaticRoute    `pulumi:"staticRoutes"`
	Switch           LocalRouterSwitch           `pulumi:"switch"`
	// Any tags to assign to the LocalRouter
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a LocalRouter resource.
type LocalRouterArgs struct {
	// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrInput
	// The icon id to attach to the LocalRouter
	IconId pulumi.StringPtrInput
	// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`]
	Name             pulumi.StringPtrInput
	NetworkInterface LocalRouterNetworkInterfaceInput
	Peers            LocalRouterPeerArrayInput
	StaticRoutes     LocalRouterStaticRouteArrayInput
	Switch           LocalRouterSwitchInput
	// Any tags to assign to the LocalRouter
	Tags pulumi.StringArrayInput
}

func (LocalRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*localRouterArgs)(nil)).Elem()
}
