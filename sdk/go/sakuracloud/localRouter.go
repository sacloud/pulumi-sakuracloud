// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a SakuraCloud Local Router.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-sakuracloud/sdk/go/sakuracloud"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		foobarSwitch, err := sakuracloud.NewSwitch(ctx, "foobarSwitch", nil)
// 		if err != nil {
// 			return err
// 		}
// 		peer, err := sakuracloud.LookupLocalRouter(ctx, &GetLocalRouterArgs{
// 			Filter: GetLocalRouterFilter{
// 				Names: []string{
// 					"peer",
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = sakuracloud.NewLocalRouter(ctx, "foobarLocalRouter", &sakuracloud.LocalRouterArgs{
// 			Description: pulumi.String("descriptio"),
// 			Tags: pulumi.StringArray{
// 				pulumi.String("tag1"),
// 				pulumi.String("tag2"),
// 			},
// 			Switch: &LocalRouterSwitchArgs{
// 				Code:     foobarSwitch.ID(),
// 				Category: pulumi.String("cloud"),
// 				ZoneId:   pulumi.String("is1a"),
// 			},
// 			NetworkInterface: &LocalRouterNetworkInterfaceArgs{
// 				Vip: pulumi.String("192.168.11.1"),
// 				IpAddresses: pulumi.StringArray{
// 					pulumi.String("192.168.11.11"),
// 					pulumi.String("192.168.11.12"),
// 				},
// 				Netmask: pulumi.Int(24),
// 				Vrid:    pulumi.Int(101),
// 			},
// 			StaticRoutes: LocalRouterStaticRouteArray{
// 				&LocalRouterStaticRouteArgs{
// 					Prefix:  pulumi.String("10.0.0.0/24"),
// 					NextHop: pulumi.String("192.168.11.2"),
// 				},
// 				&LocalRouterStaticRouteArgs{
// 					Prefix:  pulumi.String("172.16.0.0/16"),
// 					NextHop: pulumi.String("192.168.11.3"),
// 				},
// 			},
// 			Peers: LocalRouterPeerArray{
// 				&LocalRouterPeerArgs{
// 					PeerId:      pulumi.String(peer.Id),
// 					SecretKey:   pulumi.String(peer.SecretKeys[0]),
// 					Description: pulumi.String("description"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type LocalRouter struct {
	pulumi.CustomResourceState

	// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`].
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The icon id to attach to the LoadBalancer.
	IconId pulumi.StringPtrOutput `pulumi:"iconId"`
	// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`].
	Name pulumi.StringOutput `pulumi:"name"`
	// An `networkInterface` block as defined below.
	NetworkInterface LocalRouterNetworkInterfaceOutput `pulumi:"networkInterface"`
	// One or more `peer` blocks as defined below.
	Peers LocalRouterPeerArrayOutput `pulumi:"peers"`
	// A list of secret key used for peering from other LocalRouters.
	SecretKeys pulumi.StringArrayOutput `pulumi:"secretKeys"`
	// One or more `staticRoute` blocks as defined below.
	StaticRoutes LocalRouterStaticRouteArrayOutput `pulumi:"staticRoutes"`
	// A `switch` block as defined below.
	Switch LocalRouterSwitchOutput `pulumi:"switch"`
	// Any tags to assign to the LoadBalancer.
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
}

// NewLocalRouter registers a new resource with the given unique name, arguments, and options.
func NewLocalRouter(ctx *pulumi.Context,
	name string, args *LocalRouterArgs, opts ...pulumi.ResourceOption) (*LocalRouter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.NetworkInterface == nil {
		return nil, errors.New("invalid value for required argument 'NetworkInterface'")
	}
	if args.Switch == nil {
		return nil, errors.New("invalid value for required argument 'Switch'")
	}
	var resource LocalRouter
	err := ctx.RegisterResource("sakuracloud:index/localRouter:LocalRouter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocalRouter gets an existing LocalRouter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocalRouter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocalRouterState, opts ...pulumi.ResourceOption) (*LocalRouter, error) {
	var resource LocalRouter
	err := ctx.ReadResource("sakuracloud:index/localRouter:LocalRouter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocalRouter resources.
type localRouterState struct {
	// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`].
	Description *string `pulumi:"description"`
	// The icon id to attach to the LoadBalancer.
	IconId *string `pulumi:"iconId"`
	// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`].
	Name *string `pulumi:"name"`
	// An `networkInterface` block as defined below.
	NetworkInterface *LocalRouterNetworkInterface `pulumi:"networkInterface"`
	// One or more `peer` blocks as defined below.
	Peers []LocalRouterPeer `pulumi:"peers"`
	// A list of secret key used for peering from other LocalRouters.
	SecretKeys []string `pulumi:"secretKeys"`
	// One or more `staticRoute` blocks as defined below.
	StaticRoutes []LocalRouterStaticRoute `pulumi:"staticRoutes"`
	// A `switch` block as defined below.
	Switch *LocalRouterSwitch `pulumi:"switch"`
	// Any tags to assign to the LoadBalancer.
	Tags []string `pulumi:"tags"`
}

type LocalRouterState struct {
	// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`].
	Description pulumi.StringPtrInput
	// The icon id to attach to the LoadBalancer.
	IconId pulumi.StringPtrInput
	// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`].
	Name pulumi.StringPtrInput
	// An `networkInterface` block as defined below.
	NetworkInterface LocalRouterNetworkInterfacePtrInput
	// One or more `peer` blocks as defined below.
	Peers LocalRouterPeerArrayInput
	// A list of secret key used for peering from other LocalRouters.
	SecretKeys pulumi.StringArrayInput
	// One or more `staticRoute` blocks as defined below.
	StaticRoutes LocalRouterStaticRouteArrayInput
	// A `switch` block as defined below.
	Switch LocalRouterSwitchPtrInput
	// Any tags to assign to the LoadBalancer.
	Tags pulumi.StringArrayInput
}

func (LocalRouterState) ElementType() reflect.Type {
	return reflect.TypeOf((*localRouterState)(nil)).Elem()
}

type localRouterArgs struct {
	// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`].
	Description *string `pulumi:"description"`
	// The icon id to attach to the LoadBalancer.
	IconId *string `pulumi:"iconId"`
	// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`].
	Name *string `pulumi:"name"`
	// An `networkInterface` block as defined below.
	NetworkInterface LocalRouterNetworkInterface `pulumi:"networkInterface"`
	// One or more `peer` blocks as defined below.
	Peers []LocalRouterPeer `pulumi:"peers"`
	// One or more `staticRoute` blocks as defined below.
	StaticRoutes []LocalRouterStaticRoute `pulumi:"staticRoutes"`
	// A `switch` block as defined below.
	Switch LocalRouterSwitch `pulumi:"switch"`
	// Any tags to assign to the LoadBalancer.
	Tags []string `pulumi:"tags"`
}

// The set of arguments for constructing a LocalRouter resource.
type LocalRouterArgs struct {
	// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`].
	Description pulumi.StringPtrInput
	// The icon id to attach to the LoadBalancer.
	IconId pulumi.StringPtrInput
	// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`].
	Name pulumi.StringPtrInput
	// An `networkInterface` block as defined below.
	NetworkInterface LocalRouterNetworkInterfaceInput
	// One or more `peer` blocks as defined below.
	Peers LocalRouterPeerArrayInput
	// One or more `staticRoute` blocks as defined below.
	StaticRoutes LocalRouterStaticRouteArrayInput
	// A `switch` block as defined below.
	Switch LocalRouterSwitchInput
	// Any tags to assign to the LoadBalancer.
	Tags pulumi.StringArrayInput
}

func (LocalRouterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*localRouterArgs)(nil)).Elem()
}

type LocalRouterInput interface {
	pulumi.Input

	ToLocalRouterOutput() LocalRouterOutput
	ToLocalRouterOutputWithContext(ctx context.Context) LocalRouterOutput
}

func (*LocalRouter) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalRouter)(nil))
}

func (i *LocalRouter) ToLocalRouterOutput() LocalRouterOutput {
	return i.ToLocalRouterOutputWithContext(context.Background())
}

func (i *LocalRouter) ToLocalRouterOutputWithContext(ctx context.Context) LocalRouterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterOutput)
}

func (i *LocalRouter) ToLocalRouterPtrOutput() LocalRouterPtrOutput {
	return i.ToLocalRouterPtrOutputWithContext(context.Background())
}

func (i *LocalRouter) ToLocalRouterPtrOutputWithContext(ctx context.Context) LocalRouterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterPtrOutput)
}

type LocalRouterPtrInput interface {
	pulumi.Input

	ToLocalRouterPtrOutput() LocalRouterPtrOutput
	ToLocalRouterPtrOutputWithContext(ctx context.Context) LocalRouterPtrOutput
}

type localRouterPtrType LocalRouterArgs

func (*localRouterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalRouter)(nil))
}

func (i *localRouterPtrType) ToLocalRouterPtrOutput() LocalRouterPtrOutput {
	return i.ToLocalRouterPtrOutputWithContext(context.Background())
}

func (i *localRouterPtrType) ToLocalRouterPtrOutputWithContext(ctx context.Context) LocalRouterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterPtrOutput)
}

// LocalRouterArrayInput is an input type that accepts LocalRouterArray and LocalRouterArrayOutput values.
// You can construct a concrete instance of `LocalRouterArrayInput` via:
//
//          LocalRouterArray{ LocalRouterArgs{...} }
type LocalRouterArrayInput interface {
	pulumi.Input

	ToLocalRouterArrayOutput() LocalRouterArrayOutput
	ToLocalRouterArrayOutputWithContext(context.Context) LocalRouterArrayOutput
}

type LocalRouterArray []LocalRouterInput

func (LocalRouterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocalRouter)(nil)).Elem()
}

func (i LocalRouterArray) ToLocalRouterArrayOutput() LocalRouterArrayOutput {
	return i.ToLocalRouterArrayOutputWithContext(context.Background())
}

func (i LocalRouterArray) ToLocalRouterArrayOutputWithContext(ctx context.Context) LocalRouterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterArrayOutput)
}

// LocalRouterMapInput is an input type that accepts LocalRouterMap and LocalRouterMapOutput values.
// You can construct a concrete instance of `LocalRouterMapInput` via:
//
//          LocalRouterMap{ "key": LocalRouterArgs{...} }
type LocalRouterMapInput interface {
	pulumi.Input

	ToLocalRouterMapOutput() LocalRouterMapOutput
	ToLocalRouterMapOutputWithContext(context.Context) LocalRouterMapOutput
}

type LocalRouterMap map[string]LocalRouterInput

func (LocalRouterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocalRouter)(nil)).Elem()
}

func (i LocalRouterMap) ToLocalRouterMapOutput() LocalRouterMapOutput {
	return i.ToLocalRouterMapOutputWithContext(context.Background())
}

func (i LocalRouterMap) ToLocalRouterMapOutputWithContext(ctx context.Context) LocalRouterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocalRouterMapOutput)
}

type LocalRouterOutput struct{ *pulumi.OutputState }

func (LocalRouterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LocalRouter)(nil))
}

func (o LocalRouterOutput) ToLocalRouterOutput() LocalRouterOutput {
	return o
}

func (o LocalRouterOutput) ToLocalRouterOutputWithContext(ctx context.Context) LocalRouterOutput {
	return o
}

func (o LocalRouterOutput) ToLocalRouterPtrOutput() LocalRouterPtrOutput {
	return o.ToLocalRouterPtrOutputWithContext(context.Background())
}

func (o LocalRouterOutput) ToLocalRouterPtrOutputWithContext(ctx context.Context) LocalRouterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LocalRouter) *LocalRouter {
		return &v
	}).(LocalRouterPtrOutput)
}

type LocalRouterPtrOutput struct{ *pulumi.OutputState }

func (LocalRouterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocalRouter)(nil))
}

func (o LocalRouterPtrOutput) ToLocalRouterPtrOutput() LocalRouterPtrOutput {
	return o
}

func (o LocalRouterPtrOutput) ToLocalRouterPtrOutputWithContext(ctx context.Context) LocalRouterPtrOutput {
	return o
}

func (o LocalRouterPtrOutput) Elem() LocalRouterOutput {
	return o.ApplyT(func(v *LocalRouter) LocalRouter {
		if v != nil {
			return *v
		}
		var ret LocalRouter
		return ret
	}).(LocalRouterOutput)
}

type LocalRouterArrayOutput struct{ *pulumi.OutputState }

func (LocalRouterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LocalRouter)(nil))
}

func (o LocalRouterArrayOutput) ToLocalRouterArrayOutput() LocalRouterArrayOutput {
	return o
}

func (o LocalRouterArrayOutput) ToLocalRouterArrayOutputWithContext(ctx context.Context) LocalRouterArrayOutput {
	return o
}

func (o LocalRouterArrayOutput) Index(i pulumi.IntInput) LocalRouterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LocalRouter {
		return vs[0].([]LocalRouter)[vs[1].(int)]
	}).(LocalRouterOutput)
}

type LocalRouterMapOutput struct{ *pulumi.OutputState }

func (LocalRouterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]LocalRouter)(nil))
}

func (o LocalRouterMapOutput) ToLocalRouterMapOutput() LocalRouterMapOutput {
	return o
}

func (o LocalRouterMapOutput) ToLocalRouterMapOutputWithContext(ctx context.Context) LocalRouterMapOutput {
	return o
}

func (o LocalRouterMapOutput) MapIndex(k pulumi.StringInput) LocalRouterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) LocalRouter {
		return vs[0].(map[string]LocalRouter)[vs[1].(string)]
	}).(LocalRouterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocalRouterInput)(nil)).Elem(), &LocalRouter{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalRouterPtrInput)(nil)).Elem(), &LocalRouter{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalRouterArrayInput)(nil)).Elem(), LocalRouterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocalRouterMapInput)(nil)).Elem(), LocalRouterMap{})
	pulumi.RegisterOutputType(LocalRouterOutput{})
	pulumi.RegisterOutputType(LocalRouterPtrOutput{})
	pulumi.RegisterOutputType(LocalRouterArrayOutput{})
	pulumi.RegisterOutputType(LocalRouterMapOutput{})
}
