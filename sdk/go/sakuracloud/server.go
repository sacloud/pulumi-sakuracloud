// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package sakuracloud

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type Server struct {
	pulumi.CustomResourceState

	// The id of the CD-ROM to attach to the Server
	CdromId pulumi.StringPtrOutput `pulumi:"cdromId"`
	// The policy of how to allocate virtual CPUs to the server. This must be one of [`standard`/`dedicatedcpu`]
	Commitment pulumi.StringPtrOutput `pulumi:"commitment"`
	// The number of virtual CPUs
	Core pulumi.IntPtrOutput `pulumi:"core"`
	// The description of the Server. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrOutput `pulumi:"description"`
	DiskEditParameter ServerDiskEditParameterPtrOutput `pulumi:"diskEditParameter"`
	// A list of disk id connected to the server
	Disks pulumi.StringArrayOutput `pulumi:"disks"`
	// A list of IP address of DNS server in the zone
	DnsServers pulumi.StringArrayOutput `pulumi:"dnsServers"`
	// The flag to use force shutdown when need to reboot/shutdown while applying
	ForceShutdown pulumi.BoolPtrOutput `pulumi:"forceShutdown"`
	// The IP address of the gateway used by Server
	Gateway pulumi.StringOutput `pulumi:"gateway"`
	// The hostname of the Server
	Hostname pulumi.StringOutput `pulumi:"hostname"`
	// The icon id to attach to the Server
	IconId pulumi.StringPtrOutput `pulumi:"iconId"`
	// The driver name of network interface. This must be one of [`virtio`/`e1000`]
	InterfaceDriver pulumi.StringPtrOutput `pulumi:"interfaceDriver"`
	// The IP address assigned to the Server
	IpAddress pulumi.StringOutput `pulumi:"ipAddress"`
	// The size of memory in GiB
	Memory pulumi.IntPtrOutput `pulumi:"memory"`
	// The name of the Server. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringOutput `pulumi:"name"`
	// The bit length of the subnet assigned to the Server
	Netmask pulumi.IntOutput `pulumi:"netmask"`
	// The network address which the `ip_address` belongs
	NetworkAddress pulumi.StringOutput `pulumi:"networkAddress"`
	NetworkInterfaces ServerNetworkInterfaceArrayOutput `pulumi:"networkInterfaces"`
	// The id of the PrivateHost which the Server is assigned
	PrivateHostId pulumi.StringPtrOutput `pulumi:"privateHostId"`
	// The id of the PrivateHost which the Server is assigned
	PrivateHostName pulumi.StringOutput `pulumi:"privateHostName"`
	// Any tags to assign to the Server
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	// The name of zone that the Server will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringOutput `pulumi:"zone"`
}

// NewServer registers a new resource with the given unique name, arguments, and options.
func NewServer(ctx *pulumi.Context,
	name string, args *ServerArgs, opts ...pulumi.ResourceOption) (*Server, error) {
	if args == nil {
		args = &ServerArgs{}
	}
	var resource Server
	err := ctx.RegisterResource("sakuracloud:index/server:Server", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServer gets an existing Server resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServerState, opts ...pulumi.ResourceOption) (*Server, error) {
	var resource Server
	err := ctx.ReadResource("sakuracloud:index/server:Server", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Server resources.
type serverState struct {
	// The id of the CD-ROM to attach to the Server
	CdromId *string `pulumi:"cdromId"`
	// The policy of how to allocate virtual CPUs to the server. This must be one of [`standard`/`dedicatedcpu`]
	Commitment *string `pulumi:"commitment"`
	// The number of virtual CPUs
	Core *int `pulumi:"core"`
	// The description of the Server. The length of this value must be in the range [`1`-`512`]
	Description *string `pulumi:"description"`
	DiskEditParameter *ServerDiskEditParameter `pulumi:"diskEditParameter"`
	// A list of disk id connected to the server
	Disks []string `pulumi:"disks"`
	// A list of IP address of DNS server in the zone
	DnsServers []string `pulumi:"dnsServers"`
	// The flag to use force shutdown when need to reboot/shutdown while applying
	ForceShutdown *bool `pulumi:"forceShutdown"`
	// The IP address of the gateway used by Server
	Gateway *string `pulumi:"gateway"`
	// The hostname of the Server
	Hostname *string `pulumi:"hostname"`
	// The icon id to attach to the Server
	IconId *string `pulumi:"iconId"`
	// The driver name of network interface. This must be one of [`virtio`/`e1000`]
	InterfaceDriver *string `pulumi:"interfaceDriver"`
	// The IP address assigned to the Server
	IpAddress *string `pulumi:"ipAddress"`
	// The size of memory in GiB
	Memory *int `pulumi:"memory"`
	// The name of the Server. The length of this value must be in the range [`1`-`64`]
	Name *string `pulumi:"name"`
	// The bit length of the subnet assigned to the Server
	Netmask *int `pulumi:"netmask"`
	// The network address which the `ip_address` belongs
	NetworkAddress *string `pulumi:"networkAddress"`
	NetworkInterfaces []ServerNetworkInterface `pulumi:"networkInterfaces"`
	// The id of the PrivateHost which the Server is assigned
	PrivateHostId *string `pulumi:"privateHostId"`
	// The id of the PrivateHost which the Server is assigned
	PrivateHostName *string `pulumi:"privateHostName"`
	// Any tags to assign to the Server
	Tags []string `pulumi:"tags"`
	// The name of zone that the Server will be created (e.g. `is1a`, `tk1a`)
	Zone *string `pulumi:"zone"`
}

type ServerState struct {
	// The id of the CD-ROM to attach to the Server
	CdromId pulumi.StringPtrInput
	// The policy of how to allocate virtual CPUs to the server. This must be one of [`standard`/`dedicatedcpu`]
	Commitment pulumi.StringPtrInput
	// The number of virtual CPUs
	Core pulumi.IntPtrInput
	// The description of the Server. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrInput
	DiskEditParameter ServerDiskEditParameterPtrInput
	// A list of disk id connected to the server
	Disks pulumi.StringArrayInput
	// A list of IP address of DNS server in the zone
	DnsServers pulumi.StringArrayInput
	// The flag to use force shutdown when need to reboot/shutdown while applying
	ForceShutdown pulumi.BoolPtrInput
	// The IP address of the gateway used by Server
	Gateway pulumi.StringPtrInput
	// The hostname of the Server
	Hostname pulumi.StringPtrInput
	// The icon id to attach to the Server
	IconId pulumi.StringPtrInput
	// The driver name of network interface. This must be one of [`virtio`/`e1000`]
	InterfaceDriver pulumi.StringPtrInput
	// The IP address assigned to the Server
	IpAddress pulumi.StringPtrInput
	// The size of memory in GiB
	Memory pulumi.IntPtrInput
	// The name of the Server. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringPtrInput
	// The bit length of the subnet assigned to the Server
	Netmask pulumi.IntPtrInput
	// The network address which the `ip_address` belongs
	NetworkAddress pulumi.StringPtrInput
	NetworkInterfaces ServerNetworkInterfaceArrayInput
	// The id of the PrivateHost which the Server is assigned
	PrivateHostId pulumi.StringPtrInput
	// The id of the PrivateHost which the Server is assigned
	PrivateHostName pulumi.StringPtrInput
	// Any tags to assign to the Server
	Tags pulumi.StringArrayInput
	// The name of zone that the Server will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringPtrInput
}

func (ServerState) ElementType() reflect.Type {
	return reflect.TypeOf((*serverState)(nil)).Elem()
}

type serverArgs struct {
	// The id of the CD-ROM to attach to the Server
	CdromId *string `pulumi:"cdromId"`
	// The policy of how to allocate virtual CPUs to the server. This must be one of [`standard`/`dedicatedcpu`]
	Commitment *string `pulumi:"commitment"`
	// The number of virtual CPUs
	Core *int `pulumi:"core"`
	// The description of the Server. The length of this value must be in the range [`1`-`512`]
	Description *string `pulumi:"description"`
	DiskEditParameter *ServerDiskEditParameter `pulumi:"diskEditParameter"`
	// A list of disk id connected to the server
	Disks []string `pulumi:"disks"`
	// The flag to use force shutdown when need to reboot/shutdown while applying
	ForceShutdown *bool `pulumi:"forceShutdown"`
	// The icon id to attach to the Server
	IconId *string `pulumi:"iconId"`
	// The driver name of network interface. This must be one of [`virtio`/`e1000`]
	InterfaceDriver *string `pulumi:"interfaceDriver"`
	// The size of memory in GiB
	Memory *int `pulumi:"memory"`
	// The name of the Server. The length of this value must be in the range [`1`-`64`]
	Name *string `pulumi:"name"`
	NetworkInterfaces []ServerNetworkInterface `pulumi:"networkInterfaces"`
	// The id of the PrivateHost which the Server is assigned
	PrivateHostId *string `pulumi:"privateHostId"`
	// Any tags to assign to the Server
	Tags []string `pulumi:"tags"`
	// The name of zone that the Server will be created (e.g. `is1a`, `tk1a`)
	Zone *string `pulumi:"zone"`
}

// The set of arguments for constructing a Server resource.
type ServerArgs struct {
	// The id of the CD-ROM to attach to the Server
	CdromId pulumi.StringPtrInput
	// The policy of how to allocate virtual CPUs to the server. This must be one of [`standard`/`dedicatedcpu`]
	Commitment pulumi.StringPtrInput
	// The number of virtual CPUs
	Core pulumi.IntPtrInput
	// The description of the Server. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrInput
	DiskEditParameter ServerDiskEditParameterPtrInput
	// A list of disk id connected to the server
	Disks pulumi.StringArrayInput
	// The flag to use force shutdown when need to reboot/shutdown while applying
	ForceShutdown pulumi.BoolPtrInput
	// The icon id to attach to the Server
	IconId pulumi.StringPtrInput
	// The driver name of network interface. This must be one of [`virtio`/`e1000`]
	InterfaceDriver pulumi.StringPtrInput
	// The size of memory in GiB
	Memory pulumi.IntPtrInput
	// The name of the Server. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringPtrInput
	NetworkInterfaces ServerNetworkInterfaceArrayInput
	// The id of the PrivateHost which the Server is assigned
	PrivateHostId pulumi.StringPtrInput
	// Any tags to assign to the Server
	Tags pulumi.StringArrayInput
	// The name of zone that the Server will be created (e.g. `is1a`, `tk1a`)
	Zone pulumi.StringPtrInput
}

func (ServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serverArgs)(nil)).Elem()
}

