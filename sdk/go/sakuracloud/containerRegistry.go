// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package sakuracloud

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ContainerRegistry struct {
	pulumi.CustomResourceState

	// The level of access that allow to users. This must be one of [`readwrite`/`readonly`/`none`]
	AccessLevel pulumi.StringOutput `pulumi:"accessLevel"`
	// The description of the Container Registry. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The FQDN for accessing the Container Registry. FQDN is built from `subdomain_label` + `.sakuracr.jp`
	Fqdn pulumi.StringOutput `pulumi:"fqdn"`
	// The icon id to attach to the Container Registry
	IconId pulumi.StringPtrOutput `pulumi:"iconId"`
	// The name of the Container Registry. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringOutput `pulumi:"name"`
	// The label at the lowest of the FQDN used when be accessed from users. The length of this value must be in the range
	// [`1`-`64`]
	SubdomainLabel pulumi.StringOutput `pulumi:"subdomainLabel"`
	// Any tags to assign to the Container Registry
	Tags pulumi.StringArrayOutput `pulumi:"tags"`
	Users ContainerRegistryUserArrayOutput `pulumi:"users"`
}

// NewContainerRegistry registers a new resource with the given unique name, arguments, and options.
func NewContainerRegistry(ctx *pulumi.Context,
	name string, args *ContainerRegistryArgs, opts ...pulumi.ResourceOption) (*ContainerRegistry, error) {
	if args == nil || args.AccessLevel == nil {
		return nil, errors.New("missing required argument 'AccessLevel'")
	}
	if args == nil || args.SubdomainLabel == nil {
		return nil, errors.New("missing required argument 'SubdomainLabel'")
	}
	if args == nil {
		args = &ContainerRegistryArgs{}
	}
	var resource ContainerRegistry
	err := ctx.RegisterResource("sakuracloud:index/containerRegistry:ContainerRegistry", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerRegistry gets an existing ContainerRegistry resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerRegistry(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerRegistryState, opts ...pulumi.ResourceOption) (*ContainerRegistry, error) {
	var resource ContainerRegistry
	err := ctx.ReadResource("sakuracloud:index/containerRegistry:ContainerRegistry", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerRegistry resources.
type containerRegistryState struct {
	// The level of access that allow to users. This must be one of [`readwrite`/`readonly`/`none`]
	AccessLevel *string `pulumi:"accessLevel"`
	// The description of the Container Registry. The length of this value must be in the range [`1`-`512`]
	Description *string `pulumi:"description"`
	// The FQDN for accessing the Container Registry. FQDN is built from `subdomain_label` + `.sakuracr.jp`
	Fqdn *string `pulumi:"fqdn"`
	// The icon id to attach to the Container Registry
	IconId *string `pulumi:"iconId"`
	// The name of the Container Registry. The length of this value must be in the range [`1`-`64`]
	Name *string `pulumi:"name"`
	// The label at the lowest of the FQDN used when be accessed from users. The length of this value must be in the range
	// [`1`-`64`]
	SubdomainLabel *string `pulumi:"subdomainLabel"`
	// Any tags to assign to the Container Registry
	Tags []string `pulumi:"tags"`
	Users []ContainerRegistryUser `pulumi:"users"`
}

type ContainerRegistryState struct {
	// The level of access that allow to users. This must be one of [`readwrite`/`readonly`/`none`]
	AccessLevel pulumi.StringPtrInput
	// The description of the Container Registry. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrInput
	// The FQDN for accessing the Container Registry. FQDN is built from `subdomain_label` + `.sakuracr.jp`
	Fqdn pulumi.StringPtrInput
	// The icon id to attach to the Container Registry
	IconId pulumi.StringPtrInput
	// The name of the Container Registry. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringPtrInput
	// The label at the lowest of the FQDN used when be accessed from users. The length of this value must be in the range
	// [`1`-`64`]
	SubdomainLabel pulumi.StringPtrInput
	// Any tags to assign to the Container Registry
	Tags pulumi.StringArrayInput
	Users ContainerRegistryUserArrayInput
}

func (ContainerRegistryState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerRegistryState)(nil)).Elem()
}

type containerRegistryArgs struct {
	// The level of access that allow to users. This must be one of [`readwrite`/`readonly`/`none`]
	AccessLevel string `pulumi:"accessLevel"`
	// The description of the Container Registry. The length of this value must be in the range [`1`-`512`]
	Description *string `pulumi:"description"`
	// The icon id to attach to the Container Registry
	IconId *string `pulumi:"iconId"`
	// The name of the Container Registry. The length of this value must be in the range [`1`-`64`]
	Name *string `pulumi:"name"`
	// The label at the lowest of the FQDN used when be accessed from users. The length of this value must be in the range
	// [`1`-`64`]
	SubdomainLabel string `pulumi:"subdomainLabel"`
	// Any tags to assign to the Container Registry
	Tags []string `pulumi:"tags"`
	Users []ContainerRegistryUser `pulumi:"users"`
}

// The set of arguments for constructing a ContainerRegistry resource.
type ContainerRegistryArgs struct {
	// The level of access that allow to users. This must be one of [`readwrite`/`readonly`/`none`]
	AccessLevel pulumi.StringInput
	// The description of the Container Registry. The length of this value must be in the range [`1`-`512`]
	Description pulumi.StringPtrInput
	// The icon id to attach to the Container Registry
	IconId pulumi.StringPtrInput
	// The name of the Container Registry. The length of this value must be in the range [`1`-`64`]
	Name pulumi.StringPtrInput
	// The label at the lowest of the FQDN used when be accessed from users. The length of this value must be in the range
	// [`1`-`64`]
	SubdomainLabel pulumi.StringInput
	// Any tags to assign to the Container Registry
	Tags pulumi.StringArrayInput
	Users ContainerRegistryUserArrayInput
}

func (ContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerRegistryArgs)(nil)).Elem()
}

