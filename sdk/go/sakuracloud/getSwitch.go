// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Get information about an existing Switch.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-sakuracloud/sdk/go/sakuracloud"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := sakuracloud.LookupSwitch(ctx, &sakuracloud.LookupSwitchArgs{
// 			Filter: sakuracloud.GetSwitchFilter{
// 				Names: []string{
// 					"foobar",
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupSwitch(ctx *pulumi.Context, args *LookupSwitchArgs, opts ...pulumi.InvokeOption) (*LookupSwitchResult, error) {
	var rv LookupSwitchResult
	err := ctx.Invoke("sakuracloud:index/getSwitch:getSwitch", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSwitch.
type LookupSwitchArgs struct {
	// One or more values used for filtering, as defined below.
	Filter *GetSwitchFilter `pulumi:"filter"`
	// The name of zone that the Switch is in (e.g. `is1a`, `tk1a`).
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getSwitch.
type LookupSwitchResult struct {
	// The bridge id attached to the Switch.
	BridgeId string `pulumi:"bridgeId"`
	// The description of the Switch.
	Description string           `pulumi:"description"`
	Filter      *GetSwitchFilter `pulumi:"filter"`
	// The icon id attached to the Switch.
	IconId string `pulumi:"iconId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the Switch.
	Name string `pulumi:"name"`
	// A list of server id connected to the Switch.
	ServerIds []string `pulumi:"serverIds"`
	// Any tags assigned to the Switch.
	Tags []string `pulumi:"tags"`
	Zone string   `pulumi:"zone"`
}
