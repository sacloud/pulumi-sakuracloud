// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"github.com/pulumi/pulumi/sdk/go/pulumi/config"
)

func GetAcceptLanguage(ctx *pulumi.Context) string {
	return config.Get(ctx, "sakuracloud:acceptLanguage")
}

func GetApiRequestRateLimit(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "sakuracloud:apiRequestRateLimit")
}

func GetApiRequestTimeout(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "sakuracloud:apiRequestTimeout")
}

func GetApiRootUrl(ctx *pulumi.Context) string {
	return config.Get(ctx, "sakuracloud:apiRootUrl")
}

func GetRetryInterval(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "sakuracloud:retryInterval")
}

func GetRetryMax(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "sakuracloud:retryMax")
}

// Your SakuraCloud APIKey(secret)
func GetSecret(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "sakuracloud:secret")
	if err == nil {
		return v
	}
	if dv, ok := getEnvOrDefault("", nil, "SAKURACLOUD_ACCESS_TOKEN_SECRET").(string); ok {
		return dv
	}
	return v
}

func GetTimeout(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "sakuracloud:timeout")
}

// Your SakuraCloud APIKey(token)
func GetToken(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "sakuracloud:token")
	if err == nil {
		return v
	}
	if dv, ok := getEnvOrDefault("", nil, "SAKURACLOUD_ACCESS_TOKEN").(string); ok {
		return dv
	}
	return v
}

func GetTrace(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "sakuracloud:trace")
}

// Target SakuraCloud Zone(is1a | is1b | tk1a | tk1v)
func GetZone(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "sakuracloud:zone")
	if err == nil {
		return v
	}
	if dv, ok := getEnvOrDefault("is1b", nil, "SAKURACLOUD_ZONE").(string); ok {
		return dv
	}
	return v
}
