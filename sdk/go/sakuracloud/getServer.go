// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Get information about an existing Server.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-sakuracloud/sdk/go/sakuracloud"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := sakuracloud.LookupServer(ctx, &sakuracloud.LookupServerArgs{
// 			Filter: sakuracloud.GetServerFilter{
// 				Names: []string{
// 					"foobar",
// 				},
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupServer(ctx *pulumi.Context, args *LookupServerArgs, opts ...pulumi.InvokeOption) (*LookupServerResult, error) {
	var rv LookupServerResult
	err := ctx.Invoke("sakuracloud:index/getServer:getServer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServer.
type LookupServerArgs struct {
	// One or more values used for filtering, as defined below.
	Filter *GetServerFilter `pulumi:"filter"`
	// The name of zone that the Server is in (e.g. `is1a`, `tk1a`).
	Zone *string `pulumi:"zone"`
}

// A collection of values returned by getServer.
type LookupServerResult struct {
	// The id of the CD-ROM attached to the server.
	CdromId string `pulumi:"cdromId"`
	// The policy of how to allocate virtual CPUs to the server. This will be one of [`standard`/`dedicatedcpu`].
	Commitment string `pulumi:"commitment"`
	// The number of virtual CPUs.
	Core int `pulumi:"core"`
	// The description of the Server.
	Description string `pulumi:"description"`
	// A list of disk id connected to the server.
	Disks []string `pulumi:"disks"`
	// A list of IP address of DNS server in the zone.
	DnsServers []string         `pulumi:"dnsServers"`
	Filter     *GetServerFilter `pulumi:"filter"`
	// The IP address of the gateway used by Server.
	Gateway string `pulumi:"gateway"`
	// The number of GPUs.
	Gpu int `pulumi:"gpu"`
	// The hostname of the Server.
	Hostname string `pulumi:"hostname"`
	// The icon id attached to the Server.
	IconId string `pulumi:"iconId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The driver name of network interface. This will be one of [`virtio`/`e1000`].
	InterfaceDriver string `pulumi:"interfaceDriver"`
	// The IP address assigned to the Server.
	IpAddress string `pulumi:"ipAddress"`
	// The size of memory in GiB.
	Memory int `pulumi:"memory"`
	// The name of the Server.
	Name string `pulumi:"name"`
	// The bit length of the subnet assigned to the Server.
	Netmask int `pulumi:"netmask"`
	// The network address which the `ipAddress` belongs.
	NetworkAddress string `pulumi:"networkAddress"`
	// A list of `networkInterface` blocks as defined below.
	NetworkInterfaces []GetServerNetworkInterface `pulumi:"networkInterfaces"`
	// The id of the private host which the server is assigned.
	PrivateHostId string `pulumi:"privateHostId"`
	// The name of the private host which the server is assigned.
	PrivateHostName string `pulumi:"privateHostName"`
	// Any tags assigned to the Server.
	Tags []string `pulumi:"tags"`
	Zone string   `pulumi:"zone"`
}
