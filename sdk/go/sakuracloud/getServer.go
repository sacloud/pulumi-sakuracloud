// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to retrieve information about a SakuraCloud Server.
//
// > This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/d/server.html.markdown.
func LookupServer(ctx *pulumi.Context, args *GetServerArgs) (*GetServerResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["filters"] = args.Filters
		inputs["nameSelectors"] = args.NameSelectors
		inputs["tagSelectors"] = args.TagSelectors
		inputs["zone"] = args.Zone
	}
	outputs, err := ctx.Invoke("sakuracloud:index/getServer:getServer", inputs)
	if err != nil {
		return nil, err
	}
	return &GetServerResult{
		AdditionalDisplayIpaddresses: outputs["additionalDisplayIpaddresses"],
		AdditionalNics: outputs["additionalNics"],
		CdromId: outputs["cdromId"],
		Commitment: outputs["commitment"],
		Core: outputs["core"],
		Description: outputs["description"],
		Disks: outputs["disks"],
		DisplayIpaddress: outputs["displayIpaddress"],
		DnsServers: outputs["dnsServers"],
		Filters: outputs["filters"],
		Gateway: outputs["gateway"],
		IconId: outputs["iconId"],
		InterfaceDriver: outputs["interfaceDriver"],
		Ipaddress: outputs["ipaddress"],
		Macaddresses: outputs["macaddresses"],
		Memory: outputs["memory"],
		Name: outputs["name"],
		NameSelectors: outputs["nameSelectors"],
		Nic: outputs["nic"],
		NwAddress: outputs["nwAddress"],
		NwMaskLen: outputs["nwMaskLen"],
		PacketFilterIds: outputs["packetFilterIds"],
		PrivateHostId: outputs["privateHostId"],
		PrivateHostName: outputs["privateHostName"],
		TagSelectors: outputs["tagSelectors"],
		Tags: outputs["tags"],
		VncHost: outputs["vncHost"],
		VncPassword: outputs["vncPassword"],
		VncPort: outputs["vncPort"],
		Zone: outputs["zone"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getServer.
type GetServerArgs struct {
	// The map of filter key and value.
	Filters interface{}
	// The list of names to filtering.
	NameSelectors interface{}
	// The list of tags to filtering.
	TagSelectors interface{}
	// The ID of the zone.
	Zone interface{}
}

// A collection of values returned by getServer.
type GetServerResult struct {
	// The display IP address list of the NICs (excluding primary NIC) of Server.  
	AdditionalDisplayIpaddresses interface{}
	// The ID list of the Switches connected to NICs (excluding primary NIC) of Server.
	AdditionalNics interface{}
	// The ID of the CD-ROM inserted to Server.
	CdromId interface{}
	// The plan of assignment of CPU to VM.
	Commitment interface{}
	// The number of cores.
	Core interface{}
	// The description of the resource.
	Description interface{}
	// The ID list of the Disks connected to Server.
	Disks interface{}
	// The IP address of NIC for display.
	DisplayIpaddress interface{}
	// List of default DNS servers for the zone to which the Server belongs.
	DnsServers interface{}
	Filters interface{}
	// Default gateway address of the Server.	 
	Gateway interface{}
	// The ID of the icon of the resource.
	IconId interface{}
	// The name of network interface driver.
	InterfaceDriver interface{}
	// The IP address of primary NIC.
	Ipaddress interface{}
	// The MAC address list of NICs connected to Server.
	Macaddresses interface{}
	// The size of memory (unit:`GB`).
	Memory interface{}
	// The name of the resource.
	Name interface{}
	NameSelectors interface{}
	// The primary NIC's connection destination.
	Nic interface{}
	// The network address of the Server.
	NwAddress interface{}
	// Network mask length of the Server.
	NwMaskLen interface{}
	// The ID list of the Packet Filter connected to Server.
	PacketFilterIds interface{}
	// The ID of the Private Host to which the Server belongs.
	PrivateHostId interface{}
	// The name of the Private Host to which the Server belongs.
	PrivateHostName interface{}
	TagSelectors interface{}
	// The tag list of the resources.
	Tags interface{}
	// The hostname of VNC server.
	VncHost interface{}
	// The password of VNC server.
	VncPassword interface{}
	// The port number of VNC server.
	VncPort interface{}
	// The ID of the zone to which the resource belongs.
	Zone interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
