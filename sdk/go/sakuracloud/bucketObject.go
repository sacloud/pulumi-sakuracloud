// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package sakuracloud

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type BucketObject struct {
	pulumi.CustomResourceState

	// The access key for using SakuraCloud Object Storage API
	AccessKey pulumi.StringOutput `pulumi:"accessKey"`
	// The name of the bucket
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// The content to upload to as the bucket object. This conflicts with [`source`]
	Content pulumi.StringPtrOutput `pulumi:"content"`
	// The content-type of the bucket object
	ContentType pulumi.StringOutput `pulumi:"contentType"`
	// The etag of the bucket object
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The URL for cached access to the bucket object via HTTP
	HttpCacheUrl pulumi.StringOutput `pulumi:"httpCacheUrl"`
	// The URL with path-format for accessing the bucket object via HTTP
	HttpPathUrl pulumi.StringOutput `pulumi:"httpPathUrl"`
	// The URL for accessing the bucket object via HTTP
	HttpUrl pulumi.StringOutput `pulumi:"httpUrl"`
	// The URL for cached access to the bucket object via HTTPS
	HttpsCacheUrl pulumi.StringOutput `pulumi:"httpsCacheUrl"`
	// The URL with path-format for accessing the bucket object via HTTPS
	HttpsPathUrl pulumi.StringOutput `pulumi:"httpsPathUrl"`
	// The URL for accessing the bucket object via HTTPS
	HttpsUrl pulumi.StringOutput `pulumi:"httpsUrl"`
	// The name of the bucket object
	Key pulumi.StringOutput `pulumi:"key"`
	// The time when the bucket object last modified
	LastModified pulumi.StringOutput `pulumi:"lastModified"`
	// The secret key for using SakuraCloud Object Storage API
	SecretKey pulumi.StringOutput `pulumi:"secretKey"`
	// The size of the bucket object in bytes
	Size pulumi.IntOutput `pulumi:"size"`
	// The file path to upload to as the bucket object. This conflicts with [`content`]
	Source pulumi.StringPtrOutput `pulumi:"source"`
}

// NewBucketObject registers a new resource with the given unique name, arguments, and options.
func NewBucketObject(ctx *pulumi.Context,
	name string, args *BucketObjectArgs, opts ...pulumi.ResourceOption) (*BucketObject, error) {
	if args == nil || args.AccessKey == nil {
		return nil, errors.New("missing required argument 'AccessKey'")
	}
	if args == nil || args.Bucket == nil {
		return nil, errors.New("missing required argument 'Bucket'")
	}
	if args == nil || args.Key == nil {
		return nil, errors.New("missing required argument 'Key'")
	}
	if args == nil || args.SecretKey == nil {
		return nil, errors.New("missing required argument 'SecretKey'")
	}
	if args == nil {
		args = &BucketObjectArgs{}
	}
	var resource BucketObject
	err := ctx.RegisterResource("sakuracloud:index/bucketObject:BucketObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketObject gets an existing BucketObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketObjectState, opts ...pulumi.ResourceOption) (*BucketObject, error) {
	var resource BucketObject
	err := ctx.ReadResource("sakuracloud:index/bucketObject:BucketObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketObject resources.
type bucketObjectState struct {
	// The access key for using SakuraCloud Object Storage API
	AccessKey *string `pulumi:"accessKey"`
	// The name of the bucket
	Bucket *string `pulumi:"bucket"`
	// The content to upload to as the bucket object. This conflicts with [`source`]
	Content *string `pulumi:"content"`
	// The content-type of the bucket object
	ContentType *string `pulumi:"contentType"`
	// The etag of the bucket object
	Etag *string `pulumi:"etag"`
	// The URL for cached access to the bucket object via HTTP
	HttpCacheUrl *string `pulumi:"httpCacheUrl"`
	// The URL with path-format for accessing the bucket object via HTTP
	HttpPathUrl *string `pulumi:"httpPathUrl"`
	// The URL for accessing the bucket object via HTTP
	HttpUrl *string `pulumi:"httpUrl"`
	// The URL for cached access to the bucket object via HTTPS
	HttpsCacheUrl *string `pulumi:"httpsCacheUrl"`
	// The URL with path-format for accessing the bucket object via HTTPS
	HttpsPathUrl *string `pulumi:"httpsPathUrl"`
	// The URL for accessing the bucket object via HTTPS
	HttpsUrl *string `pulumi:"httpsUrl"`
	// The name of the bucket object
	Key *string `pulumi:"key"`
	// The time when the bucket object last modified
	LastModified *string `pulumi:"lastModified"`
	// The secret key for using SakuraCloud Object Storage API
	SecretKey *string `pulumi:"secretKey"`
	// The size of the bucket object in bytes
	Size *int `pulumi:"size"`
	// The file path to upload to as the bucket object. This conflicts with [`content`]
	Source *string `pulumi:"source"`
}

type BucketObjectState struct {
	// The access key for using SakuraCloud Object Storage API
	AccessKey pulumi.StringPtrInput
	// The name of the bucket
	Bucket pulumi.StringPtrInput
	// The content to upload to as the bucket object. This conflicts with [`source`]
	Content pulumi.StringPtrInput
	// The content-type of the bucket object
	ContentType pulumi.StringPtrInput
	// The etag of the bucket object
	Etag pulumi.StringPtrInput
	// The URL for cached access to the bucket object via HTTP
	HttpCacheUrl pulumi.StringPtrInput
	// The URL with path-format for accessing the bucket object via HTTP
	HttpPathUrl pulumi.StringPtrInput
	// The URL for accessing the bucket object via HTTP
	HttpUrl pulumi.StringPtrInput
	// The URL for cached access to the bucket object via HTTPS
	HttpsCacheUrl pulumi.StringPtrInput
	// The URL with path-format for accessing the bucket object via HTTPS
	HttpsPathUrl pulumi.StringPtrInput
	// The URL for accessing the bucket object via HTTPS
	HttpsUrl pulumi.StringPtrInput
	// The name of the bucket object
	Key pulumi.StringPtrInput
	// The time when the bucket object last modified
	LastModified pulumi.StringPtrInput
	// The secret key for using SakuraCloud Object Storage API
	SecretKey pulumi.StringPtrInput
	// The size of the bucket object in bytes
	Size pulumi.IntPtrInput
	// The file path to upload to as the bucket object. This conflicts with [`content`]
	Source pulumi.StringPtrInput
}

func (BucketObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketObjectState)(nil)).Elem()
}

type bucketObjectArgs struct {
	// The access key for using SakuraCloud Object Storage API
	AccessKey string `pulumi:"accessKey"`
	// The name of the bucket
	Bucket string `pulumi:"bucket"`
	// The content to upload to as the bucket object. This conflicts with [`source`]
	Content *string `pulumi:"content"`
	// The content-type of the bucket object
	ContentType *string `pulumi:"contentType"`
	// The etag of the bucket object
	Etag *string `pulumi:"etag"`
	// The name of the bucket object
	Key string `pulumi:"key"`
	// The secret key for using SakuraCloud Object Storage API
	SecretKey string `pulumi:"secretKey"`
	// The file path to upload to as the bucket object. This conflicts with [`content`]
	Source *string `pulumi:"source"`
}

// The set of arguments for constructing a BucketObject resource.
type BucketObjectArgs struct {
	// The access key for using SakuraCloud Object Storage API
	AccessKey pulumi.StringInput
	// The name of the bucket
	Bucket pulumi.StringInput
	// The content to upload to as the bucket object. This conflicts with [`source`]
	Content pulumi.StringPtrInput
	// The content-type of the bucket object
	ContentType pulumi.StringPtrInput
	// The etag of the bucket object
	Etag pulumi.StringPtrInput
	// The name of the bucket object
	Key pulumi.StringInput
	// The secret key for using SakuraCloud Object Storage API
	SecretKey pulumi.StringInput
	// The file path to upload to as the bucket object. This conflicts with [`content`]
	Source pulumi.StringPtrInput
}

func (BucketObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketObjectArgs)(nil)).Elem()
}
