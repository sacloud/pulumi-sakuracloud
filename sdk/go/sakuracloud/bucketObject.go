// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages a SakuraCloud Bucket Object.
type BucketObject struct {
	pulumi.CustomResourceState

	// The access key for using SakuraCloud Object Storage API.
	AccessKey pulumi.StringOutput `pulumi:"accessKey"`
	// The name of the bucket. Changing this forces a new resource to be created.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// The content to upload to as the bucket object. This conflicts with [`source`].
	Content pulumi.StringPtrOutput `pulumi:"content"`
	// The content-type of the bucket object.
	ContentType pulumi.StringOutput `pulumi:"contentType"`
	// The etag of the bucket object.
	Etag pulumi.StringOutput `pulumi:"etag"`
	// The URL for cached access to the bucket object via HTTP.
	HttpCacheUrl pulumi.StringOutput `pulumi:"httpCacheUrl"`
	// The URL with path-format for accessing the bucket object via HTTP.
	HttpPathUrl pulumi.StringOutput `pulumi:"httpPathUrl"`
	// The URL for accessing the bucket object via HTTP.
	HttpUrl pulumi.StringOutput `pulumi:"httpUrl"`
	// The URL for cached access to the bucket object via HTTPS.
	HttpsCacheUrl pulumi.StringOutput `pulumi:"httpsCacheUrl"`
	// The URL with path-format for accessing the bucket object via HTTPS.
	HttpsPathUrl pulumi.StringOutput `pulumi:"httpsPathUrl"`
	// The URL for accessing the bucket object via HTTPS.
	HttpsUrl pulumi.StringOutput `pulumi:"httpsUrl"`
	// The name of the bucket object. Changing this forces a new resource to be created.
	Key pulumi.StringOutput `pulumi:"key"`
	// The time when the bucket object last modified.
	LastModified pulumi.StringOutput `pulumi:"lastModified"`
	// The secret key for using SakuraCloud Object Storage API.
	SecretKey pulumi.StringOutput `pulumi:"secretKey"`
	// The size of the bucket object in bytes.
	Size pulumi.IntOutput `pulumi:"size"`
	// The file path to upload to as the bucket object. This conflicts with [`content`].
	Source pulumi.StringPtrOutput `pulumi:"source"`
}

// NewBucketObject registers a new resource with the given unique name, arguments, and options.
func NewBucketObject(ctx *pulumi.Context,
	name string, args *BucketObjectArgs, opts ...pulumi.ResourceOption) (*BucketObject, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessKey == nil {
		return nil, errors.New("invalid value for required argument 'AccessKey'")
	}
	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Key == nil {
		return nil, errors.New("invalid value for required argument 'Key'")
	}
	if args.SecretKey == nil {
		return nil, errors.New("invalid value for required argument 'SecretKey'")
	}
	var resource BucketObject
	err := ctx.RegisterResource("sakuracloud:index/bucketObject:BucketObject", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketObject gets an existing BucketObject resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketObject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketObjectState, opts ...pulumi.ResourceOption) (*BucketObject, error) {
	var resource BucketObject
	err := ctx.ReadResource("sakuracloud:index/bucketObject:BucketObject", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketObject resources.
type bucketObjectState struct {
	// The access key for using SakuraCloud Object Storage API.
	AccessKey *string `pulumi:"accessKey"`
	// The name of the bucket. Changing this forces a new resource to be created.
	Bucket *string `pulumi:"bucket"`
	// The content to upload to as the bucket object. This conflicts with [`source`].
	Content *string `pulumi:"content"`
	// The content-type of the bucket object.
	ContentType *string `pulumi:"contentType"`
	// The etag of the bucket object.
	Etag *string `pulumi:"etag"`
	// The URL for cached access to the bucket object via HTTP.
	HttpCacheUrl *string `pulumi:"httpCacheUrl"`
	// The URL with path-format for accessing the bucket object via HTTP.
	HttpPathUrl *string `pulumi:"httpPathUrl"`
	// The URL for accessing the bucket object via HTTP.
	HttpUrl *string `pulumi:"httpUrl"`
	// The URL for cached access to the bucket object via HTTPS.
	HttpsCacheUrl *string `pulumi:"httpsCacheUrl"`
	// The URL with path-format for accessing the bucket object via HTTPS.
	HttpsPathUrl *string `pulumi:"httpsPathUrl"`
	// The URL for accessing the bucket object via HTTPS.
	HttpsUrl *string `pulumi:"httpsUrl"`
	// The name of the bucket object. Changing this forces a new resource to be created.
	Key *string `pulumi:"key"`
	// The time when the bucket object last modified.
	LastModified *string `pulumi:"lastModified"`
	// The secret key for using SakuraCloud Object Storage API.
	SecretKey *string `pulumi:"secretKey"`
	// The size of the bucket object in bytes.
	Size *int `pulumi:"size"`
	// The file path to upload to as the bucket object. This conflicts with [`content`].
	Source *string `pulumi:"source"`
}

type BucketObjectState struct {
	// The access key for using SakuraCloud Object Storage API.
	AccessKey pulumi.StringPtrInput
	// The name of the bucket. Changing this forces a new resource to be created.
	Bucket pulumi.StringPtrInput
	// The content to upload to as the bucket object. This conflicts with [`source`].
	Content pulumi.StringPtrInput
	// The content-type of the bucket object.
	ContentType pulumi.StringPtrInput
	// The etag of the bucket object.
	Etag pulumi.StringPtrInput
	// The URL for cached access to the bucket object via HTTP.
	HttpCacheUrl pulumi.StringPtrInput
	// The URL with path-format for accessing the bucket object via HTTP.
	HttpPathUrl pulumi.StringPtrInput
	// The URL for accessing the bucket object via HTTP.
	HttpUrl pulumi.StringPtrInput
	// The URL for cached access to the bucket object via HTTPS.
	HttpsCacheUrl pulumi.StringPtrInput
	// The URL with path-format for accessing the bucket object via HTTPS.
	HttpsPathUrl pulumi.StringPtrInput
	// The URL for accessing the bucket object via HTTPS.
	HttpsUrl pulumi.StringPtrInput
	// The name of the bucket object. Changing this forces a new resource to be created.
	Key pulumi.StringPtrInput
	// The time when the bucket object last modified.
	LastModified pulumi.StringPtrInput
	// The secret key for using SakuraCloud Object Storage API.
	SecretKey pulumi.StringPtrInput
	// The size of the bucket object in bytes.
	Size pulumi.IntPtrInput
	// The file path to upload to as the bucket object. This conflicts with [`content`].
	Source pulumi.StringPtrInput
}

func (BucketObjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketObjectState)(nil)).Elem()
}

type bucketObjectArgs struct {
	// The access key for using SakuraCloud Object Storage API.
	AccessKey string `pulumi:"accessKey"`
	// The name of the bucket. Changing this forces a new resource to be created.
	Bucket string `pulumi:"bucket"`
	// The content to upload to as the bucket object. This conflicts with [`source`].
	Content *string `pulumi:"content"`
	// The content-type of the bucket object.
	ContentType *string `pulumi:"contentType"`
	// The etag of the bucket object.
	Etag *string `pulumi:"etag"`
	// The name of the bucket object. Changing this forces a new resource to be created.
	Key string `pulumi:"key"`
	// The secret key for using SakuraCloud Object Storage API.
	SecretKey string `pulumi:"secretKey"`
	// The file path to upload to as the bucket object. This conflicts with [`content`].
	Source *string `pulumi:"source"`
}

// The set of arguments for constructing a BucketObject resource.
type BucketObjectArgs struct {
	// The access key for using SakuraCloud Object Storage API.
	AccessKey pulumi.StringInput
	// The name of the bucket. Changing this forces a new resource to be created.
	Bucket pulumi.StringInput
	// The content to upload to as the bucket object. This conflicts with [`source`].
	Content pulumi.StringPtrInput
	// The content-type of the bucket object.
	ContentType pulumi.StringPtrInput
	// The etag of the bucket object.
	Etag pulumi.StringPtrInput
	// The name of the bucket object. Changing this forces a new resource to be created.
	Key pulumi.StringInput
	// The secret key for using SakuraCloud Object Storage API.
	SecretKey pulumi.StringInput
	// The file path to upload to as the bucket object. This conflicts with [`content`].
	Source pulumi.StringPtrInput
}

func (BucketObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketObjectArgs)(nil)).Elem()
}

type BucketObjectInput interface {
	pulumi.Input

	ToBucketObjectOutput() BucketObjectOutput
	ToBucketObjectOutputWithContext(ctx context.Context) BucketObjectOutput
}

func (*BucketObject) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObject)(nil))
}

func (i *BucketObject) ToBucketObjectOutput() BucketObjectOutput {
	return i.ToBucketObjectOutputWithContext(context.Background())
}

func (i *BucketObject) ToBucketObjectOutputWithContext(ctx context.Context) BucketObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectOutput)
}

func (i *BucketObject) ToBucketObjectPtrOutput() BucketObjectPtrOutput {
	return i.ToBucketObjectPtrOutputWithContext(context.Background())
}

func (i *BucketObject) ToBucketObjectPtrOutputWithContext(ctx context.Context) BucketObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectPtrOutput)
}

type BucketObjectPtrInput interface {
	pulumi.Input

	ToBucketObjectPtrOutput() BucketObjectPtrOutput
	ToBucketObjectPtrOutputWithContext(ctx context.Context) BucketObjectPtrOutput
}

type bucketObjectPtrType BucketObjectArgs

func (*bucketObjectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObject)(nil))
}

func (i *bucketObjectPtrType) ToBucketObjectPtrOutput() BucketObjectPtrOutput {
	return i.ToBucketObjectPtrOutputWithContext(context.Background())
}

func (i *bucketObjectPtrType) ToBucketObjectPtrOutputWithContext(ctx context.Context) BucketObjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectPtrOutput)
}

// BucketObjectArrayInput is an input type that accepts BucketObjectArray and BucketObjectArrayOutput values.
// You can construct a concrete instance of `BucketObjectArrayInput` via:
//
//          BucketObjectArray{ BucketObjectArgs{...} }
type BucketObjectArrayInput interface {
	pulumi.Input

	ToBucketObjectArrayOutput() BucketObjectArrayOutput
	ToBucketObjectArrayOutputWithContext(context.Context) BucketObjectArrayOutput
}

type BucketObjectArray []BucketObjectInput

func (BucketObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*BucketObject)(nil))
}

func (i BucketObjectArray) ToBucketObjectArrayOutput() BucketObjectArrayOutput {
	return i.ToBucketObjectArrayOutputWithContext(context.Background())
}

func (i BucketObjectArray) ToBucketObjectArrayOutputWithContext(ctx context.Context) BucketObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectArrayOutput)
}

// BucketObjectMapInput is an input type that accepts BucketObjectMap and BucketObjectMapOutput values.
// You can construct a concrete instance of `BucketObjectMapInput` via:
//
//          BucketObjectMap{ "key": BucketObjectArgs{...} }
type BucketObjectMapInput interface {
	pulumi.Input

	ToBucketObjectMapOutput() BucketObjectMapOutput
	ToBucketObjectMapOutputWithContext(context.Context) BucketObjectMapOutput
}

type BucketObjectMap map[string]BucketObjectInput

func (BucketObjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*BucketObject)(nil))
}

func (i BucketObjectMap) ToBucketObjectMapOutput() BucketObjectMapOutput {
	return i.ToBucketObjectMapOutputWithContext(context.Background())
}

func (i BucketObjectMap) ToBucketObjectMapOutputWithContext(ctx context.Context) BucketObjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectMapOutput)
}

type BucketObjectOutput struct {
	*pulumi.OutputState
}

func (BucketObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObject)(nil))
}

func (o BucketObjectOutput) ToBucketObjectOutput() BucketObjectOutput {
	return o
}

func (o BucketObjectOutput) ToBucketObjectOutputWithContext(ctx context.Context) BucketObjectOutput {
	return o
}

func (o BucketObjectOutput) ToBucketObjectPtrOutput() BucketObjectPtrOutput {
	return o.ToBucketObjectPtrOutputWithContext(context.Background())
}

func (o BucketObjectOutput) ToBucketObjectPtrOutputWithContext(ctx context.Context) BucketObjectPtrOutput {
	return o.ApplyT(func(v BucketObject) *BucketObject {
		return &v
	}).(BucketObjectPtrOutput)
}

type BucketObjectPtrOutput struct {
	*pulumi.OutputState
}

func (BucketObjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObject)(nil))
}

func (o BucketObjectPtrOutput) ToBucketObjectPtrOutput() BucketObjectPtrOutput {
	return o
}

func (o BucketObjectPtrOutput) ToBucketObjectPtrOutputWithContext(ctx context.Context) BucketObjectPtrOutput {
	return o
}

type BucketObjectArrayOutput struct{ *pulumi.OutputState }

func (BucketObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketObject)(nil))
}

func (o BucketObjectArrayOutput) ToBucketObjectArrayOutput() BucketObjectArrayOutput {
	return o
}

func (o BucketObjectArrayOutput) ToBucketObjectArrayOutputWithContext(ctx context.Context) BucketObjectArrayOutput {
	return o
}

func (o BucketObjectArrayOutput) Index(i pulumi.IntInput) BucketObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketObject {
		return vs[0].([]BucketObject)[vs[1].(int)]
	}).(BucketObjectOutput)
}

type BucketObjectMapOutput struct{ *pulumi.OutputState }

func (BucketObjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BucketObject)(nil))
}

func (o BucketObjectMapOutput) ToBucketObjectMapOutput() BucketObjectMapOutput {
	return o
}

func (o BucketObjectMapOutput) ToBucketObjectMapOutputWithContext(ctx context.Context) BucketObjectMapOutput {
	return o
}

func (o BucketObjectMapOutput) MapIndex(k pulumi.StringInput) BucketObjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BucketObject {
		return vs[0].(map[string]BucketObject)[vs[1].(string)]
	}).(BucketObjectOutput)
}

func init() {
	pulumi.RegisterOutputType(BucketObjectOutput{})
	pulumi.RegisterOutputType(BucketObjectPtrOutput{})
	pulumi.RegisterOutputType(BucketObjectArrayOutput{})
	pulumi.RegisterOutputType(BucketObjectMapOutput{})
}
