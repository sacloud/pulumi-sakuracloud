// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sakuracloud

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to retrieve information about a SakuraCloud Archive.
// 
// ## `osType` Parameter Reference
// 
// * `centos` - CentOS 7
// * `centos6` - CentOS 6
// * `ubuntu` - Ubuntu 
// * `debian` - Debian 
// * `coreos` - CoreOS
// * `rancheros` - RancherOS
// * `k3os` - k3OS
// * `kusanagi` - Kusanagi (CentOS7)
// * `sophos-utm` - Sophos-UTM
// * `freebsd` - FreeBSD
// * `windows2016` - Windows 2016
// * `windows2016-rds` - Windows 2016 (RDS)
// * `windows2016-rds-office` - Windows 2016 (RDS + Office)
// * `windows2016-sql-web` - Windows 2016 SQLServer (Web)
// * `windows2016-sql-standard` - Windows 2016 SQLServer (Standard)
// * `windows2016-sql2017-standard` - Windows 2016 SQLServer 2017 (Standard)
// * `windows2016-sql-standard-all` - Windows 2016 SQLServer (Standard, RDS + Office)
// * `windows2016-sql2017-standard-all` - Windows 2016 SQLServer 2017 (Standard, RDS + Office)
// * `windows2019` - Windows 2019
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-sakuracloud/blob/master/website/docs/d/archive.html.markdown.
func LookupArchive(ctx *pulumi.Context, args *GetArchiveArgs) (*GetArchiveResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["filters"] = args.Filters
		inputs["nameSelectors"] = args.NameSelectors
		inputs["osType"] = args.OsType
		inputs["tagSelectors"] = args.TagSelectors
		inputs["zone"] = args.Zone
	}
	outputs, err := ctx.Invoke("sakuracloud:index/getArchive:getArchive", inputs)
	if err != nil {
		return nil, err
	}
	return &GetArchiveResult{
		Description: outputs["description"],
		Filters: outputs["filters"],
		IconId: outputs["iconId"],
		Name: outputs["name"],
		NameSelectors: outputs["nameSelectors"],
		OsType: outputs["osType"],
		Size: outputs["size"],
		TagSelectors: outputs["tagSelectors"],
		Tags: outputs["tags"],
		Zone: outputs["zone"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getArchive.
type GetArchiveArgs struct {
	// The map of filter key and value.
	Filters interface{}
	// The list of names to filtering.
	NameSelectors interface{}
	// The slug of target public archive. Valid values are in `osType` section.
	OsType interface{}
	// The list of tags to filtering.
	TagSelectors interface{}
	// The ID of the zone.
	Zone interface{}
}

// A collection of values returned by getArchive.
type GetArchiveResult struct {
	// The description of the resource.
	Description interface{}
	Filters interface{}
	// The ID of the icon of the resource.
	IconId interface{}
	// The name of the resource.
	Name interface{}
	NameSelectors interface{}
	OsType interface{}
	// The size of the resource (unit:`GB`).
	Size interface{}
	TagSelectors interface{}
	// The tag list of the resources.
	Tags interface{}
	// The ID of the zone to which the resource belongs.
	Zone interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
