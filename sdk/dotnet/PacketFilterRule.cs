// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sakuracloud
{
    /// <summary>
    /// Provides a SakuraCloud Packet Filter Rule resource. This can be used to create, update, and delete Packet Filter Rules.
    /// 
    /// ## Import (not supported)
    /// 
    /// Import of Packet Filter Rule is not supported.
    /// 
    /// &gt; This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/packet_filter_rule.html.markdown.
    /// </summary>
    public partial class PacketFilterRule : Pulumi.CustomResource
    {
        /// <summary>
        /// The flag for allow/deny packets (default:`true`).
        /// </summary>
        [Output("allow")]
        public Output<bool?> Allow { get; private set; } = null!;

        /// <summary>
        /// The description of the expression.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Target destination port.
        /// Valid format is one of the following:
        /// * Number: `"0"` - `"65535"`
        /// * Range: `"xx-yy"`
        /// * Range (hex): `"0xPPPP/0xMMMM"`
        /// </summary>
        [Output("destPort")]
        public Output<string?> DestPort { get; private set; } = null!;

        /// <summary>
        /// The order of the expression (default:`1000`).
        /// </summary>
        [Output("order")]
        public Output<int?> Order { get; private set; } = null!;

        /// <summary>
        /// The ID of the Packet Filter to which the resource belongs.
        /// </summary>
        [Output("packetFilterId")]
        public Output<string> PacketFilterId { get; private set; } = null!;

        /// <summary>
        /// Protocol used in health check.  
        /// Valid value is one of the following: [ "tcp" / "udp" / "icmp" / "fragment" / "ip" ]
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// Target source network IP address or CIDR or range.  
        /// Valid format is one of the following:
        /// * IP address: `"xxx.xxx.xxx.xxx"`
        /// * CIDR: `"xxx.xxx.xxx.xxx/nn"`
        /// * Range: `"xxx.xxx.xxx.xxx/yyy.yyy.yyy.yyy"`
        /// </summary>
        [Output("sourceNw")]
        public Output<string?> SourceNw { get; private set; } = null!;

        /// <summary>
        /// Target source port.
        /// Valid format is one of the following:
        /// * Number: `"0"` - `"65535"`
        /// * Range: `"xx-yy"`
        /// * Range (hex): `"0xPPPP/0xMMMM"`
        /// </summary>
        [Output("sourcePort")]
        public Output<string?> SourcePort { get; private set; } = null!;

        /// <summary>
        /// target SakuraCloud zone
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a PacketFilterRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PacketFilterRule(string name, PacketFilterRuleArgs args, CustomResourceOptions? options = null)
            : base("sakuracloud:index/packetFilterRule:PacketFilterRule", name, args, MakeResourceOptions(options, ""))
        {
        }

        private PacketFilterRule(string name, Input<string> id, PacketFilterRuleState? state = null, CustomResourceOptions? options = null)
            : base("sakuracloud:index/packetFilterRule:PacketFilterRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PacketFilterRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PacketFilterRule Get(string name, Input<string> id, PacketFilterRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new PacketFilterRule(name, id, state, options);
        }
    }

    public sealed class PacketFilterRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The flag for allow/deny packets (default:`true`).
        /// </summary>
        [Input("allow")]
        public Input<bool>? Allow { get; set; }

        /// <summary>
        /// The description of the expression.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Target destination port.
        /// Valid format is one of the following:
        /// * Number: `"0"` - `"65535"`
        /// * Range: `"xx-yy"`
        /// * Range (hex): `"0xPPPP/0xMMMM"`
        /// </summary>
        [Input("destPort")]
        public Input<string>? DestPort { get; set; }

        /// <summary>
        /// The order of the expression (default:`1000`).
        /// </summary>
        [Input("order")]
        public Input<int>? Order { get; set; }

        /// <summary>
        /// The ID of the Packet Filter to which the resource belongs.
        /// </summary>
        [Input("packetFilterId", required: true)]
        public Input<string> PacketFilterId { get; set; } = null!;

        /// <summary>
        /// Protocol used in health check.  
        /// Valid value is one of the following: [ "tcp" / "udp" / "icmp" / "fragment" / "ip" ]
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// Target source network IP address or CIDR or range.  
        /// Valid format is one of the following:
        /// * IP address: `"xxx.xxx.xxx.xxx"`
        /// * CIDR: `"xxx.xxx.xxx.xxx/nn"`
        /// * Range: `"xxx.xxx.xxx.xxx/yyy.yyy.yyy.yyy"`
        /// </summary>
        [Input("sourceNw")]
        public Input<string>? SourceNw { get; set; }

        /// <summary>
        /// Target source port.
        /// Valid format is one of the following:
        /// * Number: `"0"` - `"65535"`
        /// * Range: `"xx-yy"`
        /// * Range (hex): `"0xPPPP/0xMMMM"`
        /// </summary>
        [Input("sourcePort")]
        public Input<string>? SourcePort { get; set; }

        /// <summary>
        /// target SakuraCloud zone
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public PacketFilterRuleArgs()
        {
        }
    }

    public sealed class PacketFilterRuleState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The flag for allow/deny packets (default:`true`).
        /// </summary>
        [Input("allow")]
        public Input<bool>? Allow { get; set; }

        /// <summary>
        /// The description of the expression.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Target destination port.
        /// Valid format is one of the following:
        /// * Number: `"0"` - `"65535"`
        /// * Range: `"xx-yy"`
        /// * Range (hex): `"0xPPPP/0xMMMM"`
        /// </summary>
        [Input("destPort")]
        public Input<string>? DestPort { get; set; }

        /// <summary>
        /// The order of the expression (default:`1000`).
        /// </summary>
        [Input("order")]
        public Input<int>? Order { get; set; }

        /// <summary>
        /// The ID of the Packet Filter to which the resource belongs.
        /// </summary>
        [Input("packetFilterId")]
        public Input<string>? PacketFilterId { get; set; }

        /// <summary>
        /// Protocol used in health check.  
        /// Valid value is one of the following: [ "tcp" / "udp" / "icmp" / "fragment" / "ip" ]
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// Target source network IP address or CIDR or range.  
        /// Valid format is one of the following:
        /// * IP address: `"xxx.xxx.xxx.xxx"`
        /// * CIDR: `"xxx.xxx.xxx.xxx/nn"`
        /// * Range: `"xxx.xxx.xxx.xxx/yyy.yyy.yyy.yyy"`
        /// </summary>
        [Input("sourceNw")]
        public Input<string>? SourceNw { get; set; }

        /// <summary>
        /// Target source port.
        /// Valid format is one of the following:
        /// * Number: `"0"` - `"65535"`
        /// * Range: `"xx-yy"`
        /// * Range (hex): `"0xPPPP/0xMMMM"`
        /// </summary>
        [Input("sourcePort")]
        public Input<string>? SourcePort { get; set; }

        /// <summary>
        /// target SakuraCloud zone
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public PacketFilterRuleState()
        {
        }
    }
}
