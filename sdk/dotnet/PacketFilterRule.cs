// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sakuracloud
{
    /// <summary>
    /// Manages a SakuraCloud Packet Filter Rules.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Sakuracloud = Pulumi.Sakuracloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var foobar = new Sakuracloud.PacketFilter("foobar", new Sakuracloud.PacketFilterArgs
    ///         {
    ///             Description = "description",
    ///         });
    ///         var rules = new Sakuracloud.PacketFilterRule("rules", new Sakuracloud.PacketFilterRuleArgs
    ///         {
    ///             PacketFilterId = foobar.Id,
    ///             Expressions = 
    ///             {
    ///                 new Sakuracloud.Inputs.PacketFilterRuleExpressionArgs
    ///                 {
    ///                     Protocol = "tcp",
    ///                     DestinationPort = "22",
    ///                 },
    ///                 new Sakuracloud.Inputs.PacketFilterRuleExpressionArgs
    ///                 {
    ///                     Protocol = "tcp",
    ///                     DestinationPort = "80",
    ///                 },
    ///                 new Sakuracloud.Inputs.PacketFilterRuleExpressionArgs
    ///                 {
    ///                     Protocol = "tcp",
    ///                     DestinationPort = "443",
    ///                 },
    ///                 new Sakuracloud.Inputs.PacketFilterRuleExpressionArgs
    ///                 {
    ///                     Protocol = "icmp",
    ///                 },
    ///                 new Sakuracloud.Inputs.PacketFilterRuleExpressionArgs
    ///                 {
    ///                     Protocol = "fragment",
    ///                 },
    ///                 new Sakuracloud.Inputs.PacketFilterRuleExpressionArgs
    ///                 {
    ///                     Protocol = "udp",
    ///                     SourcePort = "123",
    ///                 },
    ///                 new Sakuracloud.Inputs.PacketFilterRuleExpressionArgs
    ///                 {
    ///                     Protocol = "tcp",
    ///                     DestinationPort = "32768-61000",
    ///                 },
    ///                 new Sakuracloud.Inputs.PacketFilterRuleExpressionArgs
    ///                 {
    ///                     Protocol = "udp",
    ///                     DestinationPort = "32768-61000",
    ///                 },
    ///                 new Sakuracloud.Inputs.PacketFilterRuleExpressionArgs
    ///                 {
    ///                     Protocol = "ip",
    ///                     Allow = false,
    ///                     Description = "Deny ALL",
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [SakuracloudResourceType("sakuracloud:index/packetFilterRule:PacketFilterRule")]
    public partial class PacketFilterRule : Pulumi.CustomResource
    {
        /// <summary>
        /// One or more `expression` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        [Output("expressions")]
        public Output<ImmutableArray<Outputs.PacketFilterRuleExpression>> Expressions { get; private set; } = null!;

        /// <summary>
        /// The id of the packet filter that set expressions to. Changing this forces a new resource to be created.
        /// </summary>
        [Output("packetFilterId")]
        public Output<string> PacketFilterId { get; private set; } = null!;

        /// <summary>
        /// The name of zone that the PacketFilter Rule will be created. (e.g. `is1a`, `tk1a`). Changing this forces a new resource to be created.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a PacketFilterRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PacketFilterRule(string name, PacketFilterRuleArgs args, CustomResourceOptions? options = null)
            : base("sakuracloud:index/packetFilterRule:PacketFilterRule", name, args ?? new PacketFilterRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PacketFilterRule(string name, Input<string> id, PacketFilterRuleState? state = null, CustomResourceOptions? options = null)
            : base("sakuracloud:index/packetFilterRule:PacketFilterRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PacketFilterRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PacketFilterRule Get(string name, Input<string> id, PacketFilterRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new PacketFilterRule(name, id, state, options);
        }
    }

    public sealed class PacketFilterRuleArgs : Pulumi.ResourceArgs
    {
        [Input("expressions")]
        private InputList<Inputs.PacketFilterRuleExpressionArgs>? _expressions;

        /// <summary>
        /// One or more `expression` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.PacketFilterRuleExpressionArgs> Expressions
        {
            get => _expressions ?? (_expressions = new InputList<Inputs.PacketFilterRuleExpressionArgs>());
            set => _expressions = value;
        }

        /// <summary>
        /// The id of the packet filter that set expressions to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("packetFilterId", required: true)]
        public Input<string> PacketFilterId { get; set; } = null!;

        /// <summary>
        /// The name of zone that the PacketFilter Rule will be created. (e.g. `is1a`, `tk1a`). Changing this forces a new resource to be created.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public PacketFilterRuleArgs()
        {
        }
    }

    public sealed class PacketFilterRuleState : Pulumi.ResourceArgs
    {
        [Input("expressions")]
        private InputList<Inputs.PacketFilterRuleExpressionGetArgs>? _expressions;

        /// <summary>
        /// One or more `expression` blocks as defined below. Changing this forces a new resource to be created.
        /// </summary>
        public InputList<Inputs.PacketFilterRuleExpressionGetArgs> Expressions
        {
            get => _expressions ?? (_expressions = new InputList<Inputs.PacketFilterRuleExpressionGetArgs>());
            set => _expressions = value;
        }

        /// <summary>
        /// The id of the packet filter that set expressions to. Changing this forces a new resource to be created.
        /// </summary>
        [Input("packetFilterId")]
        public Input<string>? PacketFilterId { get; set; }

        /// <summary>
        /// The name of zone that the PacketFilter Rule will be created. (e.g. `is1a`, `tk1a`). Changing this forces a new resource to be created.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public PacketFilterRuleState()
        {
        }
    }
}
