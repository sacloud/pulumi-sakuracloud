// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sakuracloud
{
    /// <summary>
    /// The provider type for the sakuracloud package. By default, resources use package-wide configuration
    /// settings, however an explicit `Provider` instance may be created and passed during resource
    /// construction to achieve fine-grained programmatic control over provider settings. See the
    /// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
    /// 
    /// &gt; This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/index.html.markdown.
    /// </summary>
    public partial class Provider : Pulumi.ProviderResource
    {
        /// <summary>
        /// Create a Provider resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Provider(string name, ProviderArgs? args = null, ResourceOptions? options = null)
            : base("sakuracloud", name, args, MakeResourceOptions(options, ""))
        {
        }

        private static ResourceOptions MakeResourceOptions(ResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = ResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class ProviderArgs : Pulumi.ResourceArgs
    {
        [Input("acceptLanguage")]
        public Input<string>? AcceptLanguage { get; set; }

        [Input("apiRequestRateLimit", json: true)]
        public Input<int>? ApiRequestRateLimit { get; set; }

        [Input("apiRequestTimeout", json: true)]
        public Input<int>? ApiRequestTimeout { get; set; }

        [Input("apiRootUrl")]
        public Input<string>? ApiRootUrl { get; set; }

        [Input("retryInterval", json: true)]
        public Input<int>? RetryInterval { get; set; }

        [Input("retryMax", json: true)]
        public Input<int>? RetryMax { get; set; }

        /// <summary>
        /// Your SakuraCloud APIKey(secret)
        /// </summary>
        [Input("secret")]
        public Input<string>? Secret { get; set; }

        [Input("timeout", json: true)]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// Your SakuraCloud APIKey(token)
        /// </summary>
        [Input("token")]
        public Input<string>? Token { get; set; }

        [Input("trace", json: true)]
        public Input<bool>? Trace { get; set; }

        /// <summary>
        /// Target SakuraCloud Zone(is1a | is1b | tk1a | tk1v)
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public ProviderArgs()
        {
            Secret = Utilities.GetEnv("SAKURACLOUD_ACCESS_TOKEN_SECRET") ?? "";
            Token = Utilities.GetEnv("SAKURACLOUD_ACCESS_TOKEN") ?? "";
            Zone = Utilities.GetEnv("SAKURACLOUD_ZONE") ?? "is1b";
        }
    }
}
