// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sakuracloud
{
    /// <summary>
    /// Manages a SakuraCloud Auto Backup.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Sakuracloud = Pulumi.Sakuracloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var foobarDisk = new Sakuracloud.Disk("foobarDisk", new Sakuracloud.DiskArgs
    ///         {
    ///         });
    ///         var foobarAutoBackup = new Sakuracloud.AutoBackup("foobarAutoBackup", new Sakuracloud.AutoBackupArgs
    ///         {
    ///             DiskId = foobarDisk.Id,
    ///             Weekdays = 
    ///             {
    ///                 "mon",
    ///                 "tue",
    ///                 "wed",
    ///                 "thu",
    ///                 "fri",
    ///                 "sat",
    ///                 "sun",
    ///             },
    ///             MaxBackupNum = 5,
    ///             Description = "description",
    ///             Tags = 
    ///             {
    ///                 "tag1",
    ///                 "tag2",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [SakuracloudResourceType("sakuracloud:index/autoBackup:AutoBackup")]
    public partial class AutoBackup : Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the AutoBackup. The length of this value must be in the range [`1`-`512`].
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The disk id to backed up. Changing this forces a new resource to be created.
        /// </summary>
        [Output("diskId")]
        public Output<string> DiskId { get; private set; } = null!;

        /// <summary>
        /// The icon id to attach to the AutoBackup.
        /// </summary>
        [Output("iconId")]
        public Output<string?> IconId { get; private set; } = null!;

        /// <summary>
        /// The number backup files to keep. This must be in the range [`1`-`10`]. Default:`1`.
        /// </summary>
        [Output("maxBackupNum")]
        public Output<int?> MaxBackupNum { get; private set; } = null!;

        /// <summary>
        /// The name of the AutoBackup. The length of this value must be in the range [`1`-`64`].
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Any tags to assign to the AutoBackup.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// A list of weekdays to backed up. The values in the list must be in [`sun`/`mon`/`tue`/`wed`/`thu`/`fri`/`sat`].
        /// </summary>
        [Output("weekdays")]
        public Output<ImmutableArray<string>> Weekdays { get; private set; } = null!;

        /// <summary>
        /// The name of zone that the AutoBackup will be created. (e.g. `is1a`, `tk1a`). Changing this forces a new resource to be created.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a AutoBackup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AutoBackup(string name, AutoBackupArgs args, CustomResourceOptions? options = null)
            : base("sakuracloud:index/autoBackup:AutoBackup", name, args ?? new AutoBackupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AutoBackup(string name, Input<string> id, AutoBackupState? state = null, CustomResourceOptions? options = null)
            : base("sakuracloud:index/autoBackup:AutoBackup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AutoBackup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AutoBackup Get(string name, Input<string> id, AutoBackupState? state = null, CustomResourceOptions? options = null)
        {
            return new AutoBackup(name, id, state, options);
        }
    }

    public sealed class AutoBackupArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the AutoBackup. The length of this value must be in the range [`1`-`512`].
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The disk id to backed up. Changing this forces a new resource to be created.
        /// </summary>
        [Input("diskId", required: true)]
        public Input<string> DiskId { get; set; } = null!;

        /// <summary>
        /// The icon id to attach to the AutoBackup.
        /// </summary>
        [Input("iconId")]
        public Input<string>? IconId { get; set; }

        /// <summary>
        /// The number backup files to keep. This must be in the range [`1`-`10`]. Default:`1`.
        /// </summary>
        [Input("maxBackupNum")]
        public Input<int>? MaxBackupNum { get; set; }

        /// <summary>
        /// The name of the AutoBackup. The length of this value must be in the range [`1`-`64`].
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Any tags to assign to the AutoBackup.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("weekdays", required: true)]
        private InputList<string>? _weekdays;

        /// <summary>
        /// A list of weekdays to backed up. The values in the list must be in [`sun`/`mon`/`tue`/`wed`/`thu`/`fri`/`sat`].
        /// </summary>
        public InputList<string> Weekdays
        {
            get => _weekdays ?? (_weekdays = new InputList<string>());
            set => _weekdays = value;
        }

        /// <summary>
        /// The name of zone that the AutoBackup will be created. (e.g. `is1a`, `tk1a`). Changing this forces a new resource to be created.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public AutoBackupArgs()
        {
        }
    }

    public sealed class AutoBackupState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the AutoBackup. The length of this value must be in the range [`1`-`512`].
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The disk id to backed up. Changing this forces a new resource to be created.
        /// </summary>
        [Input("diskId")]
        public Input<string>? DiskId { get; set; }

        /// <summary>
        /// The icon id to attach to the AutoBackup.
        /// </summary>
        [Input("iconId")]
        public Input<string>? IconId { get; set; }

        /// <summary>
        /// The number backup files to keep. This must be in the range [`1`-`10`]. Default:`1`.
        /// </summary>
        [Input("maxBackupNum")]
        public Input<int>? MaxBackupNum { get; set; }

        /// <summary>
        /// The name of the AutoBackup. The length of this value must be in the range [`1`-`64`].
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Any tags to assign to the AutoBackup.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("weekdays")]
        private InputList<string>? _weekdays;

        /// <summary>
        /// A list of weekdays to backed up. The values in the list must be in [`sun`/`mon`/`tue`/`wed`/`thu`/`fri`/`sat`].
        /// </summary>
        public InputList<string> Weekdays
        {
            get => _weekdays ?? (_weekdays = new InputList<string>());
            set => _weekdays = value;
        }

        /// <summary>
        /// The name of zone that the AutoBackup will be created. (e.g. `is1a`, `tk1a`). Changing this forces a new resource to be created.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public AutoBackupState()
        {
        }
    }
}
