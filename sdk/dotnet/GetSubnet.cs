// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sakuracloud
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to retrieve information about a SakuraCloud Subnet.
        /// 
        /// &gt; This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/d/subnet.html.markdown.
        /// </summary>
        public static Task<GetSubnetResult> GetSubnet(GetSubnetArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSubnetResult>("sakuracloud:index/getSubnet:getSubnet", args, options.WithVersion());
    }

    public sealed class GetSubnetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The index of the target subnet.
        /// </summary>
        [Input("index", required: true)]
        public Input<int> Index { get; set; } = null!;

        /// <summary>
        /// The ID of the Internet resource.
        /// </summary>
        [Input("internetId", required: true)]
        public Input<string> InternetId { get; set; } = null!;

        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public GetSubnetArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetSubnetResult
    {
        public readonly int Index;
        public readonly string InternetId;
        /// <summary>
        /// Global IP address list.
        /// </summary>
        public readonly ImmutableArray<string> Ipaddresses;
        /// <summary>
        /// Max global IP address.
        /// </summary>
        public readonly string MaxIpaddress;
        /// <summary>
        /// Min global IP address.
        /// </summary>
        public readonly string MinIpaddress;
        /// <summary>
        /// Next hop address.
        /// </summary>
        public readonly string NextHop;
        /// <summary>
        /// The network address.
        /// </summary>
        public readonly string NwAddress;
        /// <summary>
        /// Network mask length of the Subnet.
        /// </summary>
        public readonly int NwMaskLen;
        /// <summary>
        /// The ID of the switch connected to the Subnet.
        /// </summary>
        public readonly string SwitchId;
        /// <summary>
        /// The ID of the zone to which the resource belongs.
        /// </summary>
        public readonly string Zone;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetSubnetResult(
            int index,
            string internetId,
            ImmutableArray<string> ipaddresses,
            string maxIpaddress,
            string minIpaddress,
            string nextHop,
            string nwAddress,
            int nwMaskLen,
            string switchId,
            string zone,
            string id)
        {
            Index = index;
            InternetId = internetId;
            Ipaddresses = ipaddresses;
            MaxIpaddress = maxIpaddress;
            MinIpaddress = minIpaddress;
            NextHop = nextHop;
            NwAddress = nwAddress;
            NwMaskLen = nwMaskLen;
            SwitchId = switchId;
            Zone = zone;
            Id = id;
        }
    }
}
