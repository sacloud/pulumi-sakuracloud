// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SakuraCloud
{
    public static partial class Invokes
    {
        public static Task<GetSubnetResult> GetSubnet(GetSubnetArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSubnetResult>("sakuracloud:index/getSubnet:getSubnet", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetSubnetArgs : Pulumi.InvokeArgs
    {
        [Input("index", required: true)]
        public int Index { get; set; }

        [Input("internetId", required: true)]
        public string InternetId { get; set; } = null!;

        [Input("zone")]
        public string? Zone { get; set; }

        public GetSubnetArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetSubnetResult
    {
        public readonly int Index;
        public readonly string InternetId;
        public readonly ImmutableArray<string> IpAddresses;
        public readonly string MaxIpAddress;
        public readonly string MinIpAddress;
        public readonly int Netmask;
        public readonly string NetworkAddress;
        public readonly string NextHop;
        public readonly string SwitchId;
        public readonly string Zone;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetSubnetResult(
            int index,
            string internetId,
            ImmutableArray<string> ipAddresses,
            string maxIpAddress,
            string minIpAddress,
            int netmask,
            string networkAddress,
            string nextHop,
            string switchId,
            string zone,
            string id)
        {
            Index = index;
            InternetId = internetId;
            IpAddresses = ipAddresses;
            MaxIpAddress = maxIpAddress;
            MinIpAddress = minIpAddress;
            Netmask = netmask;
            NetworkAddress = networkAddress;
            NextHop = nextHop;
            SwitchId = switchId;
            Zone = zone;
            Id = id;
        }
    }
}
