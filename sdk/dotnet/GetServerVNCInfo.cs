// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sakuracloud
{
    public static class GetServerVNCInfo
    {
        /// <summary>
        /// Get information about VNC for connecting to an existing Server.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Sakuracloud = Pulumi.Sakuracloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foobar = Output.Create(Sakuracloud.GetServerVNCInfo.InvokeAsync(new Sakuracloud.GetServerVNCInfoArgs
        ///         {
        ///             ServerId = sakuracloud_server.Foobar.Id,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServerVNCInfoResult> InvokeAsync(GetServerVNCInfoArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServerVNCInfoResult>("sakuracloud:index/getServerVNCInfo:getServerVNCInfo", args ?? new GetServerVNCInfoArgs(), options.WithVersion());
    }


    public sealed class GetServerVNCInfoArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of the Server.
        /// </summary>
        [Input("serverId", required: true)]
        public string ServerId { get; set; } = null!;

        /// <summary>
        /// The name of zone that the Server is in (e.g. `is1a`, `tk1a`).
        /// </summary>
        [Input("zone")]
        public string? Zone { get; set; }

        public GetServerVNCInfoArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServerVNCInfoResult
    {
        /// <summary>
        /// The host name for connecting by VNC.
        /// </summary>
        public readonly string Host;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The password for connecting by VNC.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// The port number for connecting by VNC.
        /// </summary>
        public readonly int Port;
        public readonly string ServerId;
        public readonly string Zone;

        [OutputConstructor]
        private GetServerVNCInfoResult(
            string host,

            string id,

            string password,

            int port,

            string serverId,

            string zone)
        {
            Host = host;
            Id = id;
            Password = password;
            Port = port;
            ServerId = serverId;
            Zone = zone;
        }
    }
}
