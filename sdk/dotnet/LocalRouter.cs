// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SakuraCloud
{
    public partial class LocalRouter : Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`]
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The icon id to attach to the LocalRouter
        /// </summary>
        [Output("iconId")]
        public Output<string?> IconId { get; private set; } = null!;

        /// <summary>
        /// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`]
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("networkInterface")]
        public Output<Outputs.LocalRouterNetworkInterface> NetworkInterface { get; private set; } = null!;

        [Output("peers")]
        public Output<ImmutableArray<Outputs.LocalRouterPeers>> Peers { get; private set; } = null!;

        /// <summary>
        /// A list of secret key used for peering from other LocalRouters
        /// </summary>
        [Output("secretKeys")]
        public Output<ImmutableArray<string>> SecretKeys { get; private set; } = null!;

        [Output("staticRoutes")]
        public Output<ImmutableArray<Outputs.LocalRouterStaticRoutes>> StaticRoutes { get; private set; } = null!;

        [Output("switch")]
        public Output<Outputs.LocalRouterSwitch> Switch { get; private set; } = null!;

        /// <summary>
        /// Any tags to assign to the LocalRouter
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a LocalRouter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LocalRouter(string name, LocalRouterArgs args, CustomResourceOptions? options = null)
            : base("sakuracloud:index/localRouter:LocalRouter", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private LocalRouter(string name, Input<string> id, LocalRouterState? state = null, CustomResourceOptions? options = null)
            : base("sakuracloud:index/localRouter:LocalRouter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LocalRouter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LocalRouter Get(string name, Input<string> id, LocalRouterState? state = null, CustomResourceOptions? options = null)
        {
            return new LocalRouter(name, id, state, options);
        }
    }

    public sealed class LocalRouterArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`]
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The icon id to attach to the LocalRouter
        /// </summary>
        [Input("iconId")]
        public Input<string>? IconId { get; set; }

        /// <summary>
        /// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`]
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkInterface", required: true)]
        public Input<Inputs.LocalRouterNetworkInterfaceArgs> NetworkInterface { get; set; } = null!;

        [Input("peers")]
        private InputList<Inputs.LocalRouterPeersArgs>? _peers;
        public InputList<Inputs.LocalRouterPeersArgs> Peers
        {
            get => _peers ?? (_peers = new InputList<Inputs.LocalRouterPeersArgs>());
            set => _peers = value;
        }

        [Input("staticRoutes")]
        private InputList<Inputs.LocalRouterStaticRoutesArgs>? _staticRoutes;
        public InputList<Inputs.LocalRouterStaticRoutesArgs> StaticRoutes
        {
            get => _staticRoutes ?? (_staticRoutes = new InputList<Inputs.LocalRouterStaticRoutesArgs>());
            set => _staticRoutes = value;
        }

        [Input("switch", required: true)]
        public Input<Inputs.LocalRouterSwitchArgs> Switch { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Any tags to assign to the LocalRouter
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public LocalRouterArgs()
        {
        }
    }

    public sealed class LocalRouterState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`]
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The icon id to attach to the LocalRouter
        /// </summary>
        [Input("iconId")]
        public Input<string>? IconId { get; set; }

        /// <summary>
        /// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`]
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkInterface")]
        public Input<Inputs.LocalRouterNetworkInterfaceGetArgs>? NetworkInterface { get; set; }

        [Input("peers")]
        private InputList<Inputs.LocalRouterPeersGetArgs>? _peers;
        public InputList<Inputs.LocalRouterPeersGetArgs> Peers
        {
            get => _peers ?? (_peers = new InputList<Inputs.LocalRouterPeersGetArgs>());
            set => _peers = value;
        }

        [Input("secretKeys")]
        private InputList<string>? _secretKeys;

        /// <summary>
        /// A list of secret key used for peering from other LocalRouters
        /// </summary>
        public InputList<string> SecretKeys
        {
            get => _secretKeys ?? (_secretKeys = new InputList<string>());
            set => _secretKeys = value;
        }

        [Input("staticRoutes")]
        private InputList<Inputs.LocalRouterStaticRoutesGetArgs>? _staticRoutes;
        public InputList<Inputs.LocalRouterStaticRoutesGetArgs> StaticRoutes
        {
            get => _staticRoutes ?? (_staticRoutes = new InputList<Inputs.LocalRouterStaticRoutesGetArgs>());
            set => _staticRoutes = value;
        }

        [Input("switch")]
        public Input<Inputs.LocalRouterSwitchGetArgs>? Switch { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Any tags to assign to the LocalRouter
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public LocalRouterState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class LocalRouterNetworkInterfaceArgs : Pulumi.ResourceArgs
    {
        [Input("ipAddresses", required: true)]
        private InputList<string>? _ipAddresses;
        public InputList<string> IpAddresses
        {
            get => _ipAddresses ?? (_ipAddresses = new InputList<string>());
            set => _ipAddresses = value;
        }

        [Input("netmask", required: true)]
        public Input<int> Netmask { get; set; } = null!;

        [Input("vip", required: true)]
        public Input<string> Vip { get; set; } = null!;

        [Input("vrid", required: true)]
        public Input<int> Vrid { get; set; } = null!;

        public LocalRouterNetworkInterfaceArgs()
        {
        }
    }

    public sealed class LocalRouterNetworkInterfaceGetArgs : Pulumi.ResourceArgs
    {
        [Input("ipAddresses", required: true)]
        private InputList<string>? _ipAddresses;
        public InputList<string> IpAddresses
        {
            get => _ipAddresses ?? (_ipAddresses = new InputList<string>());
            set => _ipAddresses = value;
        }

        [Input("netmask", required: true)]
        public Input<int> Netmask { get; set; } = null!;

        [Input("vip", required: true)]
        public Input<string> Vip { get; set; } = null!;

        [Input("vrid", required: true)]
        public Input<int> Vrid { get; set; } = null!;

        public LocalRouterNetworkInterfaceGetArgs()
        {
        }
    }

    public sealed class LocalRouterPeersArgs : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("peerId", required: true)]
        public Input<string> PeerId { get; set; } = null!;

        [Input("secretKey", required: true)]
        public Input<string> SecretKey { get; set; } = null!;

        public LocalRouterPeersArgs()
        {
        }
    }

    public sealed class LocalRouterPeersGetArgs : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("peerId", required: true)]
        public Input<string> PeerId { get; set; } = null!;

        [Input("secretKey", required: true)]
        public Input<string> SecretKey { get; set; } = null!;

        public LocalRouterPeersGetArgs()
        {
        }
    }

    public sealed class LocalRouterStaticRoutesArgs : Pulumi.ResourceArgs
    {
        [Input("nextHop", required: true)]
        public Input<string> NextHop { get; set; } = null!;

        [Input("prefix", required: true)]
        public Input<string> Prefix { get; set; } = null!;

        public LocalRouterStaticRoutesArgs()
        {
        }
    }

    public sealed class LocalRouterStaticRoutesGetArgs : Pulumi.ResourceArgs
    {
        [Input("nextHop", required: true)]
        public Input<string> NextHop { get; set; } = null!;

        [Input("prefix", required: true)]
        public Input<string> Prefix { get; set; } = null!;

        public LocalRouterStaticRoutesGetArgs()
        {
        }
    }

    public sealed class LocalRouterSwitchArgs : Pulumi.ResourceArgs
    {
        [Input("category")]
        public Input<string>? Category { get; set; }

        [Input("code", required: true)]
        public Input<string> Code { get; set; } = null!;

        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public LocalRouterSwitchArgs()
        {
        }
    }

    public sealed class LocalRouterSwitchGetArgs : Pulumi.ResourceArgs
    {
        [Input("category")]
        public Input<string>? Category { get; set; }

        [Input("code", required: true)]
        public Input<string> Code { get; set; } = null!;

        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public LocalRouterSwitchGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class LocalRouterNetworkInterface
    {
        public readonly ImmutableArray<string> IpAddresses;
        public readonly int Netmask;
        public readonly string Vip;
        public readonly int Vrid;

        [OutputConstructor]
        private LocalRouterNetworkInterface(
            ImmutableArray<string> ipAddresses,
            int netmask,
            string vip,
            int vrid)
        {
            IpAddresses = ipAddresses;
            Netmask = netmask;
            Vip = vip;
            Vrid = vrid;
        }
    }

    [OutputType]
    public sealed class LocalRouterPeers
    {
        public readonly string? Description;
        public readonly bool? Enabled;
        public readonly string PeerId;
        public readonly string SecretKey;

        [OutputConstructor]
        private LocalRouterPeers(
            string? description,
            bool? enabled,
            string peerId,
            string secretKey)
        {
            Description = description;
            Enabled = enabled;
            PeerId = peerId;
            SecretKey = secretKey;
        }
    }

    [OutputType]
    public sealed class LocalRouterStaticRoutes
    {
        public readonly string NextHop;
        public readonly string Prefix;

        [OutputConstructor]
        private LocalRouterStaticRoutes(
            string nextHop,
            string prefix)
        {
            NextHop = nextHop;
            Prefix = prefix;
        }
    }

    [OutputType]
    public sealed class LocalRouterSwitch
    {
        public readonly string? Category;
        public readonly string Code;
        public readonly string ZoneId;

        [OutputConstructor]
        private LocalRouterSwitch(
            string? category,
            string code,
            string zoneId)
        {
            Category = category;
            Code = code;
            ZoneId = zoneId;
        }
    }
    }
}
