// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sakuracloud
{
    /// <summary>
    /// Manages a SakuraCloud Local Router.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Sakuracloud = Pulumi.Sakuracloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var foobarSwitch = new Sakuracloud.Switch("foobarSwitch", new Sakuracloud.SwitchArgs
    ///         {
    ///         });
    ///         var peer = Output.Create(Sakuracloud.GetLocalRouter.InvokeAsync(new Sakuracloud.GetLocalRouterArgs
    ///         {
    ///             Filter = new Sakuracloud.Inputs.GetLocalRouterFilterArgs
    ///             {
    ///                 Names = 
    ///                 {
    ///                     "peer",
    ///                 },
    ///             },
    ///         }));
    ///         var foobarLocalRouter = new Sakuracloud.LocalRouter("foobarLocalRouter", new Sakuracloud.LocalRouterArgs
    ///         {
    ///             Description = "descriptio",
    ///             Tags = 
    ///             {
    ///                 "tag1",
    ///                 "tag2",
    ///             },
    ///             Switch = new Sakuracloud.Inputs.LocalRouterSwitchArgs
    ///             {
    ///                 Code = foobarSwitch.Id,
    ///                 Category = "cloud",
    ///                 ZoneId = "is1a",
    ///             },
    ///             NetworkInterface = new Sakuracloud.Inputs.LocalRouterNetworkInterfaceArgs
    ///             {
    ///                 Vip = "192.168.11.1",
    ///                 IpAddresses = 
    ///                 {
    ///                     "192.168.11.11",
    ///                     "192.168.11.12",
    ///                 },
    ///                 Netmask = 24,
    ///                 Vrid = 101,
    ///             },
    ///             StaticRoutes = 
    ///             {
    ///                 new Sakuracloud.Inputs.LocalRouterStaticRouteArgs
    ///                 {
    ///                     Prefix = "10.0.0.0/24",
    ///                     NextHop = "192.168.11.2",
    ///                 },
    ///                 new Sakuracloud.Inputs.LocalRouterStaticRouteArgs
    ///                 {
    ///                     Prefix = "172.16.0.0/16",
    ///                     NextHop = "192.168.11.3",
    ///                 },
    ///             },
    ///             Peers = 
    ///             {
    ///                 new Sakuracloud.Inputs.LocalRouterPeerArgs
    ///                 {
    ///                     PeerId = peer.Apply(peer =&gt; peer.Id),
    ///                     SecretKey = peer.Apply(peer =&gt; peer.SecretKeys[0]),
    ///                     Description = "description",
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [SakuracloudResourceType("sakuracloud:index/localRouter:LocalRouter")]
    public partial class LocalRouter : Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`].
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The icon id to attach to the LoadBalancer.
        /// </summary>
        [Output("iconId")]
        public Output<string?> IconId { get; private set; } = null!;

        /// <summary>
        /// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`].
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// An `network_interface` block as defined below.
        /// </summary>
        [Output("networkInterface")]
        public Output<Outputs.LocalRouterNetworkInterface> NetworkInterface { get; private set; } = null!;

        /// <summary>
        /// One or more `peer` blocks as defined below.
        /// </summary>
        [Output("peers")]
        public Output<ImmutableArray<Outputs.LocalRouterPeer>> Peers { get; private set; } = null!;

        /// <summary>
        /// A list of secret key used for peering from other LocalRouters.
        /// </summary>
        [Output("secretKeys")]
        public Output<ImmutableArray<string>> SecretKeys { get; private set; } = null!;

        /// <summary>
        /// One or more `static_route` blocks as defined below.
        /// </summary>
        [Output("staticRoutes")]
        public Output<ImmutableArray<Outputs.LocalRouterStaticRoute>> StaticRoutes { get; private set; } = null!;

        /// <summary>
        /// A `switch` block as defined below.
        /// </summary>
        [Output("switch")]
        public Output<Outputs.LocalRouterSwitch> Switch { get; private set; } = null!;

        /// <summary>
        /// Any tags to assign to the LoadBalancer.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a LocalRouter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LocalRouter(string name, LocalRouterArgs args, CustomResourceOptions? options = null)
            : base("sakuracloud:index/localRouter:LocalRouter", name, args ?? new LocalRouterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LocalRouter(string name, Input<string> id, LocalRouterState? state = null, CustomResourceOptions? options = null)
            : base("sakuracloud:index/localRouter:LocalRouter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LocalRouter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LocalRouter Get(string name, Input<string> id, LocalRouterState? state = null, CustomResourceOptions? options = null)
        {
            return new LocalRouter(name, id, state, options);
        }
    }

    public sealed class LocalRouterArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`].
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The icon id to attach to the LoadBalancer.
        /// </summary>
        [Input("iconId")]
        public Input<string>? IconId { get; set; }

        /// <summary>
        /// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`].
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// An `network_interface` block as defined below.
        /// </summary>
        [Input("networkInterface", required: true)]
        public Input<Inputs.LocalRouterNetworkInterfaceArgs> NetworkInterface { get; set; } = null!;

        [Input("peers")]
        private InputList<Inputs.LocalRouterPeerArgs>? _peers;

        /// <summary>
        /// One or more `peer` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LocalRouterPeerArgs> Peers
        {
            get => _peers ?? (_peers = new InputList<Inputs.LocalRouterPeerArgs>());
            set => _peers = value;
        }

        [Input("staticRoutes")]
        private InputList<Inputs.LocalRouterStaticRouteArgs>? _staticRoutes;

        /// <summary>
        /// One or more `static_route` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LocalRouterStaticRouteArgs> StaticRoutes
        {
            get => _staticRoutes ?? (_staticRoutes = new InputList<Inputs.LocalRouterStaticRouteArgs>());
            set => _staticRoutes = value;
        }

        /// <summary>
        /// A `switch` block as defined below.
        /// </summary>
        [Input("switch", required: true)]
        public Input<Inputs.LocalRouterSwitchArgs> Switch { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Any tags to assign to the LoadBalancer.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public LocalRouterArgs()
        {
        }
    }

    public sealed class LocalRouterState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the LocalRouter. The length of this value must be in the range [`1`-`512`].
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The icon id to attach to the LoadBalancer.
        /// </summary>
        [Input("iconId")]
        public Input<string>? IconId { get; set; }

        /// <summary>
        /// The name of the LocalRouter. The length of this value must be in the range [`1`-`64`].
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// An `network_interface` block as defined below.
        /// </summary>
        [Input("networkInterface")]
        public Input<Inputs.LocalRouterNetworkInterfaceGetArgs>? NetworkInterface { get; set; }

        [Input("peers")]
        private InputList<Inputs.LocalRouterPeerGetArgs>? _peers;

        /// <summary>
        /// One or more `peer` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LocalRouterPeerGetArgs> Peers
        {
            get => _peers ?? (_peers = new InputList<Inputs.LocalRouterPeerGetArgs>());
            set => _peers = value;
        }

        [Input("secretKeys")]
        private InputList<string>? _secretKeys;

        /// <summary>
        /// A list of secret key used for peering from other LocalRouters.
        /// </summary>
        public InputList<string> SecretKeys
        {
            get => _secretKeys ?? (_secretKeys = new InputList<string>());
            set => _secretKeys = value;
        }

        [Input("staticRoutes")]
        private InputList<Inputs.LocalRouterStaticRouteGetArgs>? _staticRoutes;

        /// <summary>
        /// One or more `static_route` blocks as defined below.
        /// </summary>
        public InputList<Inputs.LocalRouterStaticRouteGetArgs> StaticRoutes
        {
            get => _staticRoutes ?? (_staticRoutes = new InputList<Inputs.LocalRouterStaticRouteGetArgs>());
            set => _staticRoutes = value;
        }

        /// <summary>
        /// A `switch` block as defined below.
        /// </summary>
        [Input("switch")]
        public Input<Inputs.LocalRouterSwitchGetArgs>? Switch { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Any tags to assign to the LoadBalancer.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public LocalRouterState()
        {
        }
    }
}
