// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sakuracloud.Inputs
{

    public sealed class CertificateAuthorityClientArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The body of the CA's certificate in PEM format.
        /// </summary>
        [Input("certificate")]
        public Input<string>? Certificate { get; set; }

        /// <summary>
        /// Input for issuing a certificate.
        /// </summary>
        [Input("csr")]
        public Input<string>? Csr { get; set; }

        /// <summary>
        /// Input for issuing a certificate.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// Flag to suspend/hold the certificate.
        /// </summary>
        [Input("hold")]
        public Input<bool>? Hold { get; set; }

        /// <summary>
        /// The id of the certificate.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Current state of the certificate.
        /// </summary>
        [Input("issueState")]
        public Input<string>? IssueState { get; set; }

        /// <summary>
        /// The date on which the certificate validity period ends, in RFC3339 format.
        /// </summary>
        [Input("notAfter")]
        public Input<string>? NotAfter { get; set; }

        /// <summary>
        /// The date on which the certificate validity period begins, in RFC3339 format.
        /// </summary>
        [Input("notBefore")]
        public Input<string>? NotBefore { get; set; }

        /// <summary>
        /// Input for issuing a certificate.
        /// </summary>
        [Input("publicKey")]
        public Input<string>? PublicKey { get; set; }

        /// <summary>
        /// The body of the CA's certificate in PEM format.
        /// </summary>
        [Input("serialNumber")]
        public Input<string>? SerialNumber { get; set; }

        /// <summary>
        /// A `subject` block as defined below.
        /// </summary>
        [Input("subject", required: true)]
        public Input<Inputs.CertificateAuthorityClientSubjectArgs> Subject { get; set; } = null!;

        /// <summary>
        /// The URL for issuing the certificate.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// The number of hours after initial issuing that the certificate will become invalid.
        /// </summary>
        [Input("validityPeriodHours", required: true)]
        public Input<int> ValidityPeriodHours { get; set; } = null!;

        public CertificateAuthorityClientArgs()
        {
        }
    }
}
