// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sakuracloud
{
    /// <summary>
    /// Provides a SakuraCloud Icon resource. This can be used to create, update, and delete Icons.
    /// 
    /// &gt; This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/icon.html.markdown.
    /// </summary>
    public partial class Icon : Pulumi.CustomResource
    {
        /// <summary>
        /// The base64 encoded body of source content.
        /// </summary>
        [Output("base64content")]
        public Output<string?> Base64content { get; private set; } = null!;

        /// <summary>
        /// Base64 encoded icon data (size:`small`).
        /// </summary>
        [Output("body")]
        public Output<string> Body { get; private set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The path of source content file.
        /// </summary>
        [Output("source")]
        public Output<string?> Source { get; private set; } = null!;

        /// <summary>
        /// The tag list of the resources.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// URL to access this resource.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a Icon resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Icon(string name, IconArgs? args = null, CustomResourceOptions? options = null)
            : base("sakuracloud:index/icon:Icon", name, args, MakeResourceOptions(options, ""))
        {
        }

        private Icon(string name, Input<string> id, IconState? state = null, CustomResourceOptions? options = null)
            : base("sakuracloud:index/icon:Icon", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Icon resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Icon Get(string name, Input<string> id, IconState? state = null, CustomResourceOptions? options = null)
        {
            return new Icon(name, id, state, options);
        }
    }

    public sealed class IconArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The base64 encoded body of source content.
        /// </summary>
        [Input("base64content")]
        public Input<string>? Base64content { get; set; }

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The path of source content file.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tag list of the resources.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public IconArgs()
        {
        }
    }

    public sealed class IconState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The base64 encoded body of source content.
        /// </summary>
        [Input("base64content")]
        public Input<string>? Base64content { get; set; }

        /// <summary>
        /// Base64 encoded icon data (size:`small`).
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The path of source content file.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tag list of the resources.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// URL to access this resource.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public IconState()
        {
        }
    }
}
