// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SakuraCloud
{
    public partial class IPv4Ptr : Pulumi.CustomResource
    {
        /// <summary>
        /// The value of the PTR record. This must be FQDN
        /// </summary>
        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        /// <summary>
        /// The IP address to which the PTR record is set
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// The wait interval(in seconds) for retrying API call used when SakuraCloud API returns any errors
        /// </summary>
        [Output("retryInterval")]
        public Output<int?> RetryInterval { get; private set; } = null!;

        /// <summary>
        /// The maximum number of API call retries used when SakuraCloud API returns any errors
        /// </summary>
        [Output("retryMax")]
        public Output<int?> RetryMax { get; private set; } = null!;

        /// <summary>
        /// The name of zone that the IPv4 PTR will be created (e.g. `is1a`, `tk1a`)
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a IPv4Ptr resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IPv4Ptr(string name, IPv4PtrArgs args, CustomResourceOptions? options = null)
            : base("sakuracloud:index/iPv4Ptr:IPv4Ptr", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private IPv4Ptr(string name, Input<string> id, IPv4PtrState? state = null, CustomResourceOptions? options = null)
            : base("sakuracloud:index/iPv4Ptr:IPv4Ptr", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IPv4Ptr resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IPv4Ptr Get(string name, Input<string> id, IPv4PtrState? state = null, CustomResourceOptions? options = null)
        {
            return new IPv4Ptr(name, id, state, options);
        }
    }

    public sealed class IPv4PtrArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The value of the PTR record. This must be FQDN
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        /// <summary>
        /// The IP address to which the PTR record is set
        /// </summary>
        [Input("ipAddress", required: true)]
        public Input<string> IpAddress { get; set; } = null!;

        /// <summary>
        /// The wait interval(in seconds) for retrying API call used when SakuraCloud API returns any errors
        /// </summary>
        [Input("retryInterval")]
        public Input<int>? RetryInterval { get; set; }

        /// <summary>
        /// The maximum number of API call retries used when SakuraCloud API returns any errors
        /// </summary>
        [Input("retryMax")]
        public Input<int>? RetryMax { get; set; }

        /// <summary>
        /// The name of zone that the IPv4 PTR will be created (e.g. `is1a`, `tk1a`)
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public IPv4PtrArgs()
        {
        }
    }

    public sealed class IPv4PtrState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The value of the PTR record. This must be FQDN
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// The IP address to which the PTR record is set
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The wait interval(in seconds) for retrying API call used when SakuraCloud API returns any errors
        /// </summary>
        [Input("retryInterval")]
        public Input<int>? RetryInterval { get; set; }

        /// <summary>
        /// The maximum number of API call retries used when SakuraCloud API returns any errors
        /// </summary>
        [Input("retryMax")]
        public Input<int>? RetryMax { get; set; }

        /// <summary>
        /// The name of zone that the IPv4 PTR will be created (e.g. `is1a`, `tk1a`)
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public IPv4PtrState()
        {
        }
    }
}
