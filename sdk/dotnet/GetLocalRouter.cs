// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sakuracloud
{
    public static class GetLocalRouter
    {
        /// <summary>
        /// Get information about an existing Local Router.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Sakuracloud = Pulumi.Sakuracloud;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foobar = Output.Create(Sakuracloud.GetLocalRouter.InvokeAsync(new Sakuracloud.GetLocalRouterArgs
        ///         {
        ///             Filter = new Sakuracloud.Inputs.GetLocalRouterFilterArgs
        ///             {
        ///                 Names = 
        ///                 {
        ///                     "foobar",
        ///                 },
        ///             },
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetLocalRouterResult> InvokeAsync(GetLocalRouterArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetLocalRouterResult>("sakuracloud:index/getLocalRouter:getLocalRouter", args ?? new GetLocalRouterArgs(), options.WithVersion());
    }


    public sealed class GetLocalRouterArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// One or more values used for filtering, as defined below.
        /// </summary>
        [Input("filter")]
        public Inputs.GetLocalRouterFilterArgs? Filter { get; set; }

        public GetLocalRouterArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetLocalRouterResult
    {
        /// <summary>
        /// The description of the LocalRouter.
        /// </summary>
        public readonly string Description;
        public readonly Outputs.GetLocalRouterFilterResult? Filter;
        /// <summary>
        /// The icon id attached to the LocalRouter.
        /// </summary>
        public readonly string IconId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the LocalRouter.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// A list of `network_interface` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLocalRouterNetworkInterfaceResult> NetworkInterfaces;
        /// <summary>
        /// A list of `peer` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLocalRouterPeerResult> Peers;
        /// <summary>
        /// A list of secret key used for peering from other LocalRouters.
        /// </summary>
        public readonly ImmutableArray<string> SecretKeys;
        /// <summary>
        /// A list of `static_route` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLocalRouterStaticRouteResult> StaticRoutes;
        /// <summary>
        /// A list of `switch` blocks as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetLocalRouterSwitchResult> Switches;
        /// <summary>
        /// Any tags assigned to the LocalRouter.
        /// </summary>
        public readonly ImmutableArray<string> Tags;

        [OutputConstructor]
        private GetLocalRouterResult(
            string description,

            Outputs.GetLocalRouterFilterResult? filter,

            string iconId,

            string id,

            string name,

            ImmutableArray<Outputs.GetLocalRouterNetworkInterfaceResult> networkInterfaces,

            ImmutableArray<Outputs.GetLocalRouterPeerResult> peers,

            ImmutableArray<string> secretKeys,

            ImmutableArray<Outputs.GetLocalRouterStaticRouteResult> staticRoutes,

            ImmutableArray<Outputs.GetLocalRouterSwitchResult> switches,

            ImmutableArray<string> tags)
        {
            Description = description;
            Filter = filter;
            IconId = iconId;
            Id = id;
            Name = name;
            NetworkInterfaces = networkInterfaces;
            Peers = peers;
            SecretKeys = secretKeys;
            StaticRoutes = staticRoutes;
            Switches = switches;
            Tags = tags;
        }
    }
}
