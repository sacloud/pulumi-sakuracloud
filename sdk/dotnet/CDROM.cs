// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sakuracloud
{
    /// <summary>
    /// Provides a SakuraCloud CDROM (ISO-Image) resource. This can be used to create, update, and delete CDROMs.
    /// 
    /// &gt; This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/cdrom.html.markdown.
    /// </summary>
    public partial class CDROM : Pulumi.CustomResource
    {
        /// <summary>
        /// String of the value of the CDROM. 
        /// </summary>
        [Output("content")]
        public Output<string?> Content { get; private set; } = null!;

        [Output("contentFileName")]
        public Output<string?> ContentFileName { get; private set; } = null!;

        /// <summary>
        /// The description of the resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// MD5 hash value of the CDROM file.
        /// </summary>
        [Output("hash")]
        public Output<string> Hash { get; private set; } = null!;

        /// <summary>
        /// The ID of the icon.
        /// </summary>
        [Output("iconId")]
        public Output<string?> IconId { get; private set; } = null!;

        /// <summary>
        /// CDROM file to upload (format:`raw`).
        /// </summary>
        [Output("isoImageFile")]
        public Output<string?> IsoImageFile { get; private set; } = null!;

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The size of the resource (unit:`GB`).   
        /// Valid value is one of the following: [ 5 (default) / 10 ]
        /// </summary>
        [Output("size")]
        public Output<int?> Size { get; private set; } = null!;

        /// <summary>
        /// The tag list of the resources.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The ID of the zone to which the resource belongs.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a CDROM resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CDROM(string name, CDROMArgs? args = null, CustomResourceOptions? options = null)
            : base("sakuracloud:index/cDROM:CDROM", name, args, MakeResourceOptions(options, ""))
        {
        }

        private CDROM(string name, Input<string> id, CDROMState? state = null, CustomResourceOptions? options = null)
            : base("sakuracloud:index/cDROM:CDROM", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CDROM resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CDROM Get(string name, Input<string> id, CDROMState? state = null, CustomResourceOptions? options = null)
        {
            return new CDROM(name, id, state, options);
        }
    }

    public sealed class CDROMArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// String of the value of the CDROM. 
        /// </summary>
        [Input("content")]
        public Input<string>? Content { get; set; }

        [Input("contentFileName")]
        public Input<string>? ContentFileName { get; set; }

        /// <summary>
        /// The description of the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// MD5 hash value of the CDROM file.
        /// </summary>
        [Input("hash")]
        public Input<string>? Hash { get; set; }

        /// <summary>
        /// The ID of the icon.
        /// </summary>
        [Input("iconId")]
        public Input<string>? IconId { get; set; }

        /// <summary>
        /// CDROM file to upload (format:`raw`).
        /// </summary>
        [Input("isoImageFile")]
        public Input<string>? IsoImageFile { get; set; }

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The size of the resource (unit:`GB`).   
        /// Valid value is one of the following: [ 5 (default) / 10 ]
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tag list of the resources.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of the zone to which the resource belongs.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public CDROMArgs()
        {
        }
    }

    public sealed class CDROMState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// String of the value of the CDROM. 
        /// </summary>
        [Input("content")]
        public Input<string>? Content { get; set; }

        [Input("contentFileName")]
        public Input<string>? ContentFileName { get; set; }

        /// <summary>
        /// The description of the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// MD5 hash value of the CDROM file.
        /// </summary>
        [Input("hash")]
        public Input<string>? Hash { get; set; }

        /// <summary>
        /// The ID of the icon.
        /// </summary>
        [Input("iconId")]
        public Input<string>? IconId { get; set; }

        /// <summary>
        /// CDROM file to upload (format:`raw`).
        /// </summary>
        [Input("isoImageFile")]
        public Input<string>? IsoImageFile { get; set; }

        /// <summary>
        /// The name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The size of the resource (unit:`GB`).   
        /// Valid value is one of the following: [ 5 (default) / 10 ]
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// The tag list of the resources.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The ID of the zone to which the resource belongs.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public CDROMState()
        {
        }
    }
}
