// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sakuracloud
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to retrieve information about a SakuraCloud Bucket Object.
        /// 
        /// &gt; This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/d/bucket_object.html.markdown.
        /// </summary>
        public static Task<GetBucketObjectResult> GetBucketObject(GetBucketObjectArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetBucketObjectResult>("sakuracloud:index/getBucketObject:getBucketObject", args, options.WithVersion());
    }

    public sealed class GetBucketObjectArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access key of bucket. It must be provided, but it can also be sourced from the `SACLOUD_OJS_ACCESS_KEY_ID` or `AWS_ACCESS_KEY_ID` environment variable.
        /// </summary>
        [Input("accessKey", required: true)]
        public Input<string> AccessKey { get; set; } = null!;

        /// <summary>
        /// The name of bucket.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// The key of the bucket object.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// The secret key of bucket. It must be provided, but it can also be sourced from the `SACLOUD_OJS_SECRET_ACCESS_KEY` or `AWS_SECRET_ACCESS_KEY` environment variable.
        /// </summary>
        [Input("secretKey", required: true)]
        public Input<string> SecretKey { get; set; } = null!;

        public GetBucketObjectArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetBucketObjectResult
    {
        public readonly string AccessKey;
        /// <summary>
        /// String of the value of the bucket object. Set when Content-Type is `"text/*"` or `"application/json"`.
        /// </summary>
        public readonly string Body;
        public readonly string Bucket;
        /// <summary>
        /// Content-Type header value of the bucket object.
        /// </summary>
        public readonly string ContentType;
        /// <summary>
        /// ETag of the resource.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// URL for accessing the object via HTTP (type:`cache`).
        /// </summary>
        public readonly string HttpCacheUrl;
        /// <summary>
        /// URL for accessing the object via HTTP (type:`path`).
        /// </summary>
        public readonly string HttpPathUrl;
        /// <summary>
        /// URL for accessing the object via HTTP (type:`subdomain`).
        /// </summary>
        public readonly string HttpUrl;
        /// <summary>
        /// URL for accessing the object via HTTPS (type:`cache`)..
        /// </summary>
        public readonly string HttpsCacheUrl;
        public readonly string HttpsPathUrl;
        /// <summary>
        /// URL for accessing the object via HTTPS (type:`subdomain`).
        /// </summary>
        public readonly string HttpsUrl;
        public readonly string Key;
        /// <summary>
        /// Update date of the resource.
        /// </summary>
        public readonly string LastModified;
        public readonly string SecretKey;
        /// <summary>
        /// Size of the resource (unit:`byte`).
        /// </summary>
        public readonly int Size;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetBucketObjectResult(
            string accessKey,
            string body,
            string bucket,
            string contentType,
            string etag,
            string httpCacheUrl,
            string httpPathUrl,
            string httpUrl,
            string httpsCacheUrl,
            string httpsPathUrl,
            string httpsUrl,
            string key,
            string lastModified,
            string secretKey,
            int size,
            string id)
        {
            AccessKey = accessKey;
            Body = body;
            Bucket = bucket;
            ContentType = contentType;
            Etag = etag;
            HttpCacheUrl = httpCacheUrl;
            HttpPathUrl = httpPathUrl;
            HttpUrl = httpUrl;
            HttpsCacheUrl = httpsCacheUrl;
            HttpsPathUrl = httpsPathUrl;
            HttpsUrl = httpsUrl;
            Key = key;
            LastModified = lastModified;
            SecretKey = secretKey;
            Size = size;
            Id = id;
        }
    }
}
