// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sakuracloud
{
    /// <summary>
    /// Provides a SakuraCloud DNS Record resource. This can be used to create and delete DNS Records.
    /// 
    /// ## Import (not supported)
    /// 
    /// Import of DNS Record is not supported.
    /// 
    /// &gt; This content is derived from https://github.com/sacloud/terraform-provider-sakuracloud/blob/master/website/docs/r/dns_record.html.markdown.
    /// </summary>
    public partial class DNSRecord : Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of DNS zones to which the Record belongs.
        /// </summary>
        [Output("dnsId")]
        public Output<string> DnsId { get; private set; } = null!;

        /// <summary>
        /// The hostname of target Record. If "@" is specified, it indicates own zone.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The port number used when `type` is `SRV`. 
        /// </summary>
        [Output("port")]
        public Output<int?> Port { get; private set; } = null!;

        /// <summary>
        /// The priority used when `type` is `MX` or `SRV`.
        /// </summary>
        [Output("priority")]
        public Output<int?> Priority { get; private set; } = null!;

        /// <summary>
        /// The ttl value of the Record (unit:`second`). 
        /// </summary>
        [Output("ttl")]
        public Output<int?> Ttl { get; private set; } = null!;

        /// <summary>
        /// The Record type.  
        /// Valid value is one of the following: [ "A" / "AAAA" / "ALIAS" / "CNAME" / "NS" / "MX" / "TXT" / "SRV" / "CAA"]
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The value of the Record. 
        /// </summary>
        [Output("value")]
        public Output<string> Value { get; private set; } = null!;

        /// <summary>
        /// The weight used when `type` is `SRV`.
        /// </summary>
        [Output("weight")]
        public Output<int?> Weight { get; private set; } = null!;


        /// <summary>
        /// Create a DNSRecord resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DNSRecord(string name, DNSRecordArgs args, CustomResourceOptions? options = null)
            : base("sakuracloud:index/dNSRecord:DNSRecord", name, args, MakeResourceOptions(options, ""))
        {
        }

        private DNSRecord(string name, Input<string> id, DNSRecordState? state = null, CustomResourceOptions? options = null)
            : base("sakuracloud:index/dNSRecord:DNSRecord", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DNSRecord resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DNSRecord Get(string name, Input<string> id, DNSRecordState? state = null, CustomResourceOptions? options = null)
        {
            return new DNSRecord(name, id, state, options);
        }
    }

    public sealed class DNSRecordArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of DNS zones to which the Record belongs.
        /// </summary>
        [Input("dnsId", required: true)]
        public Input<string> DnsId { get; set; } = null!;

        /// <summary>
        /// The hostname of target Record. If "@" is specified, it indicates own zone.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The port number used when `type` is `SRV`. 
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The priority used when `type` is `MX` or `SRV`.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The ttl value of the Record (unit:`second`). 
        /// </summary>
        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        /// <summary>
        /// The Record type.  
        /// Valid value is one of the following: [ "A" / "AAAA" / "ALIAS" / "CNAME" / "NS" / "MX" / "TXT" / "SRV" / "CAA"]
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// The value of the Record. 
        /// </summary>
        [Input("value", required: true)]
        public Input<string> Value { get; set; } = null!;

        /// <summary>
        /// The weight used when `type` is `SRV`.
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public DNSRecordArgs()
        {
        }
    }

    public sealed class DNSRecordState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of DNS zones to which the Record belongs.
        /// </summary>
        [Input("dnsId")]
        public Input<string>? DnsId { get; set; }

        /// <summary>
        /// The hostname of target Record. If "@" is specified, it indicates own zone.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The port number used when `type` is `SRV`. 
        /// </summary>
        [Input("port")]
        public Input<int>? Port { get; set; }

        /// <summary>
        /// The priority used when `type` is `MX` or `SRV`.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The ttl value of the Record (unit:`second`). 
        /// </summary>
        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        /// <summary>
        /// The Record type.  
        /// Valid value is one of the following: [ "A" / "AAAA" / "ALIAS" / "CNAME" / "NS" / "MX" / "TXT" / "SRV" / "CAA"]
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The value of the Record. 
        /// </summary>
        [Input("value")]
        public Input<string>? Value { get; set; }

        /// <summary>
        /// The weight used when `type` is `SRV`.
        /// </summary>
        [Input("weight")]
        public Input<int>? Weight { get; set; }

        public DNSRecordState()
        {
        }
    }
}
