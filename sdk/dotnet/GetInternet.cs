// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.SakuraCloud
{
    public static partial class Invokes
    {
        public static Task<GetInternetResult> GetInternet(GetInternetArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetInternetResult>("sakuracloud:index/getInternet:getInternet", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetInternetArgs : Pulumi.InvokeArgs
    {
        [Input("filter")]
        public Inputs.GetInternetFilterArgs? Filter { get; set; }

        [Input("zone")]
        public string? Zone { get; set; }

        public GetInternetArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetInternetResult
    {
        public readonly int BandWidth;
        public readonly string Description;
        public readonly bool EnableIpv6;
        public readonly Outputs.GetInternetFilterResult? Filter;
        public readonly string Gateway;
        public readonly string IconId;
        public readonly ImmutableArray<string> IpAddresses;
        public readonly string Ipv6NetworkAddress;
        public readonly string Ipv6Prefix;
        public readonly int Ipv6PrefixLen;
        public readonly string MaxIpAddress;
        public readonly string MinIpAddress;
        public readonly string Name;
        public readonly int Netmask;
        public readonly string NetworkAddress;
        public readonly ImmutableArray<string> ServerIds;
        public readonly string SwitchId;
        public readonly ImmutableArray<string> Tags;
        public readonly string Zone;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetInternetResult(
            int bandWidth,
            string description,
            bool enableIpv6,
            Outputs.GetInternetFilterResult? filter,
            string gateway,
            string iconId,
            ImmutableArray<string> ipAddresses,
            string ipv6NetworkAddress,
            string ipv6Prefix,
            int ipv6PrefixLen,
            string maxIpAddress,
            string minIpAddress,
            string name,
            int netmask,
            string networkAddress,
            ImmutableArray<string> serverIds,
            string switchId,
            ImmutableArray<string> tags,
            string zone,
            string id)
        {
            BandWidth = bandWidth;
            Description = description;
            EnableIpv6 = enableIpv6;
            Filter = filter;
            Gateway = gateway;
            IconId = iconId;
            IpAddresses = ipAddresses;
            Ipv6NetworkAddress = ipv6NetworkAddress;
            Ipv6Prefix = ipv6Prefix;
            Ipv6PrefixLen = ipv6PrefixLen;
            MaxIpAddress = maxIpAddress;
            MinIpAddress = minIpAddress;
            Name = name;
            Netmask = netmask;
            NetworkAddress = networkAddress;
            ServerIds = serverIds;
            SwitchId = switchId;
            Tags = tags;
            Zone = zone;
            Id = id;
        }
    }

    namespace Inputs
    {

    public sealed class GetInternetFilterArgs : Pulumi.InvokeArgs
    {
        [Input("conditions")]
        private List<GetInternetFilterConditionsArgs>? _conditions;
        public List<GetInternetFilterConditionsArgs> Conditions
        {
            get => _conditions ?? (_conditions = new List<GetInternetFilterConditionsArgs>());
            set => _conditions = value;
        }

        [Input("id")]
        public string? Id { get; set; }

        [Input("names")]
        private List<string>? _names;
        public List<string> Names
        {
            get => _names ?? (_names = new List<string>());
            set => _names = value;
        }

        [Input("tags")]
        private List<string>? _tags;
        public List<string> Tags
        {
            get => _tags ?? (_tags = new List<string>());
            set => _tags = value;
        }

        public GetInternetFilterArgs()
        {
        }
    }

    public sealed class GetInternetFilterConditionsArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("values", required: true)]
        private List<string>? _values;
        public List<string> Values
        {
            get => _values ?? (_values = new List<string>());
            set => _values = value;
        }

        public GetInternetFilterConditionsArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetInternetFilterConditionsResult
    {
        public readonly string Name;
        public readonly ImmutableArray<string> Values;

        [OutputConstructor]
        private GetInternetFilterConditionsResult(
            string name,
            ImmutableArray<string> values)
        {
            Name = name;
            Values = values;
        }
    }

    [OutputType]
    public sealed class GetInternetFilterResult
    {
        public readonly ImmutableArray<GetInternetFilterConditionsResult> Conditions;
        public readonly string? Id;
        public readonly ImmutableArray<string> Names;
        public readonly ImmutableArray<string> Tags;

        [OutputConstructor]
        private GetInternetFilterResult(
            ImmutableArray<GetInternetFilterConditionsResult> conditions,
            string? id,
            ImmutableArray<string> names,
            ImmutableArray<string> tags)
        {
            Conditions = conditions;
            Id = id;
            Names = names;
            Tags = tags;
        }
    }
    }
}
