// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sakuracloud
{
    /// <summary>
    /// Manages a SakuraCloud GSLB.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Sakuracloud = Pulumi.Sakuracloud;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var foobar = new Sakuracloud.GSLB("foobar", new Sakuracloud.GSLBArgs
    ///         {
    ///             Description = "description",
    ///             HealthCheck = new Sakuracloud.Inputs.GSLBHealthCheckArgs
    ///             {
    ///                 DelayLoop = 10,
    ///                 HostHeader = "example.com",
    ///                 Path = "/",
    ///                 Protocol = "http",
    ///                 Status = "200",
    ///             },
    ///             Servers = 
    ///             {
    ///                 new Sakuracloud.Inputs.GSLBServerArgs
    ///                 {
    ///                     Enabled = true,
    ///                     IpAddress = "192.2.0.11",
    ///                     Weight = 1,
    ///                 },
    ///                 new Sakuracloud.Inputs.GSLBServerArgs
    ///                 {
    ///                     Enabled = true,
    ///                     IpAddress = "192.2.0.12",
    ///                     Weight = 1,
    ///                 },
    ///             },
    ///             SorryServer = "192.2.0.1",
    ///             Tags = 
    ///             {
    ///                 "tag1",
    ///                 "tag2",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [SakuracloudResourceType("sakuracloud:index/gSLB:GSLB")]
    public partial class GSLB : Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the GSLB. The length of this value must be in the range [`1`-`512`].
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The FQDN for accessing to the GSLB. This is typically used as value of CNAME record.
        /// </summary>
        [Output("fqdn")]
        public Output<string> Fqdn { get; private set; } = null!;

        /// <summary>
        /// A `health_check` block as defined below.
        /// </summary>
        [Output("healthCheck")]
        public Output<Outputs.GSLBHealthCheck> HealthCheck { get; private set; } = null!;

        /// <summary>
        /// The icon id to attach to the GSLB.
        /// </summary>
        [Output("iconId")]
        public Output<string?> IconId { get; private set; } = null!;

        /// <summary>
        /// The name of the GSLB. The length of this value must be in the range [`1`-`64`].
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// One or more `server` blocks as defined below.
        /// </summary>
        [Output("servers")]
        public Output<ImmutableArray<Outputs.GSLBServer>> Servers { get; private set; } = null!;

        /// <summary>
        /// The IP address of the SorryServer. This will be used when all servers are down.
        /// </summary>
        [Output("sorryServer")]
        public Output<string?> SorryServer { get; private set; } = null!;

        /// <summary>
        /// Any tags to assign to the GSLB.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The flag to enable weighted load-balancing.
        /// </summary>
        [Output("weighted")]
        public Output<bool?> Weighted { get; private set; } = null!;


        /// <summary>
        /// Create a GSLB resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GSLB(string name, GSLBArgs args, CustomResourceOptions? options = null)
            : base("sakuracloud:index/gSLB:GSLB", name, args ?? new GSLBArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GSLB(string name, Input<string> id, GSLBState? state = null, CustomResourceOptions? options = null)
            : base("sakuracloud:index/gSLB:GSLB", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GSLB resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GSLB Get(string name, Input<string> id, GSLBState? state = null, CustomResourceOptions? options = null)
        {
            return new GSLB(name, id, state, options);
        }
    }

    public sealed class GSLBArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the GSLB. The length of this value must be in the range [`1`-`512`].
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A `health_check` block as defined below.
        /// </summary>
        [Input("healthCheck", required: true)]
        public Input<Inputs.GSLBHealthCheckArgs> HealthCheck { get; set; } = null!;

        /// <summary>
        /// The icon id to attach to the GSLB.
        /// </summary>
        [Input("iconId")]
        public Input<string>? IconId { get; set; }

        /// <summary>
        /// The name of the GSLB. The length of this value must be in the range [`1`-`64`].
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("servers")]
        private InputList<Inputs.GSLBServerArgs>? _servers;

        /// <summary>
        /// One or more `server` blocks as defined below.
        /// </summary>
        public InputList<Inputs.GSLBServerArgs> Servers
        {
            get => _servers ?? (_servers = new InputList<Inputs.GSLBServerArgs>());
            set => _servers = value;
        }

        /// <summary>
        /// The IP address of the SorryServer. This will be used when all servers are down.
        /// </summary>
        [Input("sorryServer")]
        public Input<string>? SorryServer { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Any tags to assign to the GSLB.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The flag to enable weighted load-balancing.
        /// </summary>
        [Input("weighted")]
        public Input<bool>? Weighted { get; set; }

        public GSLBArgs()
        {
        }
    }

    public sealed class GSLBState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the GSLB. The length of this value must be in the range [`1`-`512`].
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The FQDN for accessing to the GSLB. This is typically used as value of CNAME record.
        /// </summary>
        [Input("fqdn")]
        public Input<string>? Fqdn { get; set; }

        /// <summary>
        /// A `health_check` block as defined below.
        /// </summary>
        [Input("healthCheck")]
        public Input<Inputs.GSLBHealthCheckGetArgs>? HealthCheck { get; set; }

        /// <summary>
        /// The icon id to attach to the GSLB.
        /// </summary>
        [Input("iconId")]
        public Input<string>? IconId { get; set; }

        /// <summary>
        /// The name of the GSLB. The length of this value must be in the range [`1`-`64`].
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("servers")]
        private InputList<Inputs.GSLBServerGetArgs>? _servers;

        /// <summary>
        /// One or more `server` blocks as defined below.
        /// </summary>
        public InputList<Inputs.GSLBServerGetArgs> Servers
        {
            get => _servers ?? (_servers = new InputList<Inputs.GSLBServerGetArgs>());
            set => _servers = value;
        }

        /// <summary>
        /// The IP address of the SorryServer. This will be used when all servers are down.
        /// </summary>
        [Input("sorryServer")]
        public Input<string>? SorryServer { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Any tags to assign to the GSLB.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The flag to enable weighted load-balancing.
        /// </summary>
        [Input("weighted")]
        public Input<bool>? Weighted { get; set; }

        public GSLBState()
        {
        }
    }
}
